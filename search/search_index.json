{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"build_tooling/compiler/","title":"Derleyici Se\u00e7enekleri ve Derleme S\u00fcreci","text":"<p>Bu d\u00f6k\u00fcmantasyon, GCC ve G++ derleyicilerinin temel kullan\u0131m\u0131n\u0131, VS Code ayarlar\u0131n\u0131 ve C/C++ derleme s\u00fcrecinin ad\u0131mlar\u0131n\u0131 a\u00e7\u0131klar.</p>"},{"location":"build_tooling/compiler/#gcc-gnu-compiler-collection","title":"\ud83d\udee0\ufe0f GCC (GNU Compiler Collection)","text":"<pre><code>gcc -o main.o main.c -Wall -Wextra -Wconversion -Wsign-conversion\n</code></pre> <ul> <li> <p>Wall: Temel uyar\u0131lar\u0131n tamam\u0131n\u0131 aktif eder.</p> </li> <li> <p>Wextra: Daha fazla (detayl\u0131) uyar\u0131 mesaj\u0131 g\u00f6sterir.</p> </li> <li> <p>Wconversion: T\u00fcr d\u00f6n\u00fc\u015f\u00fcmleriyle ilgili uyar\u0131lar\u0131 g\u00f6sterir.</p> </li> <li> <p>Wsign-conversion: \u0130\u015faretli (signed) ve i\u015faretsiz (unsigned) t\u00fcrler aras\u0131ndaki d\u00f6n\u00fc\u015f\u00fcmlerde uyar\u0131 verir.</p> </li> </ul>"},{"location":"build_tooling/compiler/#g-gnu-c-compiler","title":"\ud83e\udde0 G++ (GNU C++ Compiler)","text":"<pre><code>g++ -o main.o main.cpp -std=c++11 -I/source/includes\n</code></pre> <ul> <li> <p>std=c++11: Derleme s\u0131ras\u0131nda C++11 standard\u0131 kullan\u0131l\u0131r.</p> </li> <li> <p>I: Ba\u015fl\u0131k dosyalar\u0131n\u0131n bulundu\u011fu dizin belirtilir (include path).</p> </li> </ul>"},{"location":"build_tooling/compiler/#vs-code-derleyici-ayarlar","title":"\ud83d\udcbb VS Code Derleyici Ayarlar\u0131","text":"tasks.json<pre><code>{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"C++ Build\",\n      \"type\": \"shell\",\n      \"command\": \"g++\",\n      \"args\": [\n        \"-std=c++20\",\n        \"-Wall\",\n        \"-Wextra\",\n        \"-Wconversion\",\n        \"-Wsign-conversion\",\n        \"-Werror\",\n        \"-o\", \"main\",\n        \"main.cpp\"\n      ],\n      \"group\": {\n        \"kind\": \"build\",\n        \"isDefault\": true\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"build_tooling/compiler/#derleme-sureci","title":"\u2699\ufe0f Derleme S\u00fcreci","text":"<p>Derleme s\u00fcreci 4 temel ad\u0131mdan olu\u015fur:</p> <pre><code>graph LR\n  A[main.c] --&gt; |Preprocessor| B{main.i};\n  B --&gt; |Compiler| C[main.s];\n  C --&gt; |Assembler| D[main.s];\n  D --&gt; |Assembler| E[main.o];\n  E --&gt; |Linker| F[main];</code></pre> <p>1\ufe0f\u20e3 Preprocessor (\u00d6n \u0130\u015flemci): Yorum sat\u0131rlar\u0131 kald\u0131r\u0131l\u0131r, <code>#define</code> ve <code>#include</code> gibi direktifler i\u015flenir.</p> <pre><code>gcc -E main.c -o main.i\n</code></pre> <p>2\ufe0f\u20e3 Compiler (Derleyici): Kod, assembly diline \u00e7evrilir (donan\u0131ma daha yak\u0131n bir dil).</p> <pre><code>gcc -S main.i -o main.s\n</code></pre> <p>3\ufe0f\u20e3 Assembler (\u00c7evirici): Assembly kodu makine koduna d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr (binary).</p> <pre><code>gcc -c main.s -o main.o\n</code></pre> <p>4\ufe0f\u20e3 Linker (Ba\u011flay\u0131c\u0131): Object dosyalar birle\u015ftirilerek \u00e7al\u0131\u015ft\u0131r\u0131labilir program \u00fcretilir.</p> <pre><code>gcc main.o -o main\n</code></pre> <p>Not</p> <p>T\u00fcm bu ad\u0131mlar\u0131 tek komutla ger\u00e7ekle\u015ftirmek ve ara dosyalar\u0131 (.i, .s, .o) da g\u00f6rmek isterseniz: <pre><code>gcc -save-temps main.c -o main\n</code></pre> Bu komut, derleme s\u0131ras\u0131nda olu\u015fturulan t\u00fcm ge\u00e7ici dosyalar\u0131 da kaydeder.</p>"},{"location":"build_tooling/make/","title":"Make ve Makefile Kullan\u0131m\u0131","text":"<p>Make, yaz\u0131l\u0131m projelerinde kaynak kodlar\u0131n derlenmesi ve yap\u0131 ad\u0131mlar\u0131n\u0131n otomatikle\u015ftirilmesi i\u00e7in kullan\u0131lan g\u00fc\u00e7l\u00fc bir ara\u00e7t\u0131r. \u00d6zellikle b\u00fcy\u00fck projelerde zamandan tasarruf sa\u011flar ve yap\u0131 s\u00fcrecini standardize eder.</p> <p>\ud83d\udd25 Not: Makefile\u2019da girintiler TAB karakteriyle yap\u0131lmal\u0131d\u0131r. Bo\u015fluk (space) kullanmak hata ile sonu\u00e7lan\u0131r!</p>"},{"location":"build_tooling/make/#temel-sozdizimi-ve-semboller","title":"\ud83e\udde9 Temel S\u00f6zdizimi ve Semboller","text":"Sembol Anlam\u0131 <code>#</code> Yorum sat\u0131r\u0131. Sat\u0131r\u0131n en ba\u015f\u0131nda kullan\u0131lmal\u0131d\u0131r. <code>\\</code> Sat\u0131r\u0131 bir sonrakine ta\u015f\u0131mak i\u00e7in kullan\u0131l\u0131r (sat\u0131r devam\u0131). <code>@</code> Komutun \u00e7\u0131kt\u0131s\u0131 ekrana yaz\u0131lmaz. <code>make -s</code> ile ayn\u0131 etki yarat\u0131r. <code>:</code> Bir hedef (target) tan\u0131mlar. <code>::</code> Ayn\u0131 isme sahip birden fazla hedef tan\u0131m\u0131na izin verir. <code>$</code> De\u011fi\u015fken referanslar\u0131nda kullan\u0131l\u0131r. <code>=</code> Normal de\u011fi\u015fken atamas\u0131. <code>?=</code> De\u011fi\u015fken \u00f6nceden tan\u0131mlanmam\u0131\u015fsa de\u011fer atar. <code>:=</code> An\u0131nda de\u011ferlendirme (immediate evaluation). <code>$@</code> Hedef (target) ismi <code>$&lt;</code> \u0130lk ba\u011f\u0131ml\u0131l\u0131k (prerequisite) <code>$^</code> T\u00fcm ba\u011f\u0131ml\u0131l\u0131klar <code>$?</code> Hedeften daha yeni ba\u011f\u0131ml\u0131l\u0131klar <code>make -s</code> Komutlar\u0131 bast\u0131r\u0131r (sessiz \u00e7al\u0131\u015f\u0131r). <code>make -k</code> Hata al\u0131nsa bile m\u00fcmk\u00fcn oldu\u011funca devam eder. <code>make -i</code> Hatalar\u0131 yoksayarak devam eder. <p>*: Shell tarz\u0131 t\u00fcm dosyalarla e\u015fle\u015fir. \u00d6rn: <code>*.c</code></p> <p>%: Pattern (desen) e\u015fle\u015ftirme i\u00e7in kullan\u0131l\u0131r. \u00d6rn: <code>%.o: %.c</code></p> <pre><code>SRC := $(wildcard *.c)\nOBJ := $(SRC:.c=.o)\n</code></pre> <p>Bu kullan\u0131m t\u00fcm .c dosyalar\u0131n\u0131 .o uzant\u0131l\u0131 versiyonlara \u00e7evirir.</p>"},{"location":"build_tooling/make/#basit-makefile-ornekleri","title":"\ud83e\uddf1 Basit Makefile \u00d6rnekleri","text":""},{"location":"build_tooling/make/#ornek-1-temel-hedef","title":"\u00d6rnek 1: Temel Hedef","text":"<pre><code>hello:\n    echo \"hello, world\"\n\nall: hello\n    echo \"hi\"\n</code></pre>"},{"location":"build_tooling/make/#ornek-2-ayn-hedefe-sahip-birden-fazla-blok","title":"\u00d6rnek 2: Ayn\u0131 Hedefe Sahip Birden Fazla Blok","text":"<p>Not</p> <p>blah hedefi ilk kez \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda komutlar \u00e7al\u0131\u015f\u0131r ve dosya olu\u015fturulursa, tekrar make \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda blah is up to date mesaj\u0131 al\u0131n\u0131r. Bu durumda dosyada de\u011fi\u015fiklik yap\u0131lmad\u0131k\u00e7a hedef yeniden derlenmez.</p> <pre><code>blah::\n    echo \"hello\"\n\nblah::\n    echo \"hello again\"\n</code></pre>"},{"location":"build_tooling/make/#ornek-3-bagmllk-fark","title":"\u00d6rnek 3: Ba\u011f\u0131ml\u0131l\u0131k Fark\u0131","text":"<p>1. Y\u00f6ntem<pre><code>blah:\n    cc blah.c -o blah\n</code></pre> 2. Y\u00f6ntem<pre><code>blah: blah.c\n    cc blah.c -o blah\n</code></pre></p> <p>Not</p> <ol> <li>y\u00f6ntem tercih edilmelidir. B\u00f6ylece sadece blah.c dosyas\u0131 de\u011fi\u015fti\u011finde hedef yeniden derlenir. Bu y\u00f6ntem zamandan ve kaynaklardan tasarruf sa\u011flar.</li> </ol>"},{"location":"build_tooling/make/#degiskenler-ve-otomatik-degiskenler","title":"\ud83d\udce6 De\u011fi\u015fkenler ve Otomatik De\u011fi\u015fkenler","text":"Tan\u0131mlama<pre><code>CC = gcc\nCFLAGS = -Wall -O2\nTARGET = my_program\nOBJ = main.o utils.o\n</code></pre>"},{"location":"build_tooling/make/#kapsaml-makefile-ornegi","title":"\ud83e\uddf9 Kapsaml\u0131 Makefile \u00d6rne\u011fi","text":"<pre><code># De\u011fi\u015fkenler\nCC = gcc\nCFLAGS = -Wall -O2\nTARGET = my_program\nOBJ = main.o utils.o\n\n# Varsay\u0131lan hedef\nall: $(TARGET)\n\n# Hedef dosya\n$(TARGET): $(OBJ)\n    $(CC) $(CFLAGS) -o $@ $^\n\n# .o dosyalar\u0131n\u0131n nas\u0131l \u00fcretilece\u011fi\n%.o: %.c\n    $(CC) $(CFLAGS) -c $&lt; -o $@\n\n# Temizlik\nclean:\n    rm -f $(TARGET) $(OBJ)\n\n# Ger\u00e7ek dosya olmayan hedefler\n.PHONY: all clean\n</code></pre>"},{"location":"build_tooling/make/#wildcard-ve-pattern-matching","title":"\ud83e\udde0 wildcard ve pattern matching","text":"<p><code>wildcard</code>, belirli dosya desenlerini e\u015fle\u015ftirip listeleyen bir fonksiyondur. <code>wildcard</code> fonksiyonu mutlaka <code>:=</code> ile birlikte kullan\u0131lmal\u0131d\u0131r. Aksi halde geni\u015fletilmez.</p> <pre><code>thing_right := $(wildcard *.o)\n</code></pre>"}]}