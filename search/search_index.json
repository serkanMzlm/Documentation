{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"build_tooling/cmake/","title":"CMake Kullan\u0131m","text":"<p>CMake, yaz\u0131l\u0131m projelerinin derleme s\u00fcrecini y\u00f6neten, farkl\u0131 derleyiciler ve i\u015fletim sistemleri aras\u0131nda uyumluluk sa\u011flayan g\u00fc\u00e7l\u00fc bir ara\u00e7t\u0131r. Projelerin derleme se\u00e7eneklerini, ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 tan\u0131mlayarak yap\u0131land\u0131rma i\u015flemlerini otomatikle\u015ftirir.</p>"},{"location":"build_tooling/cmake/#temel-komutlar","title":"Temel Komutlar","text":"<pre><code>cmake --help                     # CMake ve build y\u00f6ntemleri hakk\u0131nda genel bilgi.\ncmake --help-variable-list       # Kullan\u0131labilir de\u011fi\u015fkenleri listeler.\ncmake --help-variable [variable] # Belirtilen de\u011fi\u015fken hakk\u0131nda detayl\u0131 bilgi.\n\n# Genel kullan\u0131m:\ncmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Release -S . -B build\ncmake -P CMakeLists.txt  # Build i\u015flemi yapmadan CMake dosyas\u0131n\u0131 \u00e7al\u0131\u015ft\u0131r\u0131r.\n</code></pre>"},{"location":"build_tooling/cmake/#projeyi-derleme-yontemleri","title":"Projeyi Derleme Y\u00f6ntemleri","text":"Y\u00f6ntem 1Y\u00f6ntem 2Y\u00f6ntem 3 <pre><code>mkdir build  \ncd build  \ncmake ..  \nmake\n</code></pre> <pre><code>cmake -S . -B build  \ncd build  \nmake \n</code></pre> <pre><code>cmake -B build  \ncmake --build build\n</code></pre>"},{"location":"build_tooling/cmake/#cmake-dosya-yaps","title":"CMake Dosya Yap\u0131s\u0131","text":"<ul> <li> <p>CMakeLists.txt ana dizinlerde kullan\u0131l\u0131r.</p> </li> <li> <p><code>.cmake</code> uzant\u0131l\u0131 dosyalar script veya mod\u00fcl olarak kullan\u0131l\u0131r:</p> <ul> <li>Directories (CMakeLists.txt)</li> <li>Scripts (<code>&lt;script&gt;.cmake</code>)</li> <li>Modules (<code>&lt;module&gt;.cmake</code>)</li> </ul> </li> <li><code>if - elseif - else</code>: Mant\u0131ksal i\u015flemler.</li> <li><code>foreach</code> ve <code>while</code> d\u00f6ng\u00fcleri: Yinelemeli i\u015flemler i\u00e7in.</li> <li><code>function</code>: Lokal kapsam.</li> <li><code>macro</code>: Global kapsam.</li> </ul>"},{"location":"build_tooling/cmake/#degiskenler","title":"De\u011fi\u015fkenler","text":"De\u011fi\u015fken Anlam\u0131 <code>PROJECT_NAME</code> project() komutunda belirtilen proje ad\u0131 <code>CMAKE_PROJECT_NAME</code> En \u00fcst dizindeki project() ad\u0131 <code>CMAKE_VERSION</code> CMake s\u00fcr\u00fcm\u00fc (\u00f6rn: 3.16.1) <code>CMAKE_GENERATOR</code> Yap\u0131 olu\u015fturucuyu belirtir (Ninja, Unix Makefiles) <code>CMAKE_SOURCE_DIR</code> Ana proje dizini <code>CMAKE_CURRENT_SOURCE_DIR</code> Bulunulan dizin <code>PROJECT_SOURCE_DIR</code> En son \u00e7a\u011fr\u0131lan project() dizini <code>CMAKE_BINARY_DIR</code> Build dizini <code>CMAKE_HOME_DIRECTORY</code> En \u00fcst dizin yolu <code>CMAKE_SYSTEM</code> \u0130\u015fletim sisteminin tam ad\u0131 <code>CMAKE_SYSTEM_NAME</code> \u0130\u015fletim sistemi ad\u0131 (Linux, Windows) <code>CMAKE_INSTALL_PREFIX</code> Kurulum dizini <code>CMAKE_MODULE_PATH</code> Ek CMake mod\u00fcllerinin yolu"},{"location":"build_tooling/cmake/#temel-komutlar-ve-kullanmlar","title":"Temel Komutlar ve Kullan\u0131mlar\u0131","text":"<ul> <li><code>cmake_minimum_required</code>: Kullan\u0131lmas\u0131 gereken minimum CMake s\u00fcr\u00fcm\u00fcn\u00fc belirtir.</li> <li><code>project</code>: Projeyi isimlendirir, kullan\u0131lacak dilleri ve versiyonlar\u0131 belirtir.</li> <li><code>add_executable</code>: Y\u00fcr\u00fct\u00fclebilir dosya olu\u015fturur.</li> <li><code>add_library</code>: K\u00fct\u00fcphane hedefleri olu\u015fturur.</li> <li><code>add_subdirectory</code>: Alt dizindeki CMake dosyas\u0131n\u0131 \u00e7al\u0131\u015ft\u0131r\u0131r.</li> <li><code>target_include_directories</code>: Hedefe \u00f6zel header dizinlerini tan\u0131mlar.<ul> <li>PUBLIC: Hem hedef hem t\u00fcketiciler</li> <li>PRIVATE: Sadece hedef</li> <li>INTERFACE: Sadece t\u00fcketiciler</li> </ul> </li> <li><code>install</code>: Dosyalar\u0131n belirli dizinlere kurulmas\u0131n\u0131 sa\u011flar</li> <li><code>find_package</code>: CMake mod\u00fcllerini bulur ve kullan\u0131ma haz\u0131rlar.</li> <li><code>add_definitions</code>: Derleme zaman\u0131 tan\u0131mlar ekler.</li> <li><code>option</code>: Derleme se\u00e7enekleri sunar.</li> <li><code>add_compile_options</code>: Derleyici parametreleri ekler.</li> <li><code>file(GLOB)</code> ve <code>file(GLOB_RECURSE)</code>: Dosya listeleri olu\u015fturur.</li> <li><code>execute_process</code>: Terminal komutlar\u0131n\u0131 \u00e7al\u0131\u015ft\u0131r\u0131r.</li> <li><code>set_property</code>: Nesnelere \u00f6zellik atar.</li> <li><code>set_target_properties</code>: Hedef \u00f6zelliklerini belirler.</li> <li><code>cmake_policy</code>: Uyumluluk davran\u0131\u015flar\u0131n\u0131 y\u00f6netir.</li> <li><code>add_custom_command</code> ve add_custom_target: \u00d6zel build komutlar\u0131 olu\u015fturur.</li> </ul> <pre><code>cmake_minimum_required(VERSION 3.10)\nproject(myProject LANGUAGES C CXX VERSION 1.0)\n\nfind_package(my_log CONFIG REQUIRED)\n\noption(ENABLE_FEATURE \"Enable feature X\" OFF)\n\nfile(GLOB_RECURSE SRC_FILES ${PROJECT_SOURCE_DIR}/src/*.cpp)\nexecute_process(COMMAND git pull WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n\ninclude_directories(${PROJECT_SOURCE_DIR}/inc)\nadd_library(my_add add.cpp)\nadd_executable(my_project main.cpp)\ntarget_link_libraries(my_project PRIVATE my_add)\nadd_subdirectory(add_dir)\n\nset_target_properties(myTarget PROPERTIES COMPILE_FLAGS \"-O3 -Wall\")\n\ntarget_include_directories(my_add PUBLIC ${PROJECT_SOURCE_DIR}/inc)\n\ninstall(FILES include/log.hpp DESTINATION include)\ninstall(TARGETS myLib EXPORT my_export DESTINATION lib)\n</code></pre> <p>Not</p> <p>Cache De\u011fi\u015fkenleri, belle\u011fe al\u0131nan de\u011fi\u015fkenler, tekrar hesaplanmay\u0131 \u00f6nler ve h\u0131zl\u0131 eri\u015fim sa\u011flar. <pre><code>set(VAR \"12\" CACHE STRING \"A\u00e7\u0131klama\")\n</code></pre></p> <p>Bu rehber, CMake'in temel ve geli\u015fmi\u015f \u00f6zelliklerini tan\u0131tmakta olup, projelerinizi etkili \u015fekilde y\u00f6netmeniz i\u00e7in gerekli bilgileri sunar.</p>"},{"location":"build_tooling/compiler/","title":"Derleyici Se\u00e7enekleri ve Derleme S\u00fcreci","text":"<p>Bu d\u00f6k\u00fcmantasyon, GCC ve G++ derleyicilerinin temel kullan\u0131m\u0131n\u0131, VS Code ayarlar\u0131n\u0131 ve C/C++ derleme s\u00fcrecinin ad\u0131mlar\u0131n\u0131 a\u00e7\u0131klar.</p>"},{"location":"build_tooling/compiler/#gcc-gnu-compiler-collection","title":"GCC (GNU Compiler Collection)","text":"<pre><code>gcc -o main.o main.c -Wall -Wextra -Wconversion -Wsign-conversion\n</code></pre> <ul> <li> <p>Wall: Temel uyar\u0131lar\u0131n tamam\u0131n\u0131 aktif eder.</p> </li> <li> <p>Wextra: Daha fazla (detayl\u0131) uyar\u0131 mesaj\u0131 g\u00f6sterir.</p> </li> <li> <p>Wconversion: T\u00fcr d\u00f6n\u00fc\u015f\u00fcmleriyle ilgili uyar\u0131lar\u0131 g\u00f6sterir.</p> </li> <li> <p>Wsign-conversion: \u0130\u015faretli (signed) ve i\u015faretsiz (unsigned) t\u00fcrler aras\u0131ndaki d\u00f6n\u00fc\u015f\u00fcmlerde uyar\u0131 verir.</p> </li> </ul>"},{"location":"build_tooling/compiler/#g-gnu-c-compiler","title":"G++ (GNU C++ Compiler)","text":"<pre><code>g++ -o main.o main.cpp -std=c++11 -I/source/includes\n</code></pre> <ul> <li> <p>std=c++11: Derleme s\u0131ras\u0131nda C++11 standard\u0131 kullan\u0131l\u0131r.</p> </li> <li> <p>I: Ba\u015fl\u0131k dosyalar\u0131n\u0131n bulundu\u011fu dizin belirtilir (include path).</p> </li> </ul>"},{"location":"build_tooling/compiler/#vs-code-derleyici-ayarlar","title":"VS Code Derleyici Ayarlar\u0131","text":"tasks.json<pre><code>{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"C++ Build\",\n      \"type\": \"shell\",\n      \"command\": \"g++\",\n      \"args\": [\n        \"-std=c++20\",\n        \"-Wall\",\n        \"-Wextra\",\n        \"-Wconversion\",\n        \"-Wsign-conversion\",\n        \"-Werror\",\n        \"-o\", \"main\",\n        \"main.cpp\"\n      ],\n      \"group\": {\n        \"kind\": \"build\",\n        \"isDefault\": true\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"build_tooling/compiler/#derleme-sureci","title":"Derleme S\u00fcreci","text":"<p>Derleme s\u00fcreci 4 temel ad\u0131mdan olu\u015fur:</p> <pre><code>graph LR\n  A[main.c] --&gt; |Preprocessor| B{main.i};\n  B --&gt; |Compiler| C[main.s];\n  C --&gt; |Assembler| D[main.s];\n  D --&gt; |Assembler| E[main.o];\n  E --&gt; |Linker| F[main];</code></pre> <p>1\ufe0f\u20e3 Preprocessor (\u00d6n \u0130\u015flemci): Yorum sat\u0131rlar\u0131 kald\u0131r\u0131l\u0131r, <code>#define</code> ve <code>#include</code> gibi direktifler i\u015flenir.</p> <pre><code>gcc -E main.c -o main.i\n</code></pre> <p>2\ufe0f\u20e3 Compiler (Derleyici): Kod, assembly diline \u00e7evrilir (donan\u0131ma daha yak\u0131n bir dil).</p> <pre><code>gcc -S main.i -o main.s\n</code></pre> <p>3\ufe0f\u20e3 Assembler (\u00c7evirici): Assembly kodu makine koduna d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr (binary).</p> <pre><code>gcc -c main.s -o main.o\n</code></pre> <p>4\ufe0f\u20e3 Linker (Ba\u011flay\u0131c\u0131): Object dosyalar birle\u015ftirilerek \u00e7al\u0131\u015ft\u0131r\u0131labilir program \u00fcretilir.</p> <pre><code>gcc main.o -o main\n</code></pre> <p>Not</p> <p>T\u00fcm bu ad\u0131mlar\u0131 tek komutla ger\u00e7ekle\u015ftirmek ve ara dosyalar\u0131 (.i, .s, .o) da g\u00f6rmek isterseniz: <pre><code>gcc -save-temps main.c -o main\n</code></pre> Bu komut, derleme s\u0131ras\u0131nda olu\u015fturulan t\u00fcm ge\u00e7ici dosyalar\u0131 da kaydeder.</p>"},{"location":"build_tooling/make/","title":"Make ve Makefile Kullan\u0131m\u0131","text":"<p>Make, yaz\u0131l\u0131m projelerinde kaynak kodlar\u0131n derlenmesi ve yap\u0131 ad\u0131mlar\u0131n\u0131n otomatikle\u015ftirilmesi i\u00e7in kullan\u0131lan g\u00fc\u00e7l\u00fc bir ara\u00e7t\u0131r. \u00d6zellikle b\u00fcy\u00fck projelerde zamandan tasarruf sa\u011flar ve yap\u0131 s\u00fcrecini standardize eder.</p> <p>Not</p> <p>Makefile\u2019da girintiler TAB karakteriyle yap\u0131lmal\u0131d\u0131r. Bo\u015fluk (space) kullanmak hata ile sonu\u00e7lan\u0131r!</p>"},{"location":"build_tooling/make/#temel-sozdizimi-ve-semboller","title":"Temel S\u00f6zdizimi ve Semboller","text":"Sembol Anlam\u0131 <code>#</code> Yorum sat\u0131r\u0131. Sat\u0131r\u0131n en ba\u015f\u0131nda kullan\u0131lmal\u0131d\u0131r. <code>\\</code> Sat\u0131r\u0131 bir sonrakine ta\u015f\u0131mak i\u00e7in kullan\u0131l\u0131r (sat\u0131r devam\u0131). <code>@</code> Komutun \u00e7\u0131kt\u0131s\u0131 ekrana yaz\u0131lmaz. <code>make -s</code> ile ayn\u0131 etki yarat\u0131r. <code>:</code> Bir hedef (target) tan\u0131mlar. <code>::</code> Ayn\u0131 isme sahip birden fazla hedef tan\u0131m\u0131na izin verir. <code>$</code> De\u011fi\u015fken referanslar\u0131nda kullan\u0131l\u0131r. <code>=</code> Normal de\u011fi\u015fken atamas\u0131. <code>?=</code> De\u011fi\u015fken \u00f6nceden tan\u0131mlanmam\u0131\u015fsa de\u011fer atar. <code>:=</code> An\u0131nda de\u011ferlendirme (immediate evaluation). <code>$@</code> Hedef (target) ismi <code>$&lt;</code> \u0130lk ba\u011f\u0131ml\u0131l\u0131k (prerequisite) <code>$^</code> T\u00fcm ba\u011f\u0131ml\u0131l\u0131klar <code>$?</code> Hedeften daha yeni ba\u011f\u0131ml\u0131l\u0131klar <code>make -s</code> Komutlar\u0131 bast\u0131r\u0131r (sessiz \u00e7al\u0131\u015f\u0131r). <code>make -k</code> Hata al\u0131nsa bile m\u00fcmk\u00fcn oldu\u011funca devam eder. <code>make -i</code> Hatalar\u0131 yoksayarak devam eder. <p>*: Shell tarz\u0131 t\u00fcm dosyalarla e\u015fle\u015fir. \u00d6rn: <code>*.c</code></p> <p>%: Pattern (desen) e\u015fle\u015ftirme i\u00e7in kullan\u0131l\u0131r. \u00d6rn: <code>%.o: %.c</code></p> <pre><code>SRC := $(wildcard *.c)\nOBJ := $(SRC:.c=.o)\n</code></pre> <p>Bu kullan\u0131m t\u00fcm .c dosyalar\u0131n\u0131 .o uzant\u0131l\u0131 versiyonlara \u00e7evirir.</p>"},{"location":"build_tooling/make/#basit-makefile-ornekleri","title":"Basit Makefile \u00d6rnekleri","text":""},{"location":"build_tooling/make/#ornek-1-temel-hedef","title":"\u00d6rnek 1: Temel Hedef","text":"<pre><code>hello:\n    echo \"hello, world\"\n\nall: hello\n    echo \"hi\"\n</code></pre>"},{"location":"build_tooling/make/#ornek-2-ayn-hedefe-sahip-birden-fazla-blok","title":"\u00d6rnek 2: Ayn\u0131 Hedefe Sahip Birden Fazla Blok","text":"<p>Not</p> <p>blah hedefi ilk kez \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda komutlar \u00e7al\u0131\u015f\u0131r ve dosya olu\u015fturulursa, tekrar make \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda blah is up to date mesaj\u0131 al\u0131n\u0131r. Bu durumda dosyada de\u011fi\u015fiklik yap\u0131lmad\u0131k\u00e7a hedef yeniden derlenmez.</p> <pre><code>blah::\n    echo \"hello\"\n\nblah::\n    echo \"hello again\"\n</code></pre>"},{"location":"build_tooling/make/#ornek-3-bagmllk-fark","title":"\u00d6rnek 3: Ba\u011f\u0131ml\u0131l\u0131k Fark\u0131","text":"<p>1. Y\u00f6ntem<pre><code>blah:\n    cc blah.c -o blah\n</code></pre> 2. Y\u00f6ntem<pre><code>blah: blah.c\n    cc blah.c -o blah\n</code></pre></p> <p>Not</p> <ol> <li>y\u00f6ntem tercih edilmelidir. B\u00f6ylece sadece blah.c dosyas\u0131 de\u011fi\u015fti\u011finde hedef yeniden derlenir. Bu y\u00f6ntem zamandan ve kaynaklardan tasarruf sa\u011flar.</li> </ol>"},{"location":"build_tooling/make/#degiskenler-ve-otomatik-degiskenler","title":"De\u011fi\u015fkenler ve Otomatik De\u011fi\u015fkenler","text":"Tan\u0131mlama<pre><code>CC = gcc\nCFLAGS = -Wall -O2\nTARGET = my_program\nOBJ = main.o utils.o\n</code></pre>"},{"location":"build_tooling/make/#kapsaml-makefile-ornegi","title":"Kapsaml\u0131 Makefile \u00d6rne\u011fi","text":"<pre><code># De\u011fi\u015fkenler\nCC = gcc\nCFLAGS = -Wall -O2\nTARGET = my_program\nOBJ = main.o utils.o\n\n# Varsay\u0131lan hedef\nall: $(TARGET)\n\n# Hedef dosya\n$(TARGET): $(OBJ)\n    $(CC) $(CFLAGS) -o $@ $^\n\n# .o dosyalar\u0131n\u0131n nas\u0131l \u00fcretilece\u011fi\n%.o: %.c\n    $(CC) $(CFLAGS) -c $&lt; -o $@\n\n# Temizlik\nclean:\n    rm -f $(TARGET) $(OBJ)\n\n# Ger\u00e7ek dosya olmayan hedefler\n.PHONY: all clean\n</code></pre>"},{"location":"build_tooling/make/#wildcard-ve-pattern-matching","title":"wildcard ve pattern matching","text":"<p><code>wildcard</code>, belirli dosya desenlerini e\u015fle\u015ftirip listeleyen bir fonksiyondur. <code>wildcard</code> fonksiyonu mutlaka <code>:=</code> ile birlikte kullan\u0131lmal\u0131d\u0131r. Aksi halde geni\u015fletilmez.</p> <pre><code>thing_right := $(wildcard *.o)\n</code></pre>"},{"location":"build_tooling/menuconfig/","title":"Kconfig ve Menuconfig Kullan\u0131m","text":"<p>Kconfig/Menuconfig, yaz\u0131l\u0131m projelerinde kullan\u0131c\u0131 taraf\u0131ndan ayarlanabilir yap\u0131land\u0131rma se\u00e7enekleri olu\u015fturmak i\u00e7in kullan\u0131lan bir sistemdir. Linux \u00e7ekirde\u011fi ba\u015fta olmak \u00fczere bir\u00e7ok projede yayg\u0131n olarak kullan\u0131l\u0131r.</p>"},{"location":"build_tooling/menuconfig/#temel-komutlar-ve-yaplar","title":"Temel Komutlar ve Yap\u0131lar","text":"<pre><code>mainmenu \"Ana Men\u00fc Ba\u015fl\u0131\u011f\u0131\"\n\ncomment \"Bilgi veya A\u00e7\u0131klama: $(VARIABLE)\"\n\nmenu \"Alt Men\u00fc Ba\u015fl\u0131\u011f\u0131\"\n    config CONFIG_NAME\n        bool \"G\u00f6r\u00fcnecek \u0130sim\"\n        default y\n        help\n            Bu ayar\u0131n ne i\u015fe yarad\u0131\u011f\u0131n\u0131 a\u00e7\u0131klar.\nendmenu\n</code></pre>"},{"location":"build_tooling/menuconfig/#temel-elemanlar","title":"Temel Elemanlar","text":"<ul> <li><code>mainmenu</code>: Ana ba\u015fl\u0131\u011f\u0131 belirler.</li> <li><code>comment</code>: Bilgilendirme amac\u0131yla kullan\u0131l\u0131r.</li> <li><code>menu / endmenu</code>: Alt men\u00fc olu\u015fturur.</li> <li><code>choice / endchoice</code>: Kullan\u0131c\u0131ya se\u00e7im grubu olu\u015fturur.</li> </ul>"},{"location":"build_tooling/menuconfig/#degisken-turleri-config","title":"De\u011fi\u015fken T\u00fcrleri (config)","text":"<ul> <li><code>bool</code>: A\u00e7\u0131k veya kapal\u0131 (y/n)</li> <li><code>tristate</code>: \u00dc\u00e7 se\u00e7enekli; kapal\u0131 (n), a\u00e7\u0131k (y) veya mod\u00fcl (m)</li> <li><code>string</code>: Metin verisi</li> <li><code>int</code>: Tam say\u0131</li> <li><code>hex</code>: Hexadecimal say\u0131</li> </ul>"},{"location":"build_tooling/menuconfig/#ornek-yaplar","title":"\u00d6rnek Yap\u0131lar","text":"<pre><code>menu \"Toolchain\"\n\n    choice\n        prompt \"Platform\"\n        default PLATFORM_NUTTX\n\n        config PLATFORM_NUTTX\n            bool \"nuttx\"\n\n        config PLATFORM_POSIX\n            bool \"posix\"\n    endchoice\n\n    config USER_NAME\n        string \"Username\"\n        default \"serkan\"\n        help\n            Enter your username.\n\n    config USER_AGE\n        int \"User Age\"\n        default 5\n        range 1 8\n        help\n            Enter your age (1-8).\n\n    config BOARD_PLATFORM\n        string\n        default \"nuttx\" if PLATFORM_NUTTX\n        default \"posix\" if PLATFORM_POSIX\n\n    config CLOCK_PLL_N\n        int \"PLL Clock\"\n        depends on USE_CLOCK_PLL\n        default 20\n        range 8 86\n\nendmenu\n</code></pre>"},{"location":"build_tooling/menuconfig/#sartl-menuler-ve-secimler","title":"\u015eartl\u0131 Men\u00fcler ve Se\u00e7imler","text":"<p>Men\u00fclerin ve se\u00e7eneklerin g\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fc ko\u015fullara ba\u011fl\u0131 olabilir.</p> <pre><code>menu \"Drivers\"\n    depends on PLATFORM_QURT || PLATFORM_POSIX\n    source \"src/Kconfig\"\nendmenu\n</code></pre>"},{"location":"build_tooling/menuconfig/#secime-bagl-otomatik-aktiflestirme-select","title":"Se\u00e7ime Ba\u011fl\u0131 Otomatik Aktifle\u015ftirme (select)","text":"<p>Bir yap\u0131land\u0131rma se\u00e7ene\u011fi se\u00e7ildi\u011finde ba\u015fka se\u00e7enekleri otomatik olarak etkinle\u015ftirmek i\u00e7in kullan\u0131l\u0131r. <pre><code>config MODULE_PERIPH_ADC\n    bool \"ADC peripheral driver\"\n    depends on PLATFORM_NUTTX\n    select MODULE_PERIPH_COMMON\n</code></pre></p> <ul> <li><code>tristate</code> tipinde yap\u0131land\u0131rmalar \u00fc\u00e7 duruma sahiptir:<ul> <li>n: Kapat\u0131lm\u0131\u015f (se\u00e7im yok)</li> <li>y: Sabit olarak a\u00e7\u0131k</li> <li>m: Mod\u00fcl olarak derlenir, \u00e7al\u0131\u015fma zaman\u0131nda y\u00fcklenebilir veya kald\u0131r\u0131labilir.</li> </ul> </li> </ul> <pre><code>menu \"Advanced Features\"\n\n    choice\n        tristate \"Enable advanced features\"\n\n        config ADV_FEATURE_1\n            tristate \"Feature 1\"\n\n        config ADV_FEATURE_2\n            tristate \"Feature 2\"\n\n        if ADV_FEATURE_2\n            choice\n                tristate \"Sub Features\"\n\n                config SUB_FEATURE_1\n                    tristate \"Sub Feature 1\"\n\n                config SUB_FEATURE_2\n                    tristate \"Sub Feature 2\"\n            endchoice\n        endif\n    endchoice\nendmenu\n</code></pre>"},{"location":"build_tooling/menuconfig/#komutlar-hakknda-ksa-bilgiler","title":"Komutlar Hakk\u0131nda K\u0131sa Bilgiler","text":"Komut Anlam\u0131 <code>mainmenu</code> Men\u00fc ana ba\u015fl\u0131\u011f\u0131n\u0131 olu\u015fturur. <code>menu/endmenu</code> Men\u00fc olu\u015fturur ve sonland\u0131r\u0131r. <code>choice/endchoice</code> Se\u00e7im gruplar\u0131 olu\u015fturur. <code>config</code> Yap\u0131land\u0131rma se\u00e7eneklerini tan\u0131mlar. <code>default</code> Varsay\u0131lan de\u011feri belirler. <code>depends on</code> \u015earta ba\u011fl\u0131 g\u00f6r\u00fcn\u00fcrl\u00fck sa\u011flar. <code>select</code> Se\u00e7enekleri otomatik etkinle\u015ftirir. <code>range</code> Say\u0131sal de\u011fer aral\u0131\u011f\u0131n\u0131 s\u0131n\u0131rlar. <code>help</code> Kullan\u0131c\u0131ya a\u00e7\u0131klama sunar."},{"location":"build_tooling/menuconfig/#kullanm-tavsiyeleri","title":"Kullan\u0131m Tavsiyeleri","text":"<ul> <li>Yap\u0131land\u0131rma se\u00e7eneklerini anlaml\u0131 ve a\u00e7\u0131klay\u0131c\u0131 isimlerle belirtin.</li> <li><code>help</code> k\u0131s\u0131mlar\u0131n\u0131 a\u00e7\u0131klay\u0131c\u0131 yaz\u0131n.</li> <li>Men\u00fcleri mant\u0131kl\u0131 ve kullan\u0131c\u0131 dostu bir hiyerar\u015fide tutun.</li> <li>\u015earta ba\u011fl\u0131 g\u00f6r\u00fcnebilirlik ile karma\u015f\u0131kl\u0131\u011f\u0131 azalt\u0131n.</li> </ul> <p>Bu rehber, Kconfig ve Menuconfig dosyalar\u0131n\u0131 etkili kullanman\u0131z i\u00e7in temel ve ileri d\u00fczey bilgileri i\u00e7erir.</p>"},{"location":"devops/docker/","title":"Docker","text":""},{"location":"devops/docker/#genel-kavramlar","title":"Genel Kavramlar","text":"<ul> <li>Container: Uygulaman\u0131n kodunu, ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 ve \u00e7al\u0131\u015fmas\u0131 i\u00e7in gereken her \u015feyi bir araya getiren, i\u015fletim sistemi seviyesinde izole edilmi\u015f ta\u015f\u0131nabilir \u00e7al\u0131\u015fma ortam\u0131d\u0131r.</li> <li>Docker: Konteynerleri kolayca olu\u015fturup y\u00f6netmenizi sa\u011flayan platformdur. Linux \u00e7ekirde\u011finin isim alanlar\u0131 (namespaces) ve cgroups \u00f6zelliklerini kullanarak hafif sanalla\u015ft\u0131rma sa\u011flar.</li> <li>Docker Hub: Haz\u0131r container image\u2019lar\u0131n\u0131n payla\u015f\u0131ld\u0131\u011f\u0131 merkezi kay\u0131t defteridir.</li> <li>Volume: Konteyner ya\u015fam d\u00f6ng\u00fcs\u00fcnden ba\u011f\u0131ms\u0131z veri saklamak i\u00e7in kullan\u0131l\u0131r. Konteyner silinse bile volume i\u00e7indeki veriler korunur.</li> </ul>"},{"location":"devops/docker/#image-yonetimi","title":"Image Y\u00f6netimi","text":"<p>pull<pre><code>docker pull ubuntu:20.04\ndocker pull node:16\ndocker pull redis\n</code></pre> Listeleme<pre><code>docker image ls    # \u0130ndirilen image'lar\u0131 g\u00f6sterir\ndocker image tag ubuntu:20.04 my_ubuntu:latest\ndocker image rm &lt;IMAGE_ID_or_NAME&gt;\n</code></pre></p>"},{"location":"devops/docker/#konteyner-yonetimi","title":"Konteyner Y\u00f6netimi","text":"run<pre><code>docker run [OPTIONS] IMAGE [COMMAND] [ARGS...]\n</code></pre> <ul> <li><code>-d</code> Arka planda (detached) \u00e7al\u0131\u015ft\u0131r\u0131r.</li> <li><code>-it</code> \u0130nteraktif terminal a\u00e7ar (<code>-i</code> stdin a\u00e7\u0131k, <code>-t</code> tty tahsis eder).</li> <li><code>--name &lt;name&gt;</code> Konteynere kolay hat\u0131rlan\u0131r bir isim verir.</li> <li><code>-p &lt;hostPort&gt;:&lt;containerPort&gt;</code> Port e\u015flemesi yapar.</li> <li><code>-v &lt;hostPath&gt;:&lt;containerPath&gt;</code> Host\u2013konteyner aras\u0131nda volume mount eder.</li> <li><code>-e KEY=VALUE</code> Ortam de\u011fi\u015fkeni ayarlar.</li> <li><code>--network &lt;net&gt;</code> Belirli Docker a\u011f\u0131na ba\u011flar.</li> <li><code>--link &lt;other&gt;:&lt;alias&gt;</code> Eski stil ba\u011flant\u0131, yerine kullan\u0131c\u0131 tan\u0131ml\u0131 a\u011f ve DNS \u00f6nerilir.</li> </ul> <p><pre><code>docker run -d --name my_mongo -p 27018:27017 -v ~/mongo-data:/data/db mongo:6.0\n</code></pre> <pre><code>docker stop my_mongo # Durdurma\ndocker start my_mongo # Ba\u015flatma\ndocker rm my_mongo # \u00c7al\u0131\u015ft\u0131rma\ndocker container prune # T\u00fcm durdurulmu\u015f konteynerleri temizleme\n\ndocker ps # \u00c7al\u0131\u015fan konteynerler listeleme\ndocker ps -a # T\u00fcm konteynerler listeleme\n\ndocker attach my_mongo # Ba\u011flanma\ndocker logs my_mongo # Log g\u00f6r\u00fcnt\u00fcleme \ndocker inspect my_mongo # Detayl\u0131 bilgi\n</code></pre></p> A\u011f Y\u00f6netimi<pre><code>docker network ls # Listeleme\ndocker network create --driver bridge --subnet 172.18.0.0/16 my_bridge_net # Olu\u015fturma\ndocker network rm my_bridge_net # Silme\n</code></pre> Volume Y\u00f6netimi<pre><code>docker volume ls\ndocker volume create my_volume\ndocker volume rm my_volume\ndocker volume prune # T\u00fcm kullan\u0131lmayan vol\u00fcmleri temizleme\n</code></pre>"},{"location":"devops/docker/#dockerfile-build","title":"Dockerfile &amp; Build","text":"<pre><code>docker build -t my_app:1.0 . # Dockerfile ile image olu\u015fturma (-t : Olu\u015facak image\u2019a isim ve tag verir.)\n\ndocker-compose build\ndocker-compose up -d\ndocker-compose down\n</code></pre>"},{"location":"devops/docker/#ipuclar","title":"\u0130pu\u00e7lar\u0131","text":"<ul> <li>Veri kal\u0131c\u0131l\u0131\u011f\u0131 i\u00e7in her zaman -v veya named volume kullan\u0131n.</li> <li>A\u011f izolasyonu ve container DNS\u2019yi kullanmak i\u00e7in custom network tercih edin, <code>--link</code> art\u0131k eskidi.</li> <li>Geli\u015ftirme a\u015famas\u0131nda <code>--rm</code> bayra\u011f\u0131yla otomatik silinmeyi sa\u011flay\u0131n:</li> </ul> <pre><code>docker run --rm -it my_app:dev\n</code></pre> <ul> <li>Image katmanlar\u0131n\u0131 k\u00fc\u00e7\u00fcltmek, multi-stage build ile gereksiz dosyalar\u0131 final image\u2019dan \u00e7\u0131karmak performans ve g\u00fcvenlik i\u00e7in kritiktir</li> </ul> <pre><code>\n</code></pre>"},{"location":"devops/docker/#docker-network-turleri","title":"Docker Network T\u00fcrleri","text":"<p>Docker, konteynerler aras\u0131 ve host ile container aras\u0131ndaki ileti\u015fimi farkl\u0131 a\u011f s\u00fcr\u00fcc\u00fcleri (drivers) ile y\u00f6netir:</p> A\u011f T\u00fcr\u00fc A\u00e7\u0131klama <code>bridge</code> Varsay\u0131lan a\u011f. \u0130zole bir k\u00f6pr\u00fc a\u011f\u0131d\u0131r; her container bu a\u011fda kendi IP\u2019sini al\u0131r. <code>none</code> Hi\u00e7bir a\u011fa ba\u011fl\u0131 olmaz; d\u0131\u015f eri\u015fime kapal\u0131, tamamen izole konteyner. <code>host</code> Container, host\u2019un network y\u0131\u011f\u0131n\u0131yla payla\u015f\u0131l\u0131r; port e\u015flemesine gerek kalmaz. <code>custom</code> Kullan\u0131c\u0131 tan\u0131ml\u0131 a\u011f: kendi subnet, gateway vb. ayarlar\u0131n\u0131z\u0131 yapabilirsiniz. <pre><code># none a\u011f\u0131na ba\u011flanarak mongo konteyneri \u00e7al\u0131\u015ft\u0131rma\ndocker run --network none mongo\n\n# host a\u011f\u0131na ba\u011flanma (Linux'ta ge\u00e7erli)\ndocker run --network host nginx\n\n# \u00d6rnek kullan\u0131c\u0131 tan\u0131ml\u0131 a\u011f olu\u015fturma\ndocker network create --driver bridge --subnet 182.18.0.0/16 --gateway 182.18.0.1 my_bridge_net\n</code></pre>"},{"location":"devops/docker/#kendi-dockerfilenz-yazmak","title":"Kendi Dockerfile\u2019\u0131n\u0131z\u0131 Yazmak","text":"<p>Bir uygulamay\u0131 konteynerle\u015ftirmek i\u00e7in projenizin k\u00f6k dizininde Dockerfile olu\u015fturun. A\u015fa\u011f\u0131daki \u00f6rneklerde ad\u0131m ad\u0131m a\u00e7\u0131klamalar g\u00f6receksiniz.</p> Ubuntu Tabanl\u0131 \u00d6rnek<pre><code># 1. Base image\nFROM ubuntu:18.04\n\n# 2. Paket listelerini g\u00fcncelle ve curl y\u00fckle\nRUN apt-get update &amp;&amp; apt-get install -y curl\n\n# 3. Uygulama kodlar\u0131n\u0131 kopyala\nCOPY . /opt/my-app/\n\n# 4. \u00c7al\u0131\u015fma dizinini ayarla\nWORKDIR /opt/my-app/\n\n# 5. Ortam de\u011fi\u015fkeni tan\u0131mla\nENV APP_ENV=production\n\n# 6. Uygulamay\u0131 ba\u015flat\nCMD [\"./start.sh\"]\n</code></pre> <ul> <li>Her <code>RUN/COPY</code> komutu bir layer (katman) olu\u015fturur.</li> <li><code>CMD</code> ile konteyner \u00e7al\u0131\u015ft\u0131\u011f\u0131nda hangi komutun \u00e7al\u0131\u015faca\u011f\u0131 belirtilir.</li> </ul> Node.js Tabanl\u0131 \u00d6rnek<pre><code># 1. Node.js resmi image\u2019\u0131 (slim versiyonu daha k\u00fc\u00e7\u00fck)\nFROM node:14-slim\n\n# 2. \u00c7al\u0131\u015fma dizinini ayarla\nWORKDIR /usr/src/app\n\n# 3. Ba\u011f\u0131ml\u0131l\u0131klar\u0131 kopyala ve y\u00fckle\nCOPY package*.json ./\nRUN npm install\n\n# 4. Uygulama kodunu kopyala\nCOPY . .\n\n# 5. Uygulaman\u0131n dinleyece\u011fi portu bildir\nEXPOSE 3000\n\n# 6. Varsay\u0131lan komut\nENTRYPOINT [\"node\", \"index.js\"]\n</code></pre> <ul> <li><code>ENTRYPOINT</code> ile konteyner argument\u2019lar\u0131 de\u011fi\u015fse bile s\u00fcrekli \u00e7al\u0131\u015facak komut belirlenir.</li> <li><code>CMD</code> override etmek m\u00fcmk\u00fcn; <code>ENTRYPOINT</code> ise kal\u0131c\u0131d\u0131r.</li> </ul> .dockerignore<pre><code>node_modules\n.git\n*.log\n.env\n</code></pre>"},{"location":"devops/docker/#docker-compose-ile-coklu-servis-yonetimi","title":"Docker Compose ile \u00c7oklu Servis Y\u00f6netimi","text":"<p>Birden fazla konteyneri birlikte tan\u0131mlay\u0131p \u00e7al\u0131\u015ft\u0131rmak i\u00e7in docker-compose.yml kullan\u0131n. \u0130ndent (girinti) YAML\u2019de kritiktir.</p> <pre><code>version: \"3.8\"\n\nservices:\n  webapp:\n    build: .\n    container_name: my_webapp\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./static:/usr/src/app/static\n    environment:\n      - NODE_ENV=production\n\n  db:\n    image: postgres:14\n    container_name: my_db\n    volumes:\n      - db_data:/var/lib/postgresql/data\n    environment:\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: pass\n      POSTGRES_DB: appdb\n\nnetworks:\n  default:\n    driver: bridge\n\nvolumes:\n  db_data:\n</code></pre> <ul> <li><code>services</code> \u00c7al\u0131\u015ft\u0131r\u0131lacak konteyner tan\u0131mlar\u0131.</li> <li><code>build</code> Dockerfile\u2019\u0131n bulundu\u011fu dizin (veya context).</li> <li><code>image</code> Haz\u0131r image kullan\u0131m\u0131.</li> <li><code>ports</code> <code>&lt;hostPort&gt;:&lt;containerPort&gt;</code> e\u015flemesi.</li> <li><code>volumes</code> Kal\u0131c\u0131 veri saklama veya kod mount etme.</li> <li><code>environment</code> Ortam de\u011fi\u015fkenleri.</li> <li><code>networks/volumes</code> Kullan\u0131c\u0131 tan\u0131ml\u0131 a\u011f ve kal\u0131c\u0131 volume tan\u0131mlar\u0131.</li> </ul> Compose Komutlar\u0131<pre><code>docker-compose build      # T\u00fcm servisleri derler\ndocker-compose up -d      # Arka planda ba\u015flat\u0131r\ndocker-compose ps         # Servis durumunu g\u00f6sterir\ndocker-compose logs -f    # T\u00fcm loglar\u0131 takip eder\ndocker-compose down       # T\u00fcm servisleri durdurur ve a\u011flar\u0131 siler\n</code></pre>"},{"location":"devops/git/","title":"Git","text":"<pre><code>graph LR\n  A[Working Directory] --&gt;|git add| B{Staging Area};\n  B --&gt;|git commit| C[Local Repo];\n  C --&gt; |git push| D[Remote Repo];\n  D --&gt; |git pull| C;\n  D --&gt; |git fetch| C;\n  D --&gt; |git clone| C;\n  C --&gt;|git checout| A;\n  C --&gt;|git merge| A;</code></pre>"},{"location":"devops/git/#git-yaplandrma-config","title":"Git Yap\u0131land\u0131rma (Config)","text":"<ul> <li><code>--local</code>\u2192 Mevcut repo i\u00e7indeki .git/config</li> <li><code>--global</code>\u00a0\u2192 Kullan\u0131c\u0131n\u0131n ~/.gitconfig</li> <li><code>--system</code>\u00a0\u2192 Sistem geneli /etc/gitconfig</li> </ul> <pre><code># Kullan\u0131c\u0131 bilgisi\ngit config --global user.name   \"Serkan\"\ngit config --global user.email  \"serkanmazlum@gmail.com\"\n\n# Varsay\u0131lan edit\u00f6r\ngit config --global core.editor vim\n\n# T\u00fcm projelerde uygulanacak ignore dosyas\u0131\ngit config --global core.excludesfile ~/.gitignore_global\n\n# Ayarlar\u0131 listele\ngit config --list\n\ngit --version        # Sistemde kurulu olan s\u00fcr\u00fcm\u00fc g\u00f6sterir.\ngit help --all       # Git i\u00e7in b\u00fct\u00fcn komutlar\u0131 g\u00f6sterir.\ngit [command] --help # Belirli bir komut hakk\u0131nda bilgi verir.\n</code></pre>"},{"location":"devops/git/#depo-olusturma-ve-klonlama","title":"Depo Olu\u015fturma ve Klonlama","text":"<pre><code># Yeni repo ba\u015flatma\ngit init\n\n# Mevcut bir depoyu klonlama\ngit clone [URL]\n\n# Belirli branch ve alt mod\u00fcllerle klonlama\ngit clone -b &lt;branch&gt; --recurse-submodules [URL]\n</code></pre>"},{"location":"devops/git/#durum-kontrolu-gitignore","title":"Durum Kontrol\u00fc &amp; .gitignore","text":"<pre><code># De\u011fi\u015fikliklerin kaba \u00f6zeti\ngit status\ngit status -s    # k\u0131sa format\n\n# gitignore dosyas\u0131nda bulunan de\u011fi\u015fimleride g\u00f6sterir.\ngit status --ignored \n\n# \u0130zlenmemesini istedi\u011finiz dosya/dizinleri ekleyin:\n# .gitignore\n*.log\nbuild/\n</code></pre> <p>Not</p> <p>E\u011fer bir dosya \u00f6nceden commit edildiyse ve sonra .gitignore\u2019a eklerseniz: <code>git rm --cached &lt;file&gt;</code></p> <p>Not</p> <p>git status  ??: izlenemeyen dosya A: staging area eklenen dosya M: (modified) de\u011fi\u015ftirilmi\u015f dosya D: (delete) silinmi\u015f dosya.</p>"},{"location":"devops/git/#staging-sahneleme-commit","title":"Staging (Sahneleme) &amp; Commit","text":"<pre><code># T\u00fcm de\u011fi\u015fiklikleri stage\u2019e ekle\ngit add .\n\n# Belirli dosyay\u0131 stage\u2019e ekle\ngit add path/to/file\n\n# Commit olu\u015fturma\ngit commit -m \"Mesaj\"\n\n# De\u011fi\u015fiklikleri otomatik stage et + commit\ngit commit -am \"Mesaj\"\n\n# Son commit mesaj\u0131n\u0131 veya i\u00e7eri\u011fini d\u00fczenle\ngit commit --amend\n</code></pre>"},{"location":"devops/git/#uzak-depolar-remotes","title":"Uzak Depolar (Remotes)","text":"<pre><code># Mevcut remote\u2019lar\u0131 listele\ngit remote -v\n\n# Yeni remote ekle\ngit remote add origin https://github.com/you/repo.git\n\n# Remote\u2019u sil\ngit remote rm origin\n\n# Remote adresini g\u00fcncelle\ngit remote set-url origin git@github.com:you/repo.git\n\n# Remote ad\u0131n\u0131 de\u011fi\u015ftir\ngit remote rename oldname newname\n\n# Yerel branch\u2019i remote\u2019a g\u00f6nder\ngit push origin main\n\n# T\u00fcm branch\u2019leri g\u00f6nder\ngit push --all\n\n# Commit\u2019leri alma + birle\u015ftirme\ngit pull origin main\n\n# Zorla g\u00f6nderme (dikkat!)\ngit push --force\n</code></pre> <p>Not</p> <p><code>git update-index --skip-worktree [file_name]</code> komutu sayesinde belirli bir dosyay\u0131 o anl\u0131k g\u00f6z ard\u0131 etmemizi sa\u011flar. Tekrardan dahil etmek i\u00e7in <code>git update-index --no-skip-worktree [file_name]</code> komutu kullan\u0131l\u0131r</p> <p>Not</p> <p><code>git pull</code> asl\u0131nda <code>git fetch</code> + <code>git merge</code> kombinasyonudur.</p>"},{"location":"devops/git/#branch-yonetimi","title":"Branch Y\u00f6netimi","text":"<pre><code># Branch listesi (aktifin yan\u0131nda *)\ngit branch\n\n# Yeni branch olu\u015ftur + ge\u00e7\ngit checkout -b feature-x\n\n# Branch\u2019e ge\u00e7i\u015f\ngit checkout develop\n\n# Branch silme\ngit branch -d feature-x    # g\u00fcvenli siler (merge edilmediyse uyar\u0131r)\ngit branch -D feature-x    # zorla siler\n\n# Varsay\u0131lan (main) branch\u2019i yeniden adland\u0131rma\ngit branch -M main\n</code></pre>"},{"location":"devops/git/#birlestirme-merge-rebase","title":"Birle\u015ftirme (Merge) &amp; Rebase","text":"<pre><code># Ba\u015fka bir branch\u2019i mevcut branch\u2019e birle\u015ftir\ngit merge feature-x\n\n# Rebase yaparak temiz ge\u00e7mi\u015f olu\u015fturma\ngit rebase develop\n\n# Rebase iptali (branch\u2019in eski haline d\u00f6n)\ngit rebase --abort\n</code></pre>"},{"location":"devops/git/#log-ve-inceleme","title":"Log ve \u0130nceleme","text":"<pre><code># Commit ge\u00e7mi\u015fi\ngit log\n\n# Tek sat\u0131rl\u0131k \u00f6zet\ngit log --oneline\n\n# De\u011fi\u015fiklik dif\u2019leriyle\ngit log -p\n\n# Dosya bazl\u0131 ge\u00e7mi\u015f\ngit log --stat path/to/file\n\n# Belirli committer\u2019a g\u00f6re filtrele\ngit log --committer=\"serkan\"\n</code></pre>"},{"location":"devops/git/#etiketleme-tags","title":"Etiketleme (Tags)","text":"<pre><code># Local tag listesi\ngit tag\n\n# Yeni tag olu\u015ftur\ngit tag v1.0.0\n\n# Tag\u2019i g\u00f6ster\ngit show v1.0.0\n\n# T\u00fcm tag\u2019leri remote\u2019a g\u00f6nder\ngit push origin --tags\n\n# Belirli tag\u2019i g\u00f6nder\ngit push origin v1.0.0\n\n# Remote\u2019dan tag sil\ngit push origin :refs/tags/v1.0.0\n</code></pre>"},{"location":"devops/git/#alt-moduller-submodules","title":"Alt Mod\u00fcller (Submodules)","text":"<ul> <li><code>.gitsubmodules</code> dosyas\u0131na alt mod\u00fcller kaydedilir.</li> </ul> <pre><code># Submodule ekle\ngit submodule add [URL] path/to/sub\n\n# Submodule init + update\ngit submodule update --init --recursive\n\n# Submodule\u2019\u00fc g\u00fcncelle\ngit submodule update --remote\n</code></pre>"},{"location":"devops/git/#farkllk-inceleme-diff","title":"Farkl\u0131l\u0131k \u0130nceleme (Diff)","text":"<pre><code># \u00c7al\u0131\u015fma alan\u0131 vs. index\ngit diff\n\n# Index vs. son commit\ngit diff --cached\n\n# Alt mod\u00fcller dahil diff\ngit diff --cached --submodule\n</code></pre>"},{"location":"devops/git/#fork-edilmis-depoyu-senkronize-etme","title":"Fork Edilmi\u015f Depoyu Senkronize Etme","text":"<pre><code># 1. Upstream\u2019i ekle ve al\u0131n\ngit remote add upstream https://github.com/orijinal-kullanici/orijinal-repo.git\ngit fetch upstream\n\n# 2. T\u00fcm upstream branch\u2019lerini yerelde olu\u015ftur\ngit branch -r \\\n  | grep -v '-&gt;' \\\n  | grep '^  upstream/' \\\n  | sed 's@  upstream/@@' \\\n  | xargs -n1 git branch --track\n\n# 3. Yereldeki t\u00fcm branch\u2019leri origin\u2019e g\u00f6nder\ngit push origin --all\n\n# 4. Belirli branch\u2019in commit say\u0131s\u0131n\u0131 \u00f6\u011fren\ngit rev-list --count release/1.14\n\n# 5. Upstream\u2019den \u00e7ekti\u011fin branch\u2019lerin local kopyalar\u0131n\u0131 silme\ngit branch \\\n  | grep '^  upstream/' \\\n  | sed 's@  upstream/@@' \\\n  | xargs git branch -D\n\n# 6. Origin\u2019den yeni branch\u2019leri lokalize et (tekrar)\ngit branch -r \\\n  | grep -v '-&gt;' \\\n  | grep '^  origin/' \\\n  | sed 's@  origin/@@' \\\n  | xargs -n1 git branch --track\n</code></pre> B\u00fcy\u00fck Dosyalar\u0131 Ge\u00e7ici Olarak Hari\u00e7 Tutma<pre><code>git update-index --skip-worktree path/to/large-file\n# Yeniden dahil etmek i\u00e7in:\ngit update-index --no-skip-worktree path/to/large-file\n</code></pre> Ge\u00e7mi\u015ften B\u00fcy\u00fck/Dosya T\u00fcrlerini Temizleme<pre><code>git filter-branch --force \\\n  --index-filter \\\n    'git rm --cached --ignore-unmatch \\\n      -r *.png *.jpg *.pdf *.zip *.mp4 *.material *.dt2 *.sdf' \\\n  --prune-empty \\\n  --tag-name-filter cat \\\n  -- --all\n</code></pre> <p>Uyar\u0131</p> <p>Bu i\u015flem b\u00fct\u00fcn commit ge\u00e7mi\u015fini de\u011fi\u015ftirir ve payla\u015f\u0131lan bir repoda dikkatli kullan\u0131lmal\u0131d\u0131r!</p>"},{"location":"devops/linux/","title":"Linux","text":""},{"location":"devops/linux/#temel-bilgiler","title":"Temel Bilgiler","text":"<ul> <li>root: Sistem y\u00f6neticisi, en yetkili kullan\u0131c\u0131. Komut sat\u0131r\u0131 istemi <code>#</code> ile g\u00f6sterilir.</li> <li>Normal kullan\u0131c\u0131: Standart yetkili kullan\u0131c\u0131. Komut sat\u0131r\u0131 istemi <code>$</code> ile g\u00f6sterilir.</li> <li>Yorum sat\u0131r\u0131: Sat\u0131r ba\u015f\u0131nda <code>#</code> karakteri yer al\u0131rsa, kabuk (shell) bu sat\u0131r\u0131 yorum olarak atlar.</li> <li>Dosya veya dizin isminin ba\u015f\u0131nda <code>.</code> olursa, Linux taraf\u0131ndan gizli kabul edilir. \u00d6rnek: <code>.config/</code></li> <li>Ba\u011flant\u0131lar (Links):<ul> <li>Soft link (sembolik): Ba\u015fka bir dosyaya referans olu\u015fturur. Ger\u00e7ek dosyan\u0131n kopyas\u0131 de\u011fildir.</li> <li>Hard link (sert): Dosyan\u0131n tam i\u00e7eri\u011fine i\u015faret eder; silinirse bile di\u011fer link \u00fczerinden eri\u015filebilir.</li> </ul> </li> <li>Servisler ve \u0130\u015flemler:<ul> <li>daemon: Genellikle sistem ba\u015flat\u0131ld\u0131\u011f\u0131nda arka planda \u00e7al\u0131\u015fan uzun \u00f6m\u00fcrl\u00fc s\u00fcre\u00e7lerdir. \u00d6rnek: sshd, cron</li> <li>process (i\u015flem): Bir uygulama veya komut \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda olu\u015fan y\u00fcr\u00fct\u00fclebilir birimdir. K\u0131sa \u00f6m\u00fcrl\u00fc olabilir.</li> </ul> </li> <li>Dosya T\u00fcrleri ve \u0130zinleri<ul> <li><code>d</code> : Dizin (directory)</li> <li><code>l</code> : Sembolik ba\u011flant\u0131 (symbolic link)</li> <li><code>-</code> : Normal dosya</li> <li><code>c</code> : Karakter ayg\u0131t\u0131 (\u00f6rne\u011fin /dev/ttyUSB0)</li> <li><code>b</code> : Blok ayg\u0131t\u0131 (\u00f6rne\u011fin disk b\u00f6l\u00fcm\u00fc)</li> <li><code>s</code> : Socket</li> <li><code>p</code> : FIFO (named pipe)</li> <li><code>(rwx)</code>: Okuma (r=4), yazma (w=2), \u00e7al\u0131\u015ft\u0131rma (x=1).</li> </ul> </li> </ul> <p>\u00f6rnek</p> <p><code>drwxr-xr--</code> dizin, sahibi t\u00fcm izinlere, grup okuma ve \u00e7al\u0131\u015ft\u0131rma iznine, di\u011ferleri sadece okuma iznine sahip.</p> Terminal K\u0131sayollar\u0131 \u0130\u015flevi <code>Alt + F2</code> Komut \u00e7al\u0131\u015ft\u0131rma penceresini a\u00e7ar (grafik ortam). <code>Ctrl + C</code> \u00c7al\u0131\u015fan komutu sonland\u0131r\u0131r. <code>Ctrl + R</code> \u00d6nceki komutlarda arama yapar. <code>Ctrl + S</code> Terminal ak\u0131\u015f\u0131n\u0131 durdurur (komut y\u00fcr\u00fctme durmaz). <code>Ctrl + Q</code> Terminal ak\u0131\u015f\u0131n\u0131 s\u00fcrd\u00fcr\u00fcr. <code>Ctrl + U</code> \u0130mlecin solundaki t\u00fcm metni siler. <code>Ctrl + Z</code> \u00c7al\u0131\u015fan komutu arka plana al\u0131r (durdurur)."},{"location":"devops/linux/#operatorler-ve-yonlendirmeler","title":"Operat\u00f6rler ve Y\u00f6nlendirmeler","text":"Operat\u00f6r A\u00e7\u0131klama <code>;</code> Komut ayrac\u0131. Birden fazla komutu s\u0131rayla \u00e7al\u0131\u015ft\u0131r\u0131r: <code>komut1; komut2</code>. <code>&amp;</code> Komutu arka planda \u00e7al\u0131\u015ft\u0131r\u0131r: <code>sleep 10 &amp;</code>. <code>|</code> Bir komutun \u00e7\u0131kt\u0131s\u0131n\u0131 ba\u015fka bir komutun girdisine (pipe) y\u00f6nlendirir. <code>*</code> S\u0131f\u0131r veya daha fazla karakterle e\u015fle\u015fir (her \u015feyi temsil eder). <code>?</code> Tam olarak bir karakterle e\u015fle\u015fir. <code>[...]</code> K\u00f6\u015feli parantez i\u00e7indeki karakterlerden herhangi biriyle e\u015fle\u015fir. \u00d6rne\u011fin, <code>[ab]</code> sadece \u2018a\u2019 veya \u2018b\u2019 ile ba\u015flayan dosyalar\u0131 listeler <code>{x..y}</code> Belirli bir aral\u0131ktaki say\u0131lar\u0131 veya karakterleri \u00fcretir. <code>file{1..5}.txt</code> <code>^</code> D\u00fczenli ifadelerde sat\u0131r ba\u015f\u0131n\u0131 ifade eder. <code>&gt;</code> Standart \u00e7\u0131kt\u0131y\u0131 (stdout) belirtilen dosyaya yazar, \u00f6nceki i\u00e7erik silinir. <code>&gt;&gt;</code> Standart \u00e7\u0131kt\u0131y\u0131 dosyan\u0131n sonuna ekler. <code>&lt;</code> Standart girdiyi (stdin) bir dosyadan al\u0131r. <code>2&gt;</code> Standart hata \u00e7\u0131kt\u0131s\u0131n\u0131 (stderr) belirtilen dosyaya y\u00f6nlendirir. <code>&amp;&gt;</code> Hem stdout hem stderr\u2019i ayn\u0131 anda y\u00f6nlendirir. <code>tee</code> Standart \u00e7\u0131kt\u0131y\u0131 hem ekrana basar hem de dosyaya yazar. <code>-a</code> ile eklemeli yazma yap\u0131l\u0131r. `` <pre><code># Arka planda 10 saniye uyur\nsleep 10 &amp;\n\n# 1'den 7'ye kadar dosyalar olu\u015fturur\ntouch a{1..7}.txt\n\n# 'a' veya 'b' ile ba\u015flayan dosyalar\u0131 listeler\nls [ab]*\n\n# a'dan z'ye kadar tek karakterli isimleri listeler\nls [a-z]\n\n# Y\u00f6nlendirme \u00f6rnekleri:\necho \"hello world\" &gt; file_name.txt\nls &gt;&gt; file.txt\ncat &lt; file.txt\ntelnet localhost 2&gt; errorfile.txt\necho \"hello world\" | tee -a file.txt\n</code></pre>"},{"location":"devops/linux/#linux-dizin-yaps","title":"Linux Dizin Yap\u0131s\u0131","text":"Dizin A\u00e7\u0131klama <code>/ (root)</code> T\u00fcm dosya sisteminin k\u00f6k noktas\u0131d\u0131r. <code>/boot</code> \u00d6ny\u00fckleme (boot) ile ilgili \u00e7ekirdek ve ba\u015flang\u0131\u00e7 dosyalar\u0131. <code>/dev</code> Donan\u0131m ayg\u0131tlar\u0131n\u0131 temsil eden \u00f6zel dosyalar. <code>/etc</code> Sistem yap\u0131land\u0131rma dosyalar\u0131. <code>/bin, /sbin</code> Temel kullan\u0131c\u0131 ve sistem ikili dosyalar\u0131. <code>/usr</code> \u0130kincil hiyerar\u015fi: uygulamalar, k\u00fct\u00fcphaneler, belgeler. <code>/opt</code> \u00dc\u00e7\u00fcnc\u00fc taraf yaz\u0131l\u0131mlar i\u00e7in iste\u011fe ba\u011fl\u0131 paketler. <code>/lib, /lib64</code> Temel sistem k\u00fct\u00fcphaneleri. <code>/tmp</code> Ge\u00e7ici dosyalar. <code>/home</code> Kullan\u0131c\u0131lar\u0131n ev dizinleri. <code>/var</code> De\u011fi\u015fken veri dosyalar\u0131 (loglar, posta, spool dosyalar\u0131). <code>/run</code> Ge\u00e7ici \u00e7al\u0131\u015fma s\u00fcresi bilgisi (PID dosyalar\u0131, kilitler). <code>/mnt, /media</code> Harici medya ve dosya sistemleri bu noktalara ba\u011flan\u0131r. <p>Not</p> <p>Linux dosya sisteminde b\u00fcy\u00fck/k\u00fc\u00e7\u00fck harf duyarl\u0131l\u0131\u011f\u0131 oldu\u011funu unutmay\u0131n.</p>"},{"location":"devops/linux/#paket-kurulumu","title":"Paket Kurulumu","text":"<p>Linux da\u011f\u0131t\u0131mlar\u0131nda paket y\u00f6netimi i\u00e7in yayg\u0131n olarak APT (Advanced Packaging Tool) ve DPKG ara\u00e7lar\u0131 kullan\u0131l\u0131r.</p> apt paketleri<pre><code># Paket listelerini g\u00fcnceller (depo bilgilerini yeniler)\napt update\n\n# Y\u00fckl\u00fc paketleri en son s\u00fcr\u00fcmlere g\u00fcnceller (yeni paket kurmaz)\napt upgrade\n\n# Y\u00fckl\u00fc paketleri ve gerekti\u011finde yeni paketleri de kurarak sistemin tamam\u0131n\u0131 g\u00fcnceller\napt full-upgrade    # Debian/Ubuntu'da dist-upgrade e\u015fde\u011feri\n\n# Yeni paket kurar\napt install &lt;paket_ad\u0131&gt;\n\n# Paket kald\u0131r\u0131r (ayar dosyalar\u0131 korunur)\napt remove &lt;paket_ad\u0131&gt;\n\n# Paket ve ili\u015fkili yap\u0131land\u0131rma dosyalar\u0131n\u0131 siler\napt purge &lt;paket_ad\u0131&gt;\n\n# Kullan\u0131lmayan ba\u011f\u0131ml\u0131l\u0131klar\u0131 kald\u0131r\u0131r\napt autoremove\n\n# \u0130ndirilmi\u015f ve kullan\u0131lmayan .deb dosyalar\u0131n\u0131 temizler\napt autoclean\n\n# Kurulu t\u00fcm paketleri listeler\napt list --installed\n\n# Hatal\u0131 ba\u011f\u0131ml\u0131l\u0131klar\u0131 d\u00fczeltir ve eksik paketleri kurar.\napt install -f\n\n# Mevcut paket s\u00fcr\u00fcm\u00fcn\u00fc yeniden y\u00fckler.\napt --reinstall install &lt;paket_ad\u0131&gt;\n\n# Depo veritaban\u0131nda paket aramas\u0131 yapar.\napt search &lt;anahtar_kelime&gt;\n\n# Paket hakk\u0131nda ayr\u0131nt\u0131l\u0131 bilgi g\u00f6r\u00fcnt\u00fcler\napt show &lt;paket_ad\u0131&gt; \n\n# Depo listelerini d\u00fczenlemeye yarar (\u00f6rn. sudo nano /etc/apt/sources.list).\napt edit-sources \n</code></pre> dpkg<pre><code># Kurulu t\u00fcm paketleri listeler\ndpkg -l\n\n# Yerel .deb dosyas\u0131n\u0131 kurar (paketin .deb dosyas\u0131n\u0131 belirtir)\ndpkg -i &lt;paket.deb&gt;\n\n# Yap\u0131land\u0131rma ad\u0131m\u0131 tamamlanmam\u0131\u015f paketleri onar\u0131r\ndpkg --configure -a\n\n# Paket ve yap\u0131land\u0131rma dosyalar\u0131yla birlikte siler\ndpkg -P &lt;paket_ad\u0131&gt;\n</code></pre>"},{"location":"devops/linux/#sistem-gunlukleri-system-logs","title":"Sistem G\u00fcnl\u00fckleri (System Logs)","text":"<p>Linux'ta sistem olaylar\u0131, hata mesajlar\u0131 ve uyar\u0131lar genellikle <code>/var/log</code> dizininde depolan\u0131r. Ayr\u0131ca systemd kullanan sistemlerde <code>journalctl</code> ile g\u00fcnl\u00fc\u011fe eri\u015fim m\u00fcmk\u00fcnd\u00fcr.</p> Dosya / Komut A\u00e7\u0131klama <code>/var/log/boot.log</code> \u00d6ny\u00fckleme s\u0131ras\u0131nda olu\u015fan mesajlar (init, kernel, servis bilgileri). <code>dmesg</code> \u00c7ekirdek (kernel) ring buffer\u2019\u0131n\u0131 g\u00f6sterir. <code>/var/log/auth.log</code> Kimlik do\u011frulama ve g\u00fcvenlik olaylar\u0131 (giri\u015f denemeleri, sudo kullan\u0131m\u0131). <code>/var/log/syslog</code> Genel sistem ve uygulama mesajlar\u0131 (Debian/Ubuntu). <code>/var/log/messages</code> Genel sistem ve uygulama mesajlar\u0131 (Red Hat/CentOS gibi da\u011f\u0131t\u0131mlarda). <code>/var/log/kern.log</code> Kernel\u2019e ait detayl\u0131 g\u00fcnl\u00fck kay\u0131tlar\u0131. <code>journalctl</code> systemd journal kay\u0131tlar\u0131n\u0131 okur <pre><code># Son \u00f6ny\u00fcklemeden itibaren t\u00fcm loglar\u0131 g\u00f6sterir\njournalctl -b  \n\n# Belirli bir servisin g\u00fcnl\u00fcklerini filtreler\njournalctl -u &lt;servis&gt; \n</code></pre> <p>Not</p> <p>Yo\u011fun log ak\u0131\u015f\u0131n\u0131 filtrelemek i\u00e7in grep veya less ile birlikte kullanabilirsiniz: <pre><code>journalctl -u sshd | grep \"failed\"\ndmesg | less\n</code></pre></p> <ul> <li><code>/etc/motd</code> Message Of The Day, Kullan\u0131c\u0131 oturumu a\u00e7t\u0131\u011f\u0131nda g\u00f6sterilen k\u0131sa bilgilendirme mesaj\u0131d\u0131r.</li> <li><code>/etc/motd</code> dosyas\u0131na yazd\u0131\u011f\u0131n metin, her giri\u015fte terminale bas\u0131l\u0131r.</li> <li>Dinamik i\u00e7erik i\u00e7in <code>/etc/profile.d/</code> alt\u0131na script ekleyebilirsin.</li> </ul>"},{"location":"devops/linux/#komutlar","title":"Komutlar","text":""},{"location":"devops/linux/#dizin-ve-dosya-gezinme","title":"Dizin ve Dosya Gezinme","text":"<ul> <li> <p><code>cd</code>  Dizinler aras\u0131nda ge\u00e7i\u015f yapar. (<code>.</code> bulundu\u011fun dizin, <code>..</code> bir \u00fcst dizin, <code>-</code> bir \u00f6nce ki dizin, <code>~</code> home) <pre><code>cd            # Home dizini\ncd ~          # Home dizini\ncd ../..      # \u0130ki \u00fcst dizin\n</code></pre></p> </li> <li> <p><code>pwd</code>  Mevcut dizinin tam yolunu g\u00f6sterir.</p> </li> <li><code>ls</code>  Dizin i\u00e7eri\u011fini listeler.</li> <li><code>tree</code>  Dizin yap\u0131s\u0131n\u0131 a\u011fa\u00e7 format\u0131nda g\u00f6sterir.</li> </ul>"},{"location":"devops/linux/#dosya-ve-dizin-islemleri","title":"Dosya ve Dizin \u0130\u015flemleri","text":"<ul> <li> <p><code>cp</code> Dosya veya dizini kopyalar. <pre><code>cp -r &lt;dir&gt; &lt;copy&gt;  # Dizinleri ve i\u00e7inde bulunan her \u015feyi kopylamay\u0131 sa\u011flar. \ncp -l &lt;file&gt; &lt;copy&gt; # Kopyalama i\u015flemini link \u015feklinde yapar.\n</code></pre></p> </li> <li> <p><code>mv</code> Dosyay\u0131 ta\u015f\u0131r veya yeniden adland\u0131r\u0131r. <pre><code>mv a.txt /home/       # Dosya ta\u015f\u0131ma\nmv a.txt /home/b.txt  # Dosyay\u0131 ta\u015f\u0131rken isim de\u011fi\u015ftirme\nmv a.txt b.txt        # Dosyan\u0131n ismini de\u011fi\u015ftirme\nmv dizin /home/       # Dizinlerde ta\u015f\u0131nabilir.\n</code></pre></p> </li> <li> <p><code>rm</code> Dosya veya dizini siler. <code>!</code> ile d\u0131\u015f\u0131nda tutulabilir. <pre><code>rm -rf                     # Belirtilen her \u015feyi siler\nrm -i                      # Dosyalar\u0131 sorarak siler.\nrm -rf  !(a.txt)           # a.txt d\u0131\u015f\u0131nda dosyalar\u0131 siler.\n</code></pre></p> </li> <li> <p><code>mkdir</code> Yeni dizin olu\u015fturur. <pre><code>mkldir -p dizin/dizin      # \u0130\u00e7 i\u00e7e dizin  olu\u015fturur.\n</code></pre></p> </li> <li> <p><code>rmdir</code> Bo\u015f dizini siler.</p> </li> <li><code>touch</code> Bo\u015f dosya olu\u015fturur veya zaman damgas\u0131n\u0131 g\u00fcnceller.</li> <li><code>ln</code> Hard veya sembolik link olu\u015fturur. <code>-s</code> sembolink link, <code>-i</code> hard link</li> </ul>"},{"location":"devops/linux/#metin-goruntuleme-isleme","title":"Metin G\u00f6r\u00fcnt\u00fcleme &amp; \u0130\u015fleme","text":"<ul> <li> <p><code>cat</code> Dosya i\u00e7eri\u011fini bir kerede g\u00f6sterir. <pre><code>cat a.txt                      # i\u00e7eri\u011fi g\u00f6sterir  \ncat &gt; a.txt                    # a dosays\u0131n\u0131 olu\u015fturup i\u00e7ine yaz\u0131 yazmam\u0131z\u0131 sa\u011flarla\ncat &gt;&gt; a.txt                   # a dosyas\u0131 varsa \u00fcst\u00fcne yazmam\u0131z\u0131 sa\u011flar.\ncat a.txt &gt;  b.txt             # a dosays\u0131n\u0131 b dosyas\u0131na kopyalar.\ncat a.txt &gt;&gt; b.txt             # a dosays\u0131n\u0131 b dosyas\u0131n\u0131n \u00fcst\u00fcne yazar.\n</code></pre></p> </li> <li> <p><code>more</code> Sayfa sayfa g\u00f6r\u00fcnt\u00fcler. (Ekrana s\u0131\u011facak \u015fekilde)</p> </li> <li> <p><code>less</code> \u0130leri/geri kayd\u0131rma ve arama imk\u00e2n\u0131 sunar. <code>more</code> komutunun geli\u015fmi\u015f halidir. <pre><code>less deneme.txt\n__________\n-N   : Her sat\u0131r\u0131n ba\u015f\u0131na numara koyar.\n-i   : B\u00fcy\u00fck k\u00fc\u00e7\u00fck harf duyarl\u0131l\u0131\u011f\u0131n\u0131 devre d\u0131\u015f\u0131 b\u0131rak\u0131r.\n-S   : Uzun sat\u0131rlar\u0131 keserek , yatay kayd\u0131rma \u00e7\u0131bu\u011fu olu\u015fturur.\n-F   : Dosya i\u00e7eri\u011fini g\u00f6sterdikten sonra otamatik olarak kapan\u0131r. \n__________\nspace: Tu\u015fu bir sonraki sayfay\u0131 g\u00f6sterir. \nb    : Bir \u00f6nceki sayfay\u0131 g\u00f6sterir.   \ng    : Dosyan\u0131n ba\u015f\u0131na gitmek i\u00e7in kullan\u0131l\u0131r.\nG    : Dosyan\u0131n sonuna gitmek i\u00e7in kullan\u0131l\u0131r.\n/    : Arama yapmak i\u00e7in kullan\u0131l\u0131r.\nn    : Bir sonraki e\u015fle\u015fmeyi bulmak i\u00e7in kullan\u0131l\u0131r.\nq    : less komutunu kapatmak i\u00e7in kullan\u0131l\u0131r.\n__________\n</code></pre></p> </li> <li> <p><code>head / tail</code> Dosyan\u0131n ba\u015ftan / sonundan N sat\u0131r\u0131n\u0131 g\u00f6sterir.</p> </li> <li> <p><code>grep - egrep</code> Metin i\u00e7inde desen arar. <pre><code>grep keyword file.txt  #Belirtilen kelimeyi dosya i\u00e7inde arar\ngrep -c keyword file.txt #Belirtilen kelimenin dosyada ka\u00e7 tane oldu\u011funu g\u00f6sterir.\ngrep -i keyword file.txt #Belirtilen kelimeyi dosya i\u00e7inde arar. Arama yaparken b\u00fcy\u00fck k\u00fc\u00e7\u00fck duyarl\u0131l\u0131\u011f\u0131 kapat\u0131r.\ngrep -n keyword file.txt # Hnagi sat\u0131rlarada bulunaduklar\u0131n\u0131    g\u00f6sterir.\ngrep -v keyword file.txt # Belirtilen anahtar kelimesi d\u0131\u015f\u0131ndaki yerleri al\u0131r\nls | grep Desktop\negrep -i \"keyword1|keyword2\" file.txt  # Arama yaparken keyword1 veya keyword2 birinin olmas\u0131 yeterli olur.\n</code></pre></p> </li> <li> <p><code>cut</code> Belirtilen s\u00fctunlar\u0131 veya karakterleri keser. <pre><code>cut -c1 file.txt  # 1. s\u00fct\u00fcnda bulunan karakterleri g\u00f6sterir.\ncut -c1,3,4,5 file.txt  # 1., 3., 4., 5. s\u00fct\u00fcnda bulunan karakterleri g\u00f6sterir.\ncut -c1-4 file.txt  # 1. s\u00fct\u00fcndan 4. s\u00fct\u00fcna kadar bulunan karakterleri g\u00f6sterir.\ncut -c1-4, 6-8 file.txt\ncut -b1-3 file.txt   # 1. s\u00fct\u00fcndan ba\u015flay\u0131p 3 byte veri al\nls -la | cut -c2-4\n</code></pre></p> </li> <li> <p><code>awk</code> Alan bazl\u0131 metin i\u015fleme sa\u011flar. <pre><code>awk '{print $1}' file.txt  #Dosyan\u0131n i\u00e7inde bulunan her sat\u0131rda bulunan ilkkelimeyi g\u00f6sterir.\nawk '{print $2, $4}' file.txt \nawk '{print $NF}' file.txt #Her sat\u0131r\u0131n son kelimesini g\u00f6sterir. \nawk '/jer/ {print}' file.txt #Dosyan\u0131n i\u00e7inde jey arar ve varsa ekranda g\u00f6sterir. \ncat file.txt | awk '{$2=\"hi\"; print $0}  #Bu dosayn\u0131n i\u00e7inde bulunan her sat\u0131rda 2. kelimesini \"hi\" ile de\u011fi\u015ftirir.\nawk 'lenght($0) &gt; 20' file.txt  #\u0130lk karakteri 20 bytetan fazla olan sat\u0131rlar\u0131 g\u00f6sterir.\nls -l | awk '{if($9 == \"Des\") print $0;}'  #\u015eart\u0131 sa\u011flayan sat\u0131r\u0131 g\u00f6sterir.\n</code></pre></p> </li> <li> <p><code>sed</code> Sat\u0131r i\u00e7i metin de\u011fi\u015ftirmeye yarar. <pre><code>sed 's/[kelime]/[yeni_kelime]/g' dosya.txt   # kelime olan k\u0131s\u0131mlar  yeni_kelime ile de\u011fi\u015ftirilir.\nsed -i 's/[kelime]/[yeni_kelime]/g' dosya.txt   #  -i parametresi sayesinde dosyan\u0131n i\u00e7inde yap\u0131l\u0131r de\u011fi\u015fiklik\nsed -i 's/[kelime]/d' dosya.txt   #  kelime siler\n</code></pre></p> </li> <li> <p><code>sort</code> Sat\u0131rlar\u0131 belirli kritere g\u00f6re s\u0131ralar. <pre><code>sort file.txt  #Alfabetik s\u0131raya g\u00f6re s\u0131ralar\nsort -r file.txt  #Alfabetik s\u0131ran\u0131n tersine  g\u00f6re s\u0131ralar\nsort -k2 file.txt  #Alfabetik s\u0131raya g\u00f6re s\u0131ralar (2. kelimeye bakarak s\u0131ralam yap\u0131l\u0131r)\n</code></pre></p> </li> <li> <p><code>uniq</code> Birbirini izleyen tekrarlar\u0131 filtreler. <pre><code>uniq file.txt  #Ayn\u0131 olan sat\u0131orlar\u0131n sadece birini g\u00f6sterir\nuniq -c  file.txt  #Her sat\u0131r\u0131n ka\u00e7 kez ge\u00e7ti\u011fini g\u00f6sterir.\nsort file.txt | uniq\nsort file.txt | uniq -c\nsort file.txt | uniq -d   #Sadece tekrarlanan k\u0131sm\u0131 g\u00f6sterir.\n</code></pre></p> </li> <li> <p><code>tr</code> Karakter d\u00f6n\u00fc\u015f\u00fcmleri yapar. <pre><code>cat a.txt | tr \u2018a-z\u2019  \u2018A-Z\u2019              # B\u00fct\u00fcn harfleri b\u00fcy\u00fck yazar\n</code></pre></p> </li> <li> <p><code>wc</code> Sat\u0131r, kelime ve byte sayar. <pre><code>wc file.txt # sat\u0131r kelime byte \u00e7\u0131kt\u0131s\u0131 verir\nwc -l file.txt # sat\u0131r say\u0131s\u0131n\u0131 verir.\nwc -w file.txt # kelime say\u0131s\u0131n\u0131 verir.\nwc -c file.txt # byte say\u0131s\u0131n\u0131 verir.\nls -l | wc -l\ngrep  keyword file | wc -l   #belirtilen keyword ka\u00e7 kez ge\u00e7ti\u011fini bulmu\u015f oluruz\n</code></pre></p> </li> <li> <p><code>diff</code> Dosyalar aras\u0131ndaki sat\u0131r farkl\u0131l\u0131klar\u0131n\u0131 g\u00f6sterir. (line by line)</p> </li> <li><code>cmp</code> Dosyalar\u0131 byte byte kar\u015f\u0131la\u015ft\u0131r\u0131r. (byte by byte)</li> <li> <p><code>truncate</code> kesme i\u015flemi yapar. <pre><code>truncate -s 40 file.txt  #dosyay\u0131 40 byte olarak keser fazlal\u0131k olan k\u0131sm\u0131 siler. S\u0131k\u0131\u015ft\u0131rma i\u015flemi yapmaz.\n</code></pre></p> </li> <li> <p><code>file</code> Dosya hakk\u0131nda bilgi verir. <code>file a.txt</code></p> </li> <li><code>find - locate</code> Dosya aramas\u0131 yapar.</li> </ul> <p>Not</p> <p>find ile locate komutlar\u0131 aralar\u0131nda ki fark locate komutunun bir veri taban\u0131 vard\u0131r. Bu y\u00fczden aramalar\u0131 daha h\u0131zl\u0131 yapar. Fakat bu veri taban\u0131 g\u00fcncellenmez ise yeni olu\u015fturulan dosyalar\u0131 bulamay\u0131z.</p> <pre><code>find . -size +100M        # 100mb b\u00fcy\u00fck dosyalar\u0131 arar\nfind . -type f -perm 0777 # Belirtilen izinlere sahip dosyalar\u0131 bulur.\nfind . --name *.gz        # gz uzant\u0131l\u0131 dosyalar\u0131 bulur.\nfind . -mtime 3           # 3 g\u00fcn i\u00e7inde de\u011fi\u015fiklik yap\u0131lan dosyalar\u0131 bulur.\n\nlocate a.txt\nupdatedb                  # locate komutunun datebase g\u00fcnceller.\n</code></pre> <ul> <li><code>readlink</code>  Bu komut sayesinde link edilmi\u015f bir dosyan\u0131n ger\u00e7ek konumunu g\u00f6sterir.</li> </ul>"},{"location":"devops/linux/#surec-kaynak-yonetimi","title":"S\u00fcre\u00e7 &amp; Kaynak Y\u00f6netimi","text":"<ul> <li><code>ps</code> \u00c7al\u0131\u015fan s\u00fcre\u00e7leri listeler.<ul> <li>TTY s\u00fctunu, i\u015flemin hangi terminalde y\u00fcr\u00fct\u00fcld\u00fc\u011f\u00fcn\u00fc,</li> <li>TIME s\u00fctunu, o i\u015flemin ne kadar s\u00fcredir \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131,</li> <li>CMD s\u00fctunu ise hangi komutun \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6sterir.</li> <li><code>ps aux</code> \u00e7\u0131kt\u0131s\u0131ndaki STAT s\u00fctununda yer alan harflerin anlamlar\u0131 ise \u015funlard\u0131r:<ul> <li>D: uyku modu (disk I/O i\u00e7in bekliyor)</li> <li>R: \u00e7al\u0131\u015f\u0131yor</li> <li>T: duraklat\u0131lm\u0131\u015f</li> <li>X: zorla durdurulmu\u015f</li> <li>Z: zombi i\u015flem</li> <li>S: i\u015flem i\u00e7in kaynak (\u00f6rne\u011fin CPU) bekliyor</li> </ul> </li> </ul> </li> <li> <p><code>pstree</code> ise bu i\u015flemleri adeta bir aile a\u011fac\u0131 gibi detayl\u0131 \u015fekilde g\u00f6rselle\u015ftirir\u2014kim kimin \u00e7ocu\u011fu, kim kimin ebeveyni, hepsini tek bak\u0131\u015fta anlars\u0131n\u0131z! <pre><code>ps \nps -a\nps -ef\npstree\n\n# En fazla CPU t\u00fcketen 5 uygulamay\u0131 listeler\nps H -eo pid,pcpu | sort -nk2 | tail\n\n# PID kar\u015f\u0131l\u0131k Gelen uygulaman\u0131n hangisi oldu\u011fu anla\u015f\u0131l\u0131r.\n# ll ilede g\u00f6sterilebilir.\nps aux | fgrep [PID] \nll /proc/[PID]\n</code></pre></p> </li> <li> <p><code>top</code> Canl\u0131 sistem kaynak kullan\u0131m\u0131n\u0131 g\u00f6sterir. PID, USER, PR(\u00f6ncelik seviyesi), RES(RAM miktar\u0131) gibi durumlar g\u00f6zlenebilir. <pre><code>top -u [user_name]   # Belirli bir kullan\u0131c\u0131n\u0131n detayl\u0131 g\u00f6sterilmesini sa\u011flar.\n_____________________________\nk : ile belirli bir g\u00f6revi direkt top komutu \u00fczerinden kill yap\u0131lmas\u0131 sa\u011flan\u0131r.\n</code></pre></p> </li> <li> <p><code>kill</code> S\u00fcreci sonland\u0131rmak i\u00e7in sinyal g\u00f6nderir. <pre><code>ps -a                  # T\u00fcm i\u015flemler\nps aux\nps -e                  # O kullan\u0131c\u0131 taraf\u0131ndan yap\u0131lan t\u00fcm i\u015flemler\nps -u [user_name]      # Belirli bir kullan\u0131c\u0131n\u0131n yapt\u0131klar\u0131n\u0131 g\u00f6sterir.\nkill -l                # Sinyallari sitler.\nkill -9 PID_number     # \u0130\u015flemi sonland\u0131r\u0131r.\nkill -1 PID_number     # \u0130\u015flemi yeniden ba\u015flat\u0131r.\nkillall       top      # PID numaras\u0131 yerine direkt i\u015flemin ad\u0131 verilir.\n</code></pre></p> </li> <li> <p><code>nohup</code> Komutu oturumdan ba\u011f\u0131ms\u0131z \u00e7al\u0131\u015ft\u0131r\u0131r. Yani terminal kapansa dahi komut y\u00fcr\u00fct\u00fclmeye devam eder. <pre><code># nohup process &amp;\n# nohup process &gt; /dev/null 2&gt;&amp;1 &amp;\nnohup sleep 75 &amp;\nnohup sleep 70 &gt; /dev/null 2&gt;&amp;1 &amp;\n</code></pre></p> </li> <li> <p><code>bg</code> Durdurulan i\u015flemi arka plana al\u0131r.</p> </li> <li><code>fg</code> Arka plandaki i\u015flemi \u00f6n plana getirir.</li> <li><code>jobs</code> O anki kabuk i\u015flerinin durumunu listeler.</li> <li> <p><code>nice - renice</code> Komuta \u00f6ncelik (niceness) atar. / \u00c7al\u0131\u015fan s\u00fcrecin \u00f6nceli\u011fini de\u011fi\u015ftirir.</p> </li> <li> <p><code>script</code> Terminal oturumunu kaydeder.</p> </li> <li> <p><code>timeout</code> Komutun \u00e7al\u0131\u015fmas\u0131n\u0131 s\u00fcre ile s\u0131n\u0131rlar. <pre><code>timeout 10s ping google.com\ntimeout 1m ping google.com\ntimeout 1h ping google.com\n</code></pre></p> </li> <li> <p><code>dd</code> \u201cDisk Dump\u201d k\u0131saltmas\u0131yla bilinir. Unix/Linux\u2019ta dosya, disk ve blok d\u00fczeyinde kopyalama yapman\u0131z\u0131 sa\u011flar. Veri bloklar\u0131n\u0131 farkl\u0131 bi\u00e7imlerde i\u015fleyerek yedekleme, klonlama veya s\u0131f\u0131rlama (\u00f6rne\u011fin <code>/dev/zero</code> kullanarak) gibi i\u015flemlerde kullan\u0131labilir. <pre><code>dd if=/dev/sda of=/mnt/backup/sda.img bs=64K conv=noerror,sync\n</code></pre></p> </li> </ul>"},{"location":"devops/linux/#sistem-bilgisi-istatistik","title":"Sistem Bilgisi &amp; \u0130statistik","text":"<ul> <li> <p><code>uname</code> Sistem bilgilerini g\u00f6r\u00fcnt\u00fcler. <pre><code>uname -a    # T\u00fcm sistem bilgileri\nuname -s    # \u0130\u015fletim sisteminin ad\u0131\nuname -r    # \u0130\u015fletim sisteminin s\u00fcr\u00fcm\u00fcn\u00fc g\u00f6sterir.\n</code></pre></p> </li> <li> <p><code>arch</code> \u0130\u015fletim sistemi mimarisini g\u00f6sterir. (64 / 32)</p> </li> <li><code>df</code> Dosya sistemi kullan\u0131m \u00f6zetini verir.</li> <li> <p><code>du</code> Dizin veya dosya boyutunu hesaplar. <pre><code>du dosya_yolu\ndu -h dosya_yolu    # Boyutlar\u0131 okunabilirli\u011fini art\u0131r\u0131r.\ndu -sh dosya_yolu   # Alt dizinleri almaz\n</code></pre></p> </li> <li> <p><code>free</code> Bellek (RAM) kullan\u0131m\u0131n\u0131 g\u00f6sterir. <pre><code>free \ncat /proc/cpuinfo   # T\u00fcm sistem bilgilerinin bulundu\u011fu dosyad\u0131r.\ncat /proc/meminfo   # RAM hakk\u0131nda bilgi verir.\n</code></pre></p> </li> <li> <p><code>dmesg</code> Kernel mesajlar\u0131n\u0131 okur. <pre><code>dmesg\ndmesg | less\ndmesg -H  #Anla\u015f\u0131l\u0131r\ndmesg -c  #G\u00fcnl\u00fc\u011f\u00fc temizler\ndmesg -l  #G\u00fcnl\u00fckleri filtrelemek i\u00e7in kullan\u0131l\u0131 (-l err sadece hatalar\u0131 g\u00f6sterir)\n</code></pre></p> </li> <li> <p><code>lsmod</code> Y\u00fckl\u00fc \u00e7ekirdek mod\u00fcllerini listeler.</p> </li> <li><code>lsblk</code> Blok ayg\u0131tlar\u0131n\u0131 a\u011fa\u00e7 yap\u0131s\u0131nda g\u00f6sterir.</li> <li><code>fdisk</code> Disk b\u00f6l\u00fcm bilgilerini y\u00f6netir.</li> <li><code>blkid</code> Blok ayg\u0131tlar\u0131n\u0131n UUID ve t\u00fcr bilgilerini listeler.</li> <li><code>badblocks</code> Bozuk disk bloklar\u0131n\u0131 tarar.</li> <li><code>fsck</code> Dosya sistemini onar\u0131r.</li> </ul>"},{"location":"devops/linux/#ag-internet","title":"A\u011f &amp; \u0130nternet","text":"<ul> <li><code>ping</code> A\u011f ba\u011flant\u0131s\u0131n\u0131 test eder. <code>-c</code> ile ka\u00e7 kez at\u0131laca\u011f\u0131 ayarlan\u0131r.</li> <li><code>ifconfig</code>p addr \u2014 A\u011f aray\u00fcz\u00fc yap\u0131land\u0131rmas\u0131n\u0131 g\u00f6sterir.</li> <li><code>netstat - ss</code> Aktif ba\u011flant\u0131lar\u0131 listeler.</li> <li><code>curl</code> URL\u2019lerden veri transferi yapar.</li> <li> <p><code>wget</code> Dosya indirir. <pre><code>wget https:/...../.....tar.gz\ncurl -o putty htt\u011fs:/..../...tar.gz\n</code></pre></p> </li> <li> <p><code>dig - nslookup</code> Komutlar\u0131, belirli bir alan ad\u0131 veya IP adresi hakk\u0131nda bilgi almak i\u00e7in DNS (Domain Name System) sunucular\u0131na sorgu yapmak i\u00e7in kullan\u0131lan komut sat\u0131r\u0131 ara\u00e7lar\u0131d\u0131r.</p> </li> <li><code>iptables</code> Paket filtreleme ve NAT kurallar\u0131n\u0131 y\u00f6netir.</li> <li><code>arp</code> ARP tablosunu g\u00f6sterir.</li> <li><code>hostname</code> Sistem ad\u0131 ve IP adresini verir. Sistemin a\u011f \u00fczerindeki ad\u0131n\u0131 (hostname) <code>/etc/hostname</code> dosyas\u0131ndan okur ve de\u011fi\u015ftirir <code>sudo hostnamectl set-hostname yeni_hostname</code></li> <li> <p><code>netdiscover</code> A\u011f taramas\u0131 yapar.</p> </li> <li> <p><code>nmcli</code> NetworkManager\u2019\u0131 komut sat\u0131r\u0131 \u00fczerinden y\u00f6netmenizi sa\u011flayan g\u00fc\u00e7l\u00fc bir ara\u00e7t\u0131r. A\u011f ba\u011flant\u0131lar\u0131 olu\u015fturabilir, d\u00fczenleyebilir, silebilir ve mevcut durum hakk\u0131nda ayr\u0131nt\u0131l\u0131 bilgi alabilirsiniz.</p> </li> </ul> <pre><code>nmcli               # Genel durum bilgisi\nnmcli connection show   # T\u00fcm ba\u011flant\u0131lar\u0131 listeler\nnmcli device status     # A\u011f aray\u00fczlerinin durumunu g\u00f6sterir\nnmtui\nnmcli\u2019nin metin tabanl\u0131, kullan\u0131c\u0131 dostu aray\u00fcz\u00fcd\u00fcr. CLI yerine basit men\u00fclerle a\u011f ayarlar\u0131n\u0131 y\u00f6netmek isterseniz tercih edebilirsiniz.\n</code></pre> <ul> <li><code>nm-connection-editor</code> NetworkManager ba\u011flant\u0131lar\u0131n\u0131 grafiksel (GUI) ortamda d\u00fczenlemenizi sa\u011flar. Masa\u00fcst\u00fc kullan\u0131c\u0131lar\u0131 i\u00e7in idealdir.</li> </ul>"},{"location":"devops/linux/#kullanc-izinler","title":"Kullan\u0131c\u0131 &amp; \u0130zinler","text":"<ul> <li><code>chmod</code> Dosya/dizin izinlerini de\u011fi\u015ftirir. (u = user, g = groups, o = or)</li> <li><code>chown</code> Sahiplik bilgilerini de\u011fi\u015ftirir.</li> <li> <p><code>chgrp</code> Grup bilgisini de\u011fi\u015ftirir. <pre><code>chmod 777 file\nchmod ugo+rwx file\nchmod g-x file\nchmod +x file\n\nchown root file\nchgrp root file\n\nchown yeni_kullan\u0131c\u0131 a.txt\nchgrp grupadi dosyaadi\n</code></pre></p> </li> <li> <p><code>useradd</code> Yeni kullan\u0131c\u0131 ekler.</p> </li> <li><code>usermod</code> Mevcut kullan\u0131c\u0131y\u0131 d\u00fczenler.</li> <li> <p><code>userdel</code> Kullan\u0131c\u0131 siler. <pre><code>userdel -r user_1  # Kullan\u0131c\u0131y\u0131 home dizini ile beraber siler\nusermod -U user_1  # Aktif \nusermod -L user_1  # Pasif\n</code></pre></p> </li> <li> <p><code>groupadd</code> Yeni grup olu\u015fturur.</p> </li> <li><code>groupdel</code> Grup siler.</li> <li><code>passwd</code> Kullan\u0131c\u0131 \u015fifresi ayarlar.</li> <li><code>chfn</code> Kullan\u0131c\u0131 bilgilerini de\u011fi\u015ftirir.</li> <li><code>getfacl</code>etfacl \u2014 ACL bazl\u0131 izinleri y\u00f6netir.</li> <li> <p><code>id</code> Kullan\u0131c\u0131n\u0131n ba\u011fl\u0131 oldu\u011fu ID g\u00f6sterir.</p> </li> <li> <p><code>w</code> Sistemde \u00e7evrim i\u00e7i kullan\u0131c\u0131 say\u0131s\u0131n\u0131 g\u00f6sterir.</p> </li> <li><code>lastb - last</code> lastb Sisteme ba\u015far\u0131s\u0131z giri\u015fleri g\u00f6sterir. last b\u00fct\u00fcn giri\u015fleri g\u00f6sterir</li> <li><code>users</code>  Sistemde aktif kullan\u0131c\u0131lar\u0131 g\u00f6sterir.</li> <li><code>whoami</code>  O an ki kullan\u0131c\u0131 ad\u0131n\u0131 verir.</li> </ul>"},{"location":"devops/linux/#zaman-planlama","title":"Zaman &amp; Planlama","text":"<ul> <li> <p><code>date</code> Tarih ve saati g\u00f6sterir veya ayarlar. <pre><code>date                                # Tarih ve saati g\u00f6sterir\nsudo date --set=\"$(date)\"           # Tarih ve saati d\u00fczenler\nsudo date -s \"10 MAR 2023 10:19:23\" # Tarih ve saati d\u00fczenler\nsudo date -s \"2023-12-16 09:16:00\"\nsudo date +%T -s \"13:30:00\"\n# Ya da \ntimedatectl set-time '2015-11-20 22:13:20'\n</code></pre></p> </li> <li> <p><code>sleep</code> Belirtilen s\u00fcre bekler. <code>sleep 10</code></p> </li> <li><code>watch</code> Komutu belirli aral\u0131klarla tekrarlar.</li> <li><code>crontab</code> Zamanlanm\u0131\u015f g\u00f6revler olu\u015fturur.</li> <li><code>at</code> Tek seferlik zamanlanm\u0131\u015f i\u015f ba\u015flat\u0131r.</li> </ul> <p>Not</p> <p>Linux sisteminde belirli zaman aral\u0131klar\u0131nda veya zamanlamalar da tekrarlanmas\u0131 gereken g\u00f6revleri otomatikle\u015ftirmek i\u00e7in kullan\u0131l\u0131r. crontab komutu belirli g\u00fcnlerde belirli haftalarda belirli zaman aral\u0131klar\u0131nda tekrarlamas\u0131n\u0131 istedi\u011fimiz komutlar i\u00e7in kullan\u0131l\u0131r. Olu\u015fan dosyalar <code>etc/cron.[]</code> konumunda bulunur. <code>crontab -e</code>  crontab dosyas\u0131n\u0131 d\u00fczenlemek i\u00e7in kullan\u0131l\u0131r. A\u00e7\u0131lan dosyanan\u0131n i\u00e7ine dakika saat g\u00fcn ay ve haftan\u0131n g\u00fcn\u00fc son olarakda yap\u0131lacak komut yaz\u0131l\u0131r. <pre><code>crontab -e\n0 2 * * * echo \"hello world\" &gt; a.txt   # Bu k\u0131s\u0131mda * i\u015fareti o kabsad\u0131\u011f\u0131 alan\u0131n her zaman dilimini al\u0131r.\n\nat now + 1 hour echo \"hello world\"   # ctrl + D i\u015flemi tamamlan\u0131r.\n</code></pre></p> <ul> <li><code>uptime</code> \u00c7al\u0131\u015fma s\u00fcresi ve kullan\u0131c\u0131 say\u0131s\u0131n\u0131 g\u00f6sterir.</li> </ul>"},{"location":"devops/linux/#arsivleme-skstrma","title":"Ar\u015fivleme &amp; S\u0131k\u0131\u015ft\u0131rma","text":"<ul> <li><code>tar</code> Ar\u015fiv olu\u015fturur veya a\u00e7ar.</li> <li><code>gzip - unzip</code> Dosya s\u0131k\u0131\u015ft\u0131r\u0131r veya a\u00e7ar. <pre><code>tar -cvf a.tar .  # O anki dizini a.tar i\u00e7ine kopyalar.\ngzip a.tar        # a.tar dosays\u0131n\u0131 a.tar.gz olarak s\u0131k\u0131\u015ft\u0131r\u0131r.\ngzip -d a.tar.gz  # dosyay\u0131 a\u00e7ar \ngunzip  a.tar.gz  # dosyay\u0131 a\u00e7ar\n</code></pre></li> <li><code>zip</code>nzip \u2014 Zip ar\u015fivleriyle \u00e7al\u0131\u015f\u0131r.</li> <li><code>truncate</code> Dosyay\u0131 belirtilen boyuta keser. <pre><code>truncate -s 40 file.txt  #dosyay\u0131 40 byte olarak keser fazlal\u0131k olan k\u0131sm\u0131 siler. S\u0131k\u0131\u015ft\u0131rma i\u015flemi yapmaz.\n</code></pre></li> </ul>"},{"location":"devops/linux/#kabuk-yardm","title":"Kabuk &amp; Yard\u0131m","text":"<ul> <li><code>reboot</code> Sistemi yeniden ba\u015flat\u0131r.</li> <li><code>poweroff</code> Sistemi an\u0131nda kapat\u0131r.</li> <li><code>shutdown</code>  Sistemi kapat\u0131rken se\u00e7enekler sunar.</li> <li><code>exit</code> A\u00e7\u0131k olan kullan\u0131c\u0131dan \u00e7\u0131kar.</li> <li> <p><code>env - printenv</code> Sistemde bulunan evrensel de\u011fi\u015fkenleri g\u00f6sterir. Ortam de\u011fi\u015fkenini kullanmak i\u00e7in <code>$</code> kullan\u0131l\u0131r <pre><code>env\nprintenv\necho $PATH\n</code></pre></p> </li> <li> <p><code>su</code> Kullan\u0131c\u0131 de\u011fi\u015ftirmeyi sa\u011flar. <pre><code>su user_1   # user_1 kullan\u0131c\u0131s\u0131na ge\u00e7er\nsudo su     # root kullan\u0131c\u0131s\u0131na ge\u00e7er\nsudo -i     # root kullan\u0131c\u0131s\u0131 olarak yeni bir kulan\u0131c\u0131 kabugu a\u00e7\u0131lm\u0131\u015f gibi davran\u0131r.\nsudo -s     # o an ki kabugun root gibi davranmas\u0131n\u0131 sa\u011flar.\n</code></pre></p> </li> <li><code>bash</code> Yeni bir kabuk ba\u015flat\u0131r.</li> <li><code>source</code> Betik dosyas\u0131n\u0131 mevcut kabu\u011fa y\u00fckler.</li> <li><code>clear</code> Terminali temizler</li> <li> <p><code>history</code> Kabuk komut ge\u00e7mi\u015fini listeler. <pre><code>history\nHISTSIZE=2000      # history komutunda en fazla ka\u00e7 komut tutulaca\u011f\u0131n\u0131 ayarlar.\n!124               # history komutunda 124 s\u0131rada komut \u00e7al\u0131\u015f\u0131r.\n!!                 # Bir \u00f6nceki komut \u00e7al\u0131\u015f\u0131r\n!-3                # \u00dc\u00e7 \u00f6nceki komut \u00e7al\u0131\u015f\u0131r.\n</code></pre></p> </li> <li> <p><code>man</code> Komut k\u0131lavuz sayfas\u0131n\u0131 a\u00e7ar.</p> </li> <li><code>info</code> GNU bilgi sayfas\u0131n\u0131 g\u00f6sterir.</li> <li><code>--help</code> Komut yard\u0131m\u0131n\u0131 ekrana basar.</li> <li><code>alias - unalias</code> Takma ad olu\u015fturur veya siler.</li> <li> <p><code>apropos</code> Belirtilen anahtar kelimeye g\u00f6re k\u0131lavuz sayfalar\u0131n\u0131 arar. <pre><code>apropos \"list directory contents\"\n</code></pre></p> </li> <li> <p><code>export</code> Ortam de\u011fi\u015fkeni tan\u0131mlar.</p> </li> <li><code>lsb_realease</code>  Kullan\u0131lan s\u00fcr\u00fcm hakk\u0131nda bilgi verir.</li> <li><code>who</code>  Sisteme giri\u015f yapm\u0131\u015f kullan\u0131c\u0131lar\u0131 g\u00f6sterir.</li> <li><code>whatis</code>  Komut hakk\u0131nda k\u0131sa bilgi verir.</li> <li><code>whereis / which</code>  Komutun konumunu g\u00f6sterir.</li> <li> <p><code>wall</code> T\u00fcm kay\u0131tl\u0131 kullan\u0131c\u0131lara terminal \u00fczerinden mesaj iletmenizi sa\u011flar. Yaln\u0131zca yetkili kullan\u0131c\u0131lar taraf\u0131ndan \u00e7al\u0131\u015ft\u0131r\u0131labilir. <pre><code>wall \"Sistem bak\u0131m\u0131 yap\u0131lacakt\u0131r. L\u00fctfen oturumunuzu kaydedin ve bekleyin.\"\n</code></pre></p> </li> <li> <p><code>write</code> Belirli bir kullan\u0131c\u0131ya do\u011frudan mesaj g\u00f6ndermek i\u00e7in kullan\u0131l\u0131r. \u0130leti girdisini tamamlamak i\u00e7in Ctrl\u202f+D tu\u015funa basman\u0131z yeterlidir. <pre><code>write user_1\n# Mesaj\u0131n\u0131z\u0131 yaz\u0131n, ard\u0131ndan Ctrl + D ile g\u00f6nderin\n</code></pre></p> </li> </ul>"},{"location":"devops/linux/#acl-access-control-list","title":"ACL (Access Control List)","text":"<p>Standart Unix izinlerinin \u00f6tesinde, her dosya veya dizine kullan\u0131c\u0131 ve grup bazl\u0131 ayr\u0131nt\u0131l\u0131 eri\u015fim haklar\u0131 tan\u0131mlaman\u0131za imk\u00e2n verir. B\u00f6ylece belirli bir kullan\u0131c\u0131n\u0131n veya grubun okuma, yazma, \u00e7al\u0131\u015ft\u0131rma gibi izinlerini hassas bi\u00e7imde ayarlayabilirsiniz.</p> <ul> <li><code>getfacl</code> Dosya/dizin \u00fczerindeki ACL giri\u015flerini ve temel izinleri g\u00f6sterir.</li> <li><code>setfacl</code> ACL \u00fczerinden izin ekleme, d\u00fczenleme veya silme i\u015flemleri yapar.</li> </ul>"},{"location":"devops/linux/#run-levels","title":"Run Levels","text":"<p>Linux\u2019un geleneksel SysV init sistemi, farkl\u0131 i\u015fletim durumu \u201cseviyelerini\u201d (run levels) rakamlarla tan\u0131mlar. Her run level, hangi servislerin ve i\u015flevlerin aktif olaca\u011f\u0131n\u0131 belirler:</p> Run Level Anlam\u0131 0 Kapatma (shutdown). 1 Tek kullan\u0131c\u0131 modu (sistem bak\u0131m/onar\u0131m). 2 \u00c7oklu kullan\u0131c\u0131 modu, a\u011f hizmeti kapal\u0131 (da\u011f\u0131t\u0131ma g\u00f6re de\u011fi\u015fir). 3 \u00c7oklu kullan\u0131c\u0131 modu, a\u011f hizmeti aktif. 4 Tan\u0131mlanmam\u0131\u015f / Kullan\u0131lmaz. 5 \u00c7oklu kullan\u0131c\u0131 + grafik aray\u00fczl\u00fc (X11/Wayland) + a\u011f hizmeti. 6 Yeniden ba\u015flatma (reboot). <pre><code># Run level de\u011fi\u015ftirme (\u00f6rnek: seviye 3)\nsudo init 3\n</code></pre> <p>Not</p> <p>Modern da\u011f\u0131t\u0131mlarda Systemd kullan\u0131l\u0131yorsa systemctl isolate multi-user.target veya graphical.target komutlar\u0131n\u0131 tercih etmek daha g\u00fcncel bir y\u00f6ntemdir.</p>"},{"location":"devops/linux/#device-tree","title":"Device Tree","text":"<p>G\u00f6m\u00fcl\u00fc Linux sistemlerinde (\u00f6rn. ARM tabanl\u0131 kartlar), donan\u0131m\u0131 \u00e7ekirde\u011fe tan\u0131tmak i\u00e7in Device Tree kullan\u0131l\u0131r. - <code>.dts</code> (Device Tree Source): \u0130nsan taraf\u0131ndan okunabilir metin format\u0131. - <code>.dtb</code> (Device Tree Blob): Derlenmi\u015f, ikili format. 1. Bir sens\u00f6r, kontrolc\u00fc veya ba\u015fka bir ayg\u0131t i\u00e7in \u00f6zellikler .dts dosyas\u0131nda tan\u0131mlan\u0131r. 2. Kernel a\u00e7\u0131l\u0131rken bu veriyi okur, uygun s\u00fcr\u00fcc\u00fcy\u00fc y\u00fckler ve donan\u0131m\u0131 yap\u0131land\u0131r\u0131r. 3. Cihaz\u0131n\u0131 Linux\u2019e \u201ctan\u0131\u015ft\u0131rman\u0131n\u201d en d\u00fczenli yolu: Device Tree!</p>"},{"location":"devops/linux/#driver-surucu","title":"Driver (S\u00fcr\u00fcc\u00fc)","text":"<p>Linux \u00e7ekirde\u011fi ile donan\u0131m aras\u0131nda k\u00f6pr\u00fc kuran yaz\u0131l\u0131m bile\u015fenidir. Donan\u0131m\u0131 alg\u0131lar, kontrol eder ve veri ak\u0131\u015f\u0131n\u0131 y\u00f6netir. Yeni bir cihaz ekledi\u011finde, ilgili s\u00fcr\u00fcc\u00fcy\u00fc kernel mod\u00fcl\u00fc (\u00f6r. *.ko) olarak y\u00fcklersin.</p>"},{"location":"devops/linux/#shell-script","title":"Shell Script","text":"<ul> <li>Linux\u2019ta yayg\u0131n olarak Bash kullan\u0131l\u0131r; y\u00fckl\u00fc t\u00fcm shell\u2019leri g\u00f6rmek i\u00e7in: <code>cat /etc/shells</code></li> <li>Script\u2019in hangi shell ile \u00e7al\u0131\u015faca\u011f\u0131n\u0131 en ba\u015fta belirtmek i\u00e7in shebang kullan\u0131l\u0131r: <code>#!/bin/bash</code></li> <li>Sat\u0131r ba\u015f\u0131na # koyarak o sat\u0131r\u0131 yorum (a\u00e7\u0131klama) haline getirirsiniz.</li> </ul> <p>Not</p> <p>Shebang <code>(#!/bin/bash)</code> da asl\u0131nda yorum sat\u0131r\u0131 gibi davran\u0131r ama kernel\u2019e hangi yorumlay\u0131c\u0131y\u0131 y\u00fckleyece\u011fini s\u00f6yler.</p> <pre><code>#!/bin/bash \n# read, echo, de\u011fi\u015fkenler    \nmy_host=`hostname`   # Bilgisayar\u0131n hostname verisini al\u0131r\nname=\"Arif\"\nname2=arif           # \u0130ki de\u011fi\u015fken atamas\u0131da do\u011frudur.\n\necho \"server name: $my_host\"   # Ekrana \u00e7\u0131kt\u0131 vermeyi sa\u011flar.\necho \"My name is $name.\"       # Bir de\u011fi\u015fkene eri\u015fmek i\u00e7in $ kullan\u0131l\u0131r.   \necho what is your name?\nread new_name                 # Kullan\u0131cdan veri al\u0131nmas\u0131 sa\u011flan\u0131r.\nread new_surname              # Bu olay read name surname olarak tek seferde\n                              # al\u0131nabilir. Bir bolukla de\u011fi\u015fkenler doldurulur.\necho hello $new_name\n</code></pre> Operat\u00f6r Anlam\u0131 \u00d6rnek -eq e\u015fit <code>[ $a -eq 5 ]</code> -ne e\u015fit de\u011fil <code>[ $a -ne 0 ]</code> -lt k\u00fc\u00e7\u00fck <code>[ $a -lt 10 ]</code> -gt b\u00fcy\u00fck <code>[ $a -gt 100 ]</code> -le k\u00fc\u00e7\u00fck veya e\u015fit <code>[ $a -le 20 ]</code> -ge b\u00fcy\u00fck veya e\u015fit <code>[ $a -ge 1 ]</code> -e dosya veya dizin var m\u0131 <code>[ -e /path/to/file ]</code> -f normal dosya mu? <code>[ -f /etc/passwd ]</code> -d dizin mi? <code>[ -d /home/user ]</code> <pre><code>#!/bin/bash\ngun=$(date +%a)  # Mon, Tue, \u2026\n\nif [ \"$gun\" = \"Mon\" ]; then\n  echo \"Bug\u00fcn Pazartesi.\"\nelif [ \"$gun\" = \"Tue\" ]; then\n  echo \"Bug\u00fcn Sal\u0131.\"\nelse\n  echo \"Hafta i\u00e7i ba\u015fka bir g\u00fcn.\"\nfi\n\nfor i in 1 2 3 4 5; do\n  echo \"Saya\u00e7: $i\"\ndone\n\nfor num in {1..10}; do\n  echo \"Numara = $num\"\n  sleep 1\ndone\n\ncount=0\nwhile [ \"$count\" -lt 5 ]; do\n  echo \"Merhaba D\u00fcnya ($count)\"\n  ((count++))\n  sleep 1\ndone\n\necho \"Se\u00e7iminiz (a: ls, b: cd ~, c: echo):\"\nread choice\n\ncase \"$choice\" in\n  a) ls ;;\n  b) cd ~ ;;\n  c) echo \"Hello, world!\" ;;\n  *) echo \"Ge\u00e7ersiz se\u00e7im!\" ;;\nesac\n</code></pre>"},{"location":"devops/linux/#ag","title":"A\u011f","text":""},{"location":"devops/linux/#ip-adresleri-ve-snflar","title":"IP Adresleri ve S\u0131n\u0131flar\u0131","text":"<p>A\u011f \u00fczerinde ileti\u015fim kuran her cihaza atanan benzersiz 32\u2011bit (IPv4) veya 128\u2011bit (IPv6) say\u0131d\u0131r. IPv4\u2019te d\u00f6rt ondal\u0131k b\u00f6l\u00fcmle (\u00f6r. 192.168.1.10), IPv6\u2019da ise sekiz grup onalt\u0131l\u0131k say\u0131yla (2001:0db8:85a3::8a2e:0370:7334) g\u00f6sterilir. - IP (Internet Protocol): \u0130nternetteki her cihaz\u0131n benzersiz kimli\u011fidir. Trafi\u011fin do\u011fru hedefe y\u00f6nlendirilmesini sa\u011flar. - S\u0131n\u0131flar: Eskiden her ip adresi 5 s\u0131n\u0131fa ayr\u0131l\u0131rd\u0131. G\u00fcn\u00fcm\u00fczde CIDR yayg\u0131n olsa da temel fikir halen \u00f6\u011fretici:</p> S\u0131n\u0131f Aral\u0131k Kullan\u0131m Alan\u0131 A 0.0.0.0   - 127.255.255.255 \u00c7ok b\u00fcy\u00fck a\u011flar B 128.0.0.0 - 191.255.255.255 Orta boy a\u011flar C 192.0.0.0 - 223.255.255.255 K\u00fc\u00e7\u00fck a\u011flar D 224.0.0.0 - 239.255.255.255 Multicast yay\u0131nlar E 240.0.0.0 - 255.255.255.255 Deneysel / rezerve <ul> <li>Loopback: 127.0.0.1 \u201ckendi kendinle konu\u015fman\u201d i\u00e7in. Yerel sistem testi ve geli\u015ftirme i\u00e7in vazge\u00e7ilmez.</li> </ul>"},{"location":"devops/linux/#subnet-mask-alt-ag-maskesi","title":"Subnet Mask (Alt A\u011f Maskesi)","text":"<ul> <li>IP adresini \u201ca\u011f k\u0131sm\u0131\u201d ve \u201ccihaz k\u0131sm\u0131\u201d olarak ikiye b\u00f6len 32\u2011bit de\u011fer. Genellikle d\u00f6rt ondal\u0131k b\u00f6l\u00fcmle g\u00f6sterilir (\u00f6r. 255.255.255.0). 255 olan bitler \u2192 a\u011f adresini, 0 olan bitler \u2192 host (cihaz) adresini temsil eder</li> <li>\u00d6rnek: 255.255.255.0 \u2192 ilk 24 bit a\u011f, son 8 bit host.</li> <li>CIDR kar\u015f\u0131l\u0131\u011f\u0131: /24</li> </ul> <pre><code>ip addr show eth0\n# \u00c7\u0131kt\u0131da \"inet 192.168.1.10/24\" g\u00f6r\u00fcrseniz:\n#   - IP: 192.168.1.10\n#   - Alt a\u011f masking: /24 (255.255.255.0)\n</code></pre>"},{"location":"devops/linux/#gateway-varsaylan-ag-gecidi","title":"Gateway (Varsay\u0131lan A\u011f Ge\u00e7idi)","text":"<ul> <li>Yerel a\u011fdan \u00e7\u0131k\u0131\u015f noktas\u0131d\u0131r. Genellikle bir router veya firewall cihaz\u0131.</li> <li>Farkl\u0131 a\u011flar\u0131 birbirine ba\u011flar.</li> <li>Bir cihaz ba\u015fka a\u011fdaki IP\u2019lere paket g\u00f6nderdi\u011finde kullan\u0131l\u0131r. <pre><code>ip route\n# default via 192.168.1.1 dev eth0 (Burada 192.168.1.1 sizin gateway\u2019inizdir.)\n</code></pre></li> </ul>"},{"location":"devops/linux/#mac-adresi","title":"MAC Adresi","text":"<ul> <li>Her NIC (Network Interface Card) i\u00e7in \u00fcretici taraf\u0131ndan atanan 48\u2011bit benzersiz donan\u0131m adresi. Genellikle alt\u0131 \u00e7ift onalt\u0131l\u0131k say\u0131 ile g\u00f6sterilir (00:1A:2B:3C:4D:5E).</li> <li>Veri Ba\u011flant\u0131 Katman\u0131 (OSI Katman 2).</li> <li>Donan\u0131ma g\u00f6m\u00fcl\u00fc, normalde de\u011fi\u015ftirilemez (ancak ip link set dev eth0 address ile yaz\u0131l\u0131mla da de\u011fi\u015ftirilebilir).</li> <li>IP adresi katman\u0131ndan ba\u011f\u0131ms\u0131z \u00e7al\u0131\u015f\u0131r; LAN i\u00e7i ileti\u015fimde kullan\u0131l\u0131r. <pre><code>ip link show eth0\n# link/ether 00:1a:2b:3c:4d:5e brd ff:ff:ff:ff:ff:ff\n</code></pre></li> </ul>"},{"location":"devops/linux/#dns-domain-name-system","title":"DNS (Domain Name System)","text":"<ul> <li>Alan adlar\u0131n\u0131 (\u00f6r. chat.openai.com) IP adreslerine \u00e7eviren hiyerar\u015fik da\u011f\u0131t\u0131k bir sistem.</li> <li>\u201c\u0130nsan-dostu\u201d isimlerle internette gezinmeyi m\u00fcmk\u00fcn k\u0131lar. <pre><code>dig +short example.com\n# ya da\nnslookup example.com\n</code></pre></li> </ul>"},{"location":"devops/linux/#nic-network-interface-card","title":"NIC (Network Interface Card)","text":"<ul> <li>A\u011fa ba\u011fl\u0131 cihazlar ve bilgisayarlar aras\u0131ndaki veri ileti\u015fimini y\u00f6netmek i\u00e7in kullan\u0131lan bir donan\u0131m bile\u015fenidir. NIC, bir bilgisayar\u0131n a\u011fa ba\u011flanabilmesi i\u00e7in gereken fiziksel ba\u011flant\u0131y\u0131 sa\u011flar ve verilerin kablosuz veya kablolu a\u011flar \u00fczerinden transfer edilmesini sa\u011flar</li> <li>Fiziksel veya sanal a\u011f adapt\u00f6r\u00fc.</li> <li>Ethernet, Wi\u2011Fi, Bluetooth vs. gibi farkl\u0131 t\u00fcrleri vard\u0131r.</li> </ul> <p>Not</p> <p><code>/etc/hosts</code> K\u00fc\u00e7\u00fck \u00f6l\u00e7ekli isim\u2011adres e\u015fle\u015ftirmelerini i\u00e7erir. </p>"},{"location":"devops/linux/#ftp-file-transfer-protocol","title":"FTP (File Transfer Protocol)","text":"<ul> <li>Port 21 \u00fczerinden \u00e7al\u0131\u015fan eski i\u015flevsel dosya aktar\u0131m protokol\u00fc. \u015eifrelenmemi\u015ftir, bu y\u00fczden g\u00fcvensiz kabul edilir. <pre><code>ftp ftp.example.com\n# kullan\u0131c\u0131 ve \u015fifre ile oturum a\u00e7ars\u0131n\u0131z\n</code></pre></li> </ul>"},{"location":"devops/linux/#rsync","title":"Rsync","text":"<ul> <li>Dosya ve dizinleri hem yerelde hem de uzak sistemlerde senkronize eden, delta-transfer (sadece de\u011fi\u015fen bloklar\u0131) destekli ara\u00e7.<ul> <li><code>-a</code> Ar\u015fiv modu (izinler, tarih, vs.)</li> <li><code>-v</code> Ayr\u0131nt\u0131l\u0131 \u00e7\u0131kt\u0131</li> <li><code>-z</code> S\u0131k\u0131\u015ft\u0131rma</li> <li><code>--progress</code> Aktar\u0131m durumu</li> <li><code>--delete</code> ile hedefde olmayan dosyalar\u0131 siler.</li> <li><code>--dry-run</code> ile neler yap\u0131laca\u011f\u0131n\u0131 test edersiniz.</li> </ul> </li> </ul> <pre><code>rsync -avz --progress /local/dir/ user@remote:/backup/dir/\n</code></pre>"},{"location":"devops/linux/#scp-secure-copy-protocol","title":"SCP (Secure Copy Protocol)","text":"<ul> <li>SSH t\u00fcneli \u00fczerinden dosya transferi yapan, verileri otomatik olarak \u015fifreleyen ara\u00e7.</li> <li><code>-r:</code> Dizinleri recursive kopyalar. <pre><code>scp -r ./project user@192.168.1.100:/var/www/html/\n</code></pre></li> </ul>"},{"location":"devops/linux/#ssh-secure-shell","title":"SSH (Secure Shell)","text":"<ul> <li>Uzak makinaya \u015fifreli ba\u011flant\u0131 kuran, komut sat\u0131r\u0131 ve port y\u00f6nlendirme gibi \u00f6zellikler sunan protokol. <code>ssh user@remote_host</code></li> <li>\u00d6nemli Ayarlar (/etc/ssh/sshd_config):</li> </ul> Ayar A\u00e7\u0131klama Port SSH dinleme portu (varsay\u0131lan 22). PermitRootLogin no Direkt root giri\u015fini engeller. PermitEmptyPasswords Bo\u015f parola kullan\u0131m\u0131n\u0131 yasaklar. AllowUsers serkan Sadece belirtilen kullan\u0131c\u0131(lar) giri\u015f yapabilir. ClientAliveInterval Bo\u015fta kal\u0131nd\u0131\u011f\u0131nda sunucudan istemciye ping g\u00f6nderme aral\u0131\u011f\u0131 (s). ClientAliveCountMax Ka\u00e7 ping sonras\u0131 ba\u011flant\u0131y\u0131 keser (0 = s\u0131n\u0131rs\u0131z). Anahtar Tabanl\u0131 Kimlik Do\u011frulama<pre><code>ssh-keygen -t ed25519     # Anahtar \u00e7ifti olu\u015fturur\nssh-copy-id user@host     # Public anahtar\u0131 uzak sunucuya kopyalar\nssh -i ~/.ssh/id_ed25519 user@host  # Belirli anahtar ile ba\u011flanma\n</code></pre>"},{"location":"devops/linux/#cockpit","title":"Cockpit","text":"<ul> <li>Web tabanl\u0131, interaktif sunucu y\u00f6netim konsolu. Sistem durumu, servisler, konteynerler ve kullan\u0131c\u0131 y\u00f6netimi gibi i\u015flemleri taray\u0131c\u0131da yapman\u0131z\u0131 sa\u011flar.</li> </ul>"},{"location":"devops/linux/#dhcp-dynamic-host-configuration-protocol","title":"DHCP (Dynamic Host Configuration Protocol)","text":"<ul> <li>LAN\u2019a kat\u0131lan cihazlara otomatik IP, subnet mask, gateway ve DNS bilgisi atayan protokol.</li> </ul>"},{"location":"devops/linux/#communication","title":"Communication","text":""},{"location":"devops/linux/#netlink-soketleri","title":"Netlink Soketleri","text":"<ul> <li>Linux \u00e7ekirde\u011fi ile kullan\u0131c\u0131 alan\u0131 (user\u2010space) uygulamalar\u0131 aras\u0131nda ileti\u015fim sa\u011flar.</li> <li>AF_NETLINK (veya PF_NETLINK) adres ailesini kullan\u0131r.</li> <li>Yayg\u0131n mesaj tipleri: NETLINK_ROUTE (a\u011f y\u00f6nlendirme), NETLINK_NETFILTER (iptables), NETLINK_KOBJECT_UEVENT (udev olaylar\u0131) vb.</li> <li>Mesaj yap\u0131s\u0131: <pre><code>struct nlmsghdr {\n    __u32 nlmsg_len;   /* Ba\u015fl\u0131k + veri uzunlu\u011fu */\n    __u16 nlmsg_type;  /* Mesaj tipi */\n    __u16 nlmsg_flags; /* Bayraklar (\u00f6rn. NLM_F_REQUEST) */\n    __u32 nlmsg_seq;   /* S\u0131ra numaras\u0131 */\n    __u32 nlmsg_pid;   /* Kaynak PID */\n};\n\nint sock = socket(AF_NETLINK, SOCK_RAW, NETLINK_ROUTE);\n</code></pre></li> </ul>"},{"location":"devops/linux/#ioctl-inputoutput-control","title":"ioctl (Input/Output Control)","text":"<ul> <li>Cihaz s\u00fcr\u00fcc\u00fcleriyle veya \u00f6zel dosya tabanl\u0131 aray\u00fczlerle kontrol komutlar\u0131 g\u00f6ndermek i\u00e7in kullan\u0131lan bir sistem \u00e7a\u011fr\u0131s\u0131d\u0131r.</li> </ul>"},{"location":"devops/linux/#aygt-dosyalar-device-files","title":"Ayg\u0131t Dosyalar\u0131 (Device Files)","text":"<ul> <li><code>/dev</code> alt\u0131nda bulunan, fiziksel veya sanal donan\u0131m ayg\u0131tlar\u0131n\u0131 temsil eden \u00f6zel dosyalard\u0131r.</li> <li>Her bir ayg\u0131t dosyas\u0131, major (s\u00fcr\u00fcc\u00fc) ve minor (ayg\u0131t) numaralar\u0131yla e\u015flenir.</li> </ul>"},{"location":"devops/linux/#sistem-cagrlar-system-calls","title":"Sistem \u00c7a\u011fr\u0131lar\u0131 (System Calls)","text":"<ul> <li>Kullan\u0131c\u0131 alan\u0131ndaki uygulamalar\u0131n \u00e7ekirdek (kernel) fonksiyonlar\u0131n\u0131 \u00e7al\u0131\u015ft\u0131rmas\u0131n\u0131 sa\u011flayan temel aray\u00fczd\u00fcr.</li> <li>\u00d6rnekler:<ul> <li>Dosya i\u015flemleri: <code>open(), read(), write(), close()</code></li> <li>S\u00fcre\u00e7 kontrol\u00fc: <code>fork(), execve(), waitpid()</code></li> <li>Bellek y\u00f6netimi: <code>mmap(), brk()</code></li> <li>A\u011f ileti\u015fimi: <code>socket(), bind(), connect(), send(), recv()</code></li> </ul> </li> <li>Uygulamalar genellikle glibc gibi k\u00fct\u00fcphaneler \u00fczerinden dolayl\u0131 \u00e7a\u011fr\u0131 yapar; nihai i\u015f syscall talebiyle \u00e7ekirde\u011fe d\u00fc\u015fer.</li> <li>POSIX uyumlulu\u011fu sayesinde, farkl\u0131 Unix t\u00fcrevi sistemlerde benzer aray\u00fczler kullan\u0131l\u0131r.</li> </ul>"},{"location":"devops/linux/#systemd","title":"Systemd","text":"<ul> <li>Systemd, modern Linux da\u011f\u0131t\u0131mlar\u0131nda \u201cinit\u201d sisteminin yerini alan bir sistem ve hizmet y\u00f6neticisidir.</li> <li>Ama\u00e7lar\u0131:<ul> <li>Paralel ba\u015flatma ile a\u00e7\u0131l\u0131\u015f s\u00fcresini k\u0131saltmak.</li> <li>Ba\u011f\u0131ml\u0131l\u0131k grafi\u011fi kullanarak servisler aras\u0131 do\u011fru s\u0131ray\u0131 garantilemek.</li> <li>Journald ile merkezi g\u00fcnl\u00fck kayd\u0131 (log) tutmak.</li> <li>Socket, D-Bus, timer, mount ve daha pek \u00e7ok birimi y\u00f6netmek. -Genel Konumlar</li> <li>Sistem geneli: <code>/etc/systemd/system/</code></li> <li>Da\u011f\u0131t\u0131m birincil: <code>/lib/systemd/system/</code> veya <code>/usr/lib/systemd/system/</code></li> <li>Kullan\u0131c\u0131 bazl\u0131: <code>~/.config/systemd/user/</code></li> </ul> </li> <li> <p>Her <code>.service</code> dosyas\u0131 \u00fc\u00e7 ana ba\u015fl\u0131\u011fa sahiptir: <pre><code>[Unit]\nDescription=K\u0131sa ve \u00f6z a\u00e7\u0131klama\nAfter=network.target\nWants=postgresql.service\n\n[Service]\nType=simple\nExecStart=/usr/bin/my-daemon --option\nExecReload=/bin/kill -HUP $MAINPID\nRestart=on-failure\nRestartSec=5s\nUser=myuser\nEnvironment=ENV_VAR=value\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></p> </li> <li> <p><code>[Unit]</code></p> <ul> <li>Description: Hizmetin ne yapt\u0131\u011f\u0131n\u0131 \u00f6zetler.</li> <li>After / Before: Ba\u015flama s\u0131ras\u0131n\u0131 ayarlar. \u00d6rne\u011fin After=network.target \u2192 a\u011f haz\u0131r olmadan ba\u015flamaz.</li> <li>Wants / Requires: Zay\u0131f / g\u00fc\u00e7l\u00fc ba\u011f\u0131ml\u0131l\u0131k ili\u015fkileri kurar.</li> </ul> </li> <li> <p><code>[Service]</code></p> <ul> <li>Type: Ba\u015flatma davran\u0131\u015f\u0131n\u0131 belirler.<ul> <li>simple (default): ExecStart arka planda ayr\u0131lmadan \u00e7al\u0131\u015f\u0131r.</li> <li>forking: Daemon arka plana fork etti\u011finde kabul edilir.</li> <li>oneshot: Tek seferlik k\u0131sa i\u015fler i\u00e7in.</li> <li><code>notify, dbus, idle vb.</code> geli\u015fmi\u015f tipler de var.</li> </ul> </li> <li>ExecStart, ExecReload, ExecStop: Ba\u015flatma, yeniden y\u00fckleme ve durdurma komutlar\u0131.</li> <li>Restart: Yeniden ba\u015flatma ko\u015fullar\u0131 (no, on-success, on-failure, always vb.).</li> <li>RestartSec: Yeniden ba\u015flatma \u00f6ncesi bekleme s\u00fcresi.</li> <li>User / Group: Hizmeti hangi kullan\u0131c\u0131/grup alt\u0131nda \u00e7al\u0131\u015ft\u0131raca\u011f\u0131n\u0131 belirler.</li> <li>Environment: \u00c7evresel de\u011fi\u015fkenleri tan\u0131mlar.</li> <li>WorkingDirectory: \u00c7al\u0131\u015fma dizinini ayarlar.</li> </ul> </li> <li> <p><code>[Install]</code></p> <ul> <li>WantedBy: Hangi target\u2019a \u201cenable\u201d edildi\u011finde eklenece\u011fini tan\u0131mlar. \u00d6rne\u011fin <code>multi-user.target \u2192 systemctl enable my.service ile /etc/systemd/system/multi-user.target.wants/my.service</code> ba\u011flant\u0131s\u0131 olu\u015fturulur.</li> <li>RequiredBy: Zorunlu alt birim ili\u015fkisi olu\u015fturur</li> </ul> </li> </ul>"},{"location":"devops/linux/#systemctl-komutlar","title":"systemctl Komutlar\u0131","text":"<pre><code>sudo systemctl start   my.service   # Ba\u015flat\u0131r\nsudo systemctl stop    my.service   # Durdurur\nsudo systemctl restart my.service   # Yeniden ba\u015flat\u0131r\nsudo systemctl status  my.service   # Durum bilgisini g\u00f6sterir\n\nsudo systemctl enable  my.service   # Boot\u2019ta otomatik ba\u015flayacak \u015fekilde i\u015faretler\nsudo systemctl disable my.service   # Art\u0131k otomatik ba\u015flamaz\nsudo systemctl is-enabled my.service  # Etkin mi diye kontrol eder\n\nsudo systemctl daemon-reload # Yeni veya g\u00fcncellenmi\u015f birim dosyalar\u0131n\u0131 tan\u0131tmak\n\nsystemctl list-units --all # T\u00fcm birimleri listeler\nsystemctl list-units --type=target  # Sadece target\u2019lar\u0131 g\u00f6r\n\n# Sistemi kapat / yeniden ba\u015flat / uyku moduna al\nsudo systemctl poweroff\nsudo systemctl reboot\nsudo systemctl suspend\nsudo systemctl hibernate\n</code></pre> <pre><code>[Unit]\nDescription=ROS 2 Startup Service\nAfter=network.target\n\n[Service]\nType=simple\nUser=rosuser\nEnvironment=HOME=/home/rosuser\nExecStart=/home/rosuser/start_ros2.sh\nRestart=on-failure\nRestartSec=10s\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <ul> <li>Bu dosyay\u0131 <code>/etc/systemd/system/ros2-start.service</code> olarak kaydedin.</li> </ul> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable  ros2-start.service\nsudo systemctl start   ros2-start.service\n</code></pre>"},{"location":"devops/linux/#birim-unit-turleri","title":"Birim (Unit) T\u00fcrleri","text":"Tip Uzant\u0131 Ne \u0130\u015fe Yarar? Service .service Arka plan hizmetlerini (daemon) tan\u0131mlar. Target .target \u00c7e\u015fitli birimleri gruplar, run level yerine ge\u00e7er. Socket .socket Socket-activated servisler tan\u0131mlar. Timer .timer Zamanlanm\u0131\u015f g\u00f6revler (cron alternatifi). Mount .mount Dosya sistemleri otomatik monteler. Path .path Dosya/dizin de\u011fi\u015fikliklerini tetikleyici yapar."},{"location":"embedded/avr/","title":"AVR","text":""},{"location":"embedded/avr/#gpio-nedir","title":"GPIO Nedir?","text":"<p>GPIO (General Purpose Input/Output): Mikrodenetleyicinin dijital giri\u015f/\u00e7\u0131k\u0131\u015f pinlerini kontrol etmenizi sa\u011flar. Bir pin\u2019i INPUT (okuma) veya OUTPUT (yazma) modu olarak yap\u0131land\u0131rabilirsiniz.</p>"},{"location":"embedded/avr/#data-direction-register-ddrx","title":"Data Direction Register (DDRx)","text":"<p> - DDRx register\u2019\u0131, ilgili port pinlerinin giri\u015f (0) mi yoksa \u00e7\u0131k\u0131\u015f (1) mi oldu\u011funu belirler. - \u00d6rne\u011fin AVR\u2019de DDRB, DDRC, DDRD portlar\u0131 vard\u0131r.</p> <pre><code>// PORTD\u2019in 0. pini OUTPUT (\u00e7\u0131k\u0131\u015f) olarak ayarlan\u0131yor:\nDDRD = 0b00000001;   // ayn\u0131: DDRD = 0x01;\n\n// T\u00fcm pinleri OUTPUT yapmak i\u00e7in:\nDDRD = 0xFF;         // 0b11111111\n</code></pre> HIGH NIBBLE LOW NIBBLE UPPER    NIBBER LOWER NIBBLE 0  0  0  0 0  0  0  0 MSB (Most Significant Bit) LSB (Least Significant Bit)"},{"location":"embedded/avr/#port-output-register-portx","title":"Port Output Register (PORTx)","text":"<ul> <li><code>PORTx</code> register\u2019\u0131, \u00e7\u0131k\u0131\u015f modundaki pinlere HIGH (1) veya LOW (0) \u00e7\u0131k\u0131\u015f seviyesini atar.</li> <li><code>Binary</code> veya <code>hex</code> ile yazabilirsiniz:</li> </ul> <pre><code>DDRD  = 0x01;        // D0 pinini OUTPUT yap\nPORTD = 0x01;        // D0 pinini HIGH (5V)\n\n// T\u00fcm pinleri HIGH yapmak:\nPORTD = 0xFF;        // 0b11111111\n\n// T\u00fcm pinleri LOW yapmak:\nPORTD = 0x00;        // 0b00000000\n</code></pre>"},{"location":"embedded/avr/#bit-duzeyi-islemler","title":"Bit D\u00fczeyi \u0130\u015flemler","text":"Operat\u00f6r A\u00e7\u0131klama <code>&amp;</code> Bitwise AND (VE) <code>|</code> <code>^</code> Bitwise XOR (\u00d6ZEL VEYA) <code>~</code> Bitwise NOT (T\u00fcm\u00fcleyen) <code>&lt;&lt;</code> Bitleri sola kayd\u0131rma (shift left) <code>&gt;&gt;</code> Bitleri sa\u011fa kayd\u0131rma (shift right) <ul> <li>Nibble: 4 bit \u2192 0000\u20131111 (hex\u2019de 0\u2013F)</li> <li>MSB (Most Significant Bit) en soldaki; LSB (Least Significant Bit) en sa\u011fdaki bittir.</li> </ul>"},{"location":"embedded/avr/#tek-bir-pini-kontrol-etmek","title":"Tek Bir Pini Kontrol Etmek","text":"<ul> <li>En temiz y\u00f6ntem, bit kayd\u0131rma (1 &lt;&lt; bit_no) ve mant\u0131ksal operat\u00f6rler kullanmakt\u0131r:</li> <li><code>|=</code> ve <code>&amp;=</code> kullan\u0131m\u0131, di\u011fer pin de\u011ferlerini koruyarak yaln\u0131zca istedi\u011finiz biti de\u011fi\u015ftirir.</li> </ul> <pre><code>#include &lt;stdint.h&gt;\n\n// D0 pinini HIGH yapmak (di\u011fer pinler etkilenmez)\nPORTD |= (1 &lt;&lt; PORTD0);\n\n// D0 pinini LOW yapmak\nPORTD &amp;= ~(1 &lt;&lt; PORTD0);\n\n// Ayn\u0131 anda D0 ve D1 pinlerini HIGH yapmak\nPORTD |= (1 &lt;&lt; PORTD0) | (1 &lt;&lt; PORTD1);\n</code></pre> <pre><code>#include &lt;avr/io.h&gt;\n#include &lt;util/delay.h&gt;\n#include &lt;stdint.h&gt;\n\nint main(void) {\n    // T\u00fcm PORTD pinlerini OUTPUT olarak ayarla\n    DDRD = 0xFF;\n\n    while (1) {\n        // S\u0131rayla LED\u2019i yak\n        for (uint8_t i = 0; i &lt; 8; i++) {\n            PORTD |= (1 &lt;&lt; i);\n            _delay_ms(100);\n        }\n        // S\u0131rayla LED\u2019i s\u00f6nd\u00fcr\n        for (uint8_t i = 0; i &lt; 8; i++) {\n            PORTD &amp;= ~(1 &lt;&lt; i);\n            _delay_ms(100);\n        }\n        // Alternatif olarak XOR ile toggle:\n        for (uint8_t i = 0; i &lt; 8; i++) {\n            PORTD ^= (1 &lt;&lt; i);\n            _delay_ms(100);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>Not</p> <p><code>int</code> gibi bilgisayar\u0131n sistemine g\u00f6re de\u011fi\u015fen boyutlar\u0131n kullan\u0131m\u0131 baz\u0131 durumlarda de\u011fi\u015fik alanlar kaplad\u0131\u011f\u0131ndan sorun yartabilir bu y\u00fczden her sistemde ayn\u0131 bellek alan\u0131 geni\u015fli\u011fi tutan birimlerin kullan\u0131m\u0131 daha g\u00fcvenlidir. <code>uint8_t</code> ,<code>uint16_t</code> \u2026.</p> <ul> <li><code>uint8_t</code> gibi sabit geni\u015flikte tipler kullanmak, platform ba\u011f\u0131ms\u0131zl\u0131\u011f\u0131 sa\u011flar.</li> <li>DDRD ve PORTD bellek adresleri \u00fczerinden do\u011frudan eri\u015filen I/O register\u2019lar\u0131d\u0131r. olarak DDRD bellek alan\u0131 <code>0x2A</code> bu k\u0131s\u0131ma eri\u015fip bu k\u0131s\u0131mda de\u011fi\u015fiklikler yap\u0131p pinlerin durumlar\u0131 belirlenebilir.</li> </ul> <p></p> <pre><code>//Bu k\u0131sm\u0131n anlam\u0131 0x2A bir adrestir ve bu adresin i\u00e7inde bulunan verinin ad\u0131 myDDRD dir.\n#define myDDRD *((uint8_t*)0x2A) \n</code></pre>"},{"location":"embedded/avr/#pinx-giris-okuma-register","title":"PINx \u2013 Giri\u015f Okuma Register\u2019\u0131","text":"<ul> <li>PINx register\u2019\u0131, o porta ba\u011fl\u0131 pinlerin giri\u015f (INPUT) durumunda okunan dijital seviyesini (HIGH/LOW) yans\u0131t\u0131r.</li> <li>AVR\u2019de: <code>PINB</code>, <code>PINC</code>, <code>PIND</code> gibi isimlerle kullan\u0131l\u0131r.</li> <li>Pull\u2011Up ve Pull\u2011Down: <ul> <li>Arduino kartlar\u0131nda dahili pull\u2011up diren\u00e7leri vard\u0131r; bu sayede unconnected (y\u00fczer) pinler HIGH seviyede sabitlenir.</li> <li>E\u011fer dahili pull\u2011up\u2019u devre d\u0131\u015f\u0131 b\u0131rakmak isterseniz, MCUCR\u2019daki PUD bitini 1 yapabilirsiniz: <code>MCUCR |= (1 &lt;&lt; PUD);  // Pull\u2011Up Disable</code></li> </ul> </li> </ul> Giri\u015f seviyesini okumak<pre><code>// PINB\u2019in 0. bitini oku\nif (PINB &amp; (1 &lt;&lt; PORTB0)) {\n    // D\u00fc\u011fme bas\u0131l\u0131 (HIGH)\n} else {\n    // D\u00fc\u011fme serbest (LOW)\n}\n</code></pre> Debouncing (Titre\u015fim Giderme)<pre><code>if (PINB &amp; (1 &lt;&lt; PORTB0)) {     // Butona bas\u0131ld\u0131ysa\n    _delay_ms(50);              // 50\u202fms bekle\n    if (PINB &amp; (1 &lt;&lt; PORTB0)) { // Hala bas\u0131l\u0131 m\u0131?\n        // Ge\u00e7erli bas\u0131\u015f\n    }\n}\n</code></pre>"},{"location":"embedded/avr/#isr-kesme-servis-rutinleri","title":"ISR \u2013 Kesme Servis Rutinleri","text":"<ul> <li>SREG i\u00e7indeki I biti (<code>sei()</code>) set edilirse ve bir kesme kayna\u011f\u0131 tetiklenirse, ilgili ISR() fonksiyonu \u00e7al\u0131\u015f\u0131r.</li> <li>Kesmenin i\u015flenebilmesi i\u00e7in:<ul> <li>Global interrupt (sei()) a\u00e7\u0131k olmal\u0131.</li> <li>\u0130lgili Mask Register\u2019da (\u00f6r. EIMSK) o kesme kayna\u011f\u0131 izinli olmal\u0131.</li> </ul> </li> </ul> D\u0131\u015f Kesme INT0<pre><code>#include &lt;avr/io.h&gt;\n#include &lt;avr/interrupt.h&gt;\n\nint main(void) {\n    // 1. INT0 maskesini a\u00e7 (EIMSK)\n    EIMSK |= (1 &lt;&lt; INT0);\n\n    // 2. Kesme tetikleme konfig\u00fcrasyonu (EICRA: d\u00fc\u015f\u00fck/rising se\u00e7imi)\n    EICRA |= (1 &lt;&lt; ISC01);  // ISC01=1, ISC00=0 \u2192 fall edge\n\n    // 3. Global interrupt a\u00e7\n    sei();\n\n    while (1) {\n        // Ana d\u00f6ng\u00fc\n    }\n}\n\n// INT0 kesmesi ger\u00e7ekle\u015fince buras\u0131 \u00e7al\u0131\u015f\u0131r\nISR(INT0_vect) {\n    // Kesme i\u015fleme kodu\n}\n</code></pre> Register \u0130\u015flevi EIMSK External Interrupt Mask Register EICRA External Interrupt Control Register A EIFR External Interrupt Flag Register MCUCR MCU Control Register (\u00f6rn. PUD bit\u2019i) SREG Status Register (I biti = global interrupt)"},{"location":"embedded/avr/#pin-change-interrupt-pcint","title":"Pin Change Interrupt (PCINT)","text":"<ul> <li>PCICR register\u2019\u0131 ile belirli portlardaki pin de\u011fi\u015fim kesmelerini etkinle\u015ftirirsiniz.</li> <li>PCMSKx (Pin Change Mask) ile hangi pinlerin izlece\u011fini se\u00e7ersiniz.</li> </ul>"},{"location":"embedded/avr/#timercounter","title":"Timer/Counter:","text":"<ul> <li>AVR mikrodenetleyicilerde \u00fc\u00e7 temel timer vard\u0131r:</li> </ul> Timer Bit Geni\u015fli\u011fi Maks Saya\u00e7 De\u011feri Timer0 8 bit 255 Timer1 16 bit 65535 Timer2 8 bit 255 <ul> <li> <p>CPU Frekans\u0131 ve Zaman Ad\u0131m\u0131: </p> <ul> <li>Arduino Uno\u2019da <code>F_CPU = 16\u202fMHz \u2192 1 d\u00f6ng\u00fc = 1\u202f/\u202f16\u202f000\u202f000\u202fs \u2248 0.0625\u202f\u03bcs</code></li> <li>Timer saya\u00e7 ad\u0131m\u0131 = Prescaler\u2019a ba\u011fl\u0131 olarak CPU d\u00f6ng\u00fc s\u00fcresinin katlar\u0131 olur.</li> </ul> </li> <li> <p>Basit Delay Hesab\u0131: </p> <ul> <li>CTC (Clear Timer on Compare) modunda, belirli bir gecikme i\u00e7in \u201ccompare match\u201d de\u011feri hesaplan\u0131r <code>OCRn = (DesiredDelay_s / TickTime_s) - 1</code></li> <li>TickTime_s = Prescaler \u00d7 (1 / F_CPU)</li> <li>\u00d6rnek: 10\u202fms gecikme, prescaler = 64:</li> </ul> </li> </ul> <pre><code>TickTime = 64 / 16\u202f000\u202f000 = 4\u202f\u03bcs\nOCRn = (0.010\u202fs / 4e\u20116) - 1 \u2248 2499\n</code></pre> CTC Mode \u00d6rne\u011fi (Timer1)<pre><code>#include &lt;avr/io.h&gt;\n#include &lt;avr/interrupt.h&gt;\n\nvoid timer1_ctc_init(uint16_t ocr) {\n    TCCR1B |= (1 &lt;&lt; WGM12);         // CTC modu\n    OCR1A = ocr;                    // Compare de\u011feri\n    TCCR1B |= (1 &lt;&lt; CS11) | (1 &lt;&lt; CS10); // Prescaler = 64\n    TIMSK1 |= (1 &lt;&lt; OCIE1A);        // Compare A kesmesini a\u00e7\n    sei();                          // Global interrupt\n}\n\nISR(TIMER1_COMPA_vect) {\n    // 1 ms veya belirledi\u011finiz s\u00fcrede burada \u00e7al\u0131\u015f\u0131r\n}\n\nint main(void) {\n    // Yakla\u015f\u0131k 1 ms i\u00e7in\n    uint16_t ocr = (16e6/64/1000) - 1;  \n    timer1_ctc_init(ocr);\n    while (1) { }\n}\n</code></pre>"},{"location":"embedded/embedded_programming/","title":"Embedded Programming","text":""},{"location":"embedded/embedded_programming/#cpu-central-processing-unit","title":"CPU (Central Processing Unit)","text":"<ul> <li>Mikrodenetleyici veya bilgisayar\u0131n \u201cbeyni\u201d konumundaki birimdir. Komutlar\u0131 al\u0131r, yorumlar ve y\u00fcr\u00fct\u00fcr.</li> <li>ALU (Arithmetic Logic Unit): Aritmetik (toplama, \u00e7\u0131karma, \u00e7arpma\u2026) ve mant\u0131ksal (AND, OR, XOR\u2026) i\u015flemleri yapar.</li> <li>CU (Control Unit): Komutlar\u0131 s\u0131rayla okur, gerekli sinyalleri \u00fcretir ve di\u011fer birimlerin senkronizasyonunu sa\u011flar.</li> <li>Register\u2019lar: <ul> <li>\u00c7ok h\u0131zl\u0131, k\u00fc\u00e7\u00fck kapasiteli ge\u00e7ici depolama birimleri.</li> <li>\u00d6rne\u011fin: Program Counter (PC), Status Register (SR), Genel Ama\u00e7l\u0131 Register\u2019lar (R0\u2013R31).</li> </ul> </li> </ul>"},{"location":"embedded/embedded_programming/#mpu-microprocessor-unit","title":"MPU (Microprocessor Unit)","text":"<ul> <li>Sadece i\u015flemci \u00e7ekirde\u011fi i\u00e7erir.</li> <li>Harici RAM, ROM ve \u00e7evresel birim ba\u011flant\u0131s\u0131na (GPIO, UART, SPI vb.) ihtiya\u00e7 duyar.</li> <li>PC\u2019lere veya g\u00f6m\u00fcl\u00fc uygulamalarda \u201ci\u015flemci kart\u0131\u201d olarak kullan\u0131l\u0131r.</li> </ul>"},{"location":"embedded/embedded_programming/#mcu-microcontroller-unit","title":"MCU (Microcontroller Unit)","text":"<ul> <li>Tek bir entegre \u00e7ipte i\u015flemci \u00e7ekirde\u011fi + bellek + \u00e7evre birimleri (GPIO, timer, ADC, UART, I\u00b2C, SPI vb.) bar\u0131nd\u0131ran tam donan\u0131ml\u0131 g\u00f6m\u00fcl\u00fc sistem bile\u015fenidir.</li> <li>Dahili Bellek:<ul> <li>Flash/ROM: Program kodu depolama</li> <li>SRAM: Veri ve stack alan\u0131</li> </ul> </li> <li>\u00c7evresel Birimler: <ul> <li>Dijital G/\u00c7 (GPIO)</li> <li>Analog\u2011dijital d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc (ADC)</li> <li>Timers/Counter\u2019lar</li> <li>UART, SPI, I\u00b2C, CAN, USB vb. haberle\u015fme mod\u00fclleri</li> </ul> </li> <li>Avantajlar\u0131<ul> <li>K\u00fc\u00e7\u00fck ayak izi, d\u00fc\u015f\u00fck maliyet</li> <li>D\u00fc\u015f\u00fck g\u00fc\u00e7 t\u00fcketimi (batarya odakl\u0131 uygulamalar i\u00e7in ideal)</li> <li>Tek kartta t\u00fcm bile\u015fenler</li> </ul> </li> </ul> \u00d6zellik MPU MCU \u0130\u015flemci Var (yaln\u0131zca \u00e7ekirdek) Var (\u00e7ekirdek + \u00e7evresel birimler) Bellek Harici RAM/ROM Dahili Flash + SRAM \u00c7evresel Birimler Harici eklentilerle sa\u011flan\u0131r Dahili UART, GPIO, ADC, timer vb. mod\u00fcller Kullan\u0131m Alan\u0131 PC, sunucu, y\u00fcksek performans G\u00f6m\u00fcl\u00fc sistem, IoT, otomotiv, end\u00fcstri"},{"location":"embedded/embedded_programming/#itm-instrumentation-trace-macrocell","title":"ITM (Instrumentation Trace Macrocell)","text":"<ul> <li>ITM, ARM Cortex\u2011M tabanl\u0131 mikrodenetleyicilerde yerle\u015fik olarak bulunan, ger\u00e7ek zamanl\u0131 izleme ve hata ay\u0131klama altyap\u0131s\u0131d\u0131r:</li> <li>Ger\u00e7ek Zamanl\u0131 \u0130zleme: Kodunuzun ak\u0131\u015f\u0131n\u0131, fonksiyon \u00e7a\u011fr\u0131lar\u0131n\u0131 veya de\u011fi\u015fken de\u011ferlerini canl\u0131 olarak \u201ctrace\u201d edebilirsiniz.</li> <li>D\u00fc\u015f\u00fck Gecikme: <code>SWO</code> (Serial Wire Output) pininden ta\u015fan veriyi, sistem performans\u0131n\u0131 etkilemeden aktar\u0131r.</li> <li>Performans Analizi: Zaman damgal\u0131 etiketler (timestamps) sayesinde hangi kod blo\u011funun ne kadar s\u00fcrd\u00fc\u011f\u00fcn\u00fc \u00f6l\u00e7ebilir, darbo\u011fazlar\u0131 h\u0131zla tespit edebilirsiniz.</li> <li>\u00d6zelle\u015ftirilebilir Paketler: Hem ARM taraf\u0131ndan tan\u0131ml\u0131 standart trace paketlerini hem de kendi veri formatlar\u0131n\u0131z\u0131 kullanabilirsiniz.</li> <li>Kullan\u0131m Senaryolar\u0131<ul> <li>Zamanlama hatalar\u0131n\u0131 ke\u015ffetme</li> <li>D\u00f6ng\u00fc say\u0131mlar\u0131n\u0131 ve i\u015f par\u00e7ac\u0131klar\u0131 aras\u0131ndaki ge\u00e7i\u015fleri izleme</li> <li>Kal\u0131c\u0131 log al\u0131namayan ger\u00e7ek zamanl\u0131 sistemlerde debug</li> </ul> </li> </ul>"},{"location":"embedded/embedded_programming/#cross-compiler-capraz-derleyici","title":"Cross Compiler (\u00c7apraz Derleyici)","text":"<ul> <li>Bir x86 veya macOS/Windows gibi \u201cgeli\u015ftirme host\u201d makinenizde \u00e7al\u0131\u015f\u0131p, farkl\u0131 bir \u201chedef\u201d platform (\u00f6r. ARM Cortex\u2011M) i\u00e7in derlenmi\u015f kod \u00fcreten derleyicidir. En yayg\u0131n \u00f6rnek:</li> </ul> <pre><code>arm-none-eabi-gcc\n\u2502   \u2502    \u2502      \u2514\u2500 gcc (GNU Compiler Collection)\n\u2502   \u2502    \u2514\u2500 eabi (Embedded Application Binary Interface)\n\u2502   \u2514\u2500 none (OS yok: bare\u2011metal)\n\u2514\u2500 arm (ARM mimarisi)\n</code></pre> <ul> <li>\u00c7\u0131kt\u0131 Dosya Bi\u00e7imleri<ul> <li>ELF (.elf): \u00c7al\u0131\u015ft\u0131r\u0131labilir, simge tablosu ve debug bilgisi i\u00e7erir. (Linux/Unix standard\u0131)</li> <li>HEX (.hex): Intel HEX format\u0131; her sat\u0131rda adres + byte dizisi ASCII olarak saklan\u0131r. Mikrodenetleyici bootloader\u2019lar\u0131na uygundur.</li> <li>BIN (.bin): Saf makine kodu; hi\u00e7bir meta\u2011veri i\u00e7ermez, do\u011frudan belle\u011fe veya flash\u2019a yaz\u0131l\u0131r.</li> </ul> </li> <li>Tipik Derleme Ak\u0131\u015f\u0131<ul> <li><code>arm-none-eabi-gcc -c main.c -o main.o</code> \u2192 Derleme</li> <li><code>arm-none-eabi-ld main.o -T linker_script.ld -o firmware.elf</code> \u2192 Ba\u011flama</li> <li><code>arm-none-eabi-objcopy -O ihex firmware.elf firmware.hex</code> \u2192 HEX\u2019e d\u00f6n\u00fc\u015ft\u00fcrme</li> <li><code>arm-none-eabi-objcopy -O binary firmware.elf firmware.bin</code> \u2192 BIN\u2019e d\u00f6n\u00fc\u015ft\u00fcrme</li> </ul> </li> </ul> <pre><code>graph LR\n  A[main.c] --&gt; |Preprocessor| B{main.i};\n  B --&gt; |Parser| C[Code generator];\n  C --&gt; D[main.s];\n  D --&gt; |Assembler| E[main.o];\n  E --&gt; |Linker| F[Debug File .elf];\n  F --&gt; |Objcopy Tool| H[\"(.bin)\"]\n  G[\"Other Lib (.a)\"] --&gt; |Linker| F[\"Debug File (.elf)\"];</code></pre>"},{"location":"embedded/embedded_programming/#rcc-reset-and-clock-control","title":"RCC (Reset and Clock Control)","text":"<p>RCC, mikrodenetleyicideki t\u00fcm mod\u00fcllere saat (clock) sinyallerini sa\u011flayan ve donan\u0131m-software s\u0131f\u0131rlama (reset) i\u015flemlerini y\u00f6neten merkezi bir birimdir.</p> <ul> <li>Saat Kaynak Se\u00e7imi: Dahili osilat\u00f6r (HSI), harici kristal (HSE) veya PLL (Phase\u2011Locked Loop) kullan\u0131m\u0131</li> <li>Frekans Yap\u0131land\u0131rma: <ul> <li><code>AHB, APB1/APB2</code> gibi bus\u2019lar i\u00e7in b\u00f6lme (prescaler) de\u011ferlerini ayarlar</li> <li>PLL parametreleriyle sistem saat h\u0131z\u0131n\u0131 (SYSCLK) optimize eder</li> </ul> </li> <li>G\u00fc\u00e7 T\u00fcketimi: D\u00fc\u015f\u00fck g\u00fc\u00e7l\u00fc modlar i\u00e7in clock gating (kullan\u0131lmayan mod\u00fclleri durdurma)</li> <li>Reset Y\u00f6netimi: <ul> <li>Sistem reset\u2019i, g\u00fc\u00e7 reset\u2019i, ba\u011f\u0131ms\u0131z watchdog reset\u2019i gibi kaynaklar\u0131 kontrol eder</li> <li>Her mod\u00fcl\u00fcn reset bit\u2019ini (\u00f6rne\u011fin <code>RCC_APB1RSTR</code>) yazarak o \u00e7evresel birimi yeniden ba\u015flat\u0131r</li> </ul> </li> </ul> <pre><code>// \u00d6rnek: HSI aktif et, SYSCLK olarak se\u00e7\nRCC-&gt;CR |= RCC_CR_HSION;                  // HSI osilat\u00f6r\u00fc a\u00e7\nwhile (!(RCC-&gt;CR &amp; RCC_CR_HSIRDY));       // OS haz\u0131r olana dek bekle\nRCC-&gt;CFGR = (RCC-&gt;CFGR &amp; ~RCC_CFGR_SW)     // SW alan\u0131n\u0131 s\u0131f\u0131rla\n           | RCC_CFGR_SW_HSI;              // SYSCLK = HSI\n</code></pre>"},{"location":"embedded/embedded_programming/#isr-interrupt-service-routine","title":"ISR (Interrupt Service Routine)","text":"<p>Bir kesme (interrupt) olu\u015ftu\u011funda otomatik olarak \u00e7a\u011fr\u0131lan kesme i\u015fleyici fonksiyonudur. Ana program ak\u0131\u015f\u0131 duraklar, ISR \u00e7al\u0131\u015f\u0131r, sonra ana programa d\u00f6ner.</p> <ul> <li> <p>Giri\u015f ve \u00c7\u0131k\u0131\u015f:</p> <ul> <li>CPU LR (link register) i\u00e7erisine d\u00f6n\u00fc\u015f adresini kaydeder</li> <li>Kesme kayna\u011f\u0131 bayra\u011f\u0131n\u0131 temizleyip (\u00f6r. <code>EXTI-&gt;PR |= \u2026</code>) ilgili i\u015flemi yapar</li> </ul> </li> <li> <p>Kay\u0131t Da\u011f\u0131l\u0131m\u0131:</p> <ul> <li>R0\u2013R12 \u2192 Genel ama\u00e7l\u0131 register\u2019lar</li> <li>SP (Stack Pointer) \u2192 Ge\u00e7ici veri ve ISR d\u00f6n\u00fc\u015f adresi</li> <li>LR (Link Register) \u2192 ISR \u00f6ncesi d\u00f6n\u00fc\u015f adresi</li> <li>PC (Program Counter) \u2192 Bir sonraki y\u00fcr\u00fct\u00fclecek komut</li> </ul> </li> </ul> <pre><code>void EXTI0_IRQHandler(void) {\n    if (EXTI-&gt;PR &amp; EXTI_PR_PR0) {\n        EXTI-&gt;PR |= EXTI_PR_PR0;  // Kesme bitini temizle\n        // \u2026 kesme i\u015flemlerini ger\u00e7ekle\u015ftir \u2026\n    }\n}\n</code></pre>"},{"location":"embedded/embedded_programming/#svc-supervisor-call","title":"SVC (Supervisor Call)","text":"<p>Yaz\u0131l\u0131m kesmesi (<code>svc</code>) arac\u0131l\u0131\u011f\u0131yla kullan\u0131c\u0131 uygulamas\u0131ndan \u00e7ekirdek veya RTOS hizmetlerine (\u00f6r. bellek ay\u0131rma, g\u00f6rev olu\u015fturma) eri\u015fim sa\u011flar.</p> <pre><code>SVC #5    ; SVC numaras\u0131 5 ile \u00e7ekirdek \u00e7a\u011fr\u0131s\u0131\n</code></pre> <pre><code>__ASM(\"svc 5\");\n</code></pre>"},{"location":"embedded/embedded_programming/#swd-serial-wire-debug","title":"SWD (Serial Wire Debug)","text":"<p>ARM Cortex\u2011M serisinde kullan\u0131lan 2 telli (SWDIO, SWCLK) hata ay\u0131klama protokol\u00fcd\u00fcr:</p> <ul> <li>D\u00fc\u015f\u00fck pin say\u0131s\u0131 ile JTAG\u2019a g\u00f6re avantajl\u0131</li> <li>Ger\u00e7ek zamanl\u0131 bellek okuma/yazma, register izleme</li> <li>SWO (Serial Wire Output) ile trace mesajlar\u0131n\u0131 aktar\u0131r</li> </ul>"},{"location":"embedded/embedded_programming/#jtag-joint-test-action-group","title":"JTAG (Joint Test Action Group)","text":"<p>Elektronik bile\u015fenlerin test ve hata ay\u0131klama standard\u0131d\u0131r:</p> <ul> <li>4 - 5 telli protokol (TCK, TMS, TDI, TDO, TRST)</li> <li>Boundary\u2011scan test, IC programlama, \u00e7ekirdek debug</li> <li>SWD\u2019\u0131n alt k\u00fcmesi olarak baz\u0131 ARM \u00e7ekirdeklerinde desteklenir</li> </ul> JTAG SWD Pin Say\u0131s\u0131 5-6 pin 2 pin Temel Pinler TDI, TDO, TMS, TCK, TRST (opsiyonel) SWDIO, SWCLK Zincirleme Deste\u011fi Var, birden fazla cihaz\u0131 zincirleme olarak ba\u011flayabilir Yok, her cihaz i\u00e7in ayr\u0131 ba\u011flant\u0131 gereklidir H\u0131z ve Performans Daha fazla veri iletimi, daha y\u00fcksek h\u0131z, ancak karma\u015f\u0131k sistemlerde yava\u015f olabilir Daha h\u0131zl\u0131 veri iletimi, d\u00fc\u015f\u00fck pin say\u0131s\u0131 ile daha h\u0131zl\u0131 sonu\u00e7 alabilirsiniz Karma\u015f\u0131kl\u0131k Daha karma\u015f\u0131k, \u00e7ok say\u0131da pin ve yap\u0131land\u0131rma gerektirir Daha basit, d\u00fc\u015f\u00fck pin say\u0131s\u0131 ve yap\u0131land\u0131rma gerektirir Kullan\u0131m Alanlar\u0131 Daha b\u00fcy\u00fck ve karma\u015f\u0131k sistemler, FPGA'lar, bellekler, CPU'lar ARM Cortex-M mikrodenetleyiciler, d\u00fc\u015f\u00fck pinli yap\u0131lar Debugging Yetene\u011fi Kapsaml\u0131 debugging, register i\u015flemleri ve sistem izleme Temel debugging, register okuma/yazma, programlama Zamanlay\u0131c\u0131 Deste\u011fi Y\u00fcksek h\u0131zda test ve ileti\u015fim gerektiren sistemler i\u00e7in uygundur D\u00fc\u015f\u00fck pin say\u0131s\u0131 ile h\u0131zl\u0131 hata ay\u0131klama sa\u011flar Enerji T\u00fcketimi Daha fazla enerji t\u00fcketebilir, daha fazla pin kullan\u0131ld\u0131\u011f\u0131 i\u00e7in Daha az enerji t\u00fcketir, \u00e7\u00fcnk\u00fc sadece 2 pin kullan\u0131l\u0131r Karma\u015f\u0131k Sistemler \u0130\u00e7in Uygunluk Y\u00fcksek h\u0131zda ve karma\u015f\u0131k sistemlerde kullan\u0131l\u0131r Daha basit ve d\u00fc\u015f\u00fck pin say\u0131s\u0131na sahip sistemler i\u00e7in uygundur"},{"location":"embedded/embedded_programming/#ahb-advanced-highperformance-bus","title":"AHB (Advanced High\u2011performance Bus)","text":"<p>AHB, ARM AMBA (Advanced Microcontroller Bus Architecture) ailesinin y\u00fcksek h\u0131zl\u0131 veri yolu katman\u0131d\u0131r. \u00d6zellikleri:</p> <ul> <li>Y\u00fcksek Bant Geni\u015fli\u011fi: Burst transfer deste\u011fi sayesinde ard\u0131\u015f\u0131k veri bloklar\u0131n\u0131 kesintisiz ta\u015f\u0131r.</li> <li>D\u00fc\u015f\u00fck Gecikme: Pipeline mimarisiyle her d\u00f6ng\u00fcde bir transfer ba\u015flat\u0131labilir.</li> <li>Multi\u2011Master Deste\u011fi: Birden fazla bus master (\u00f6r. DMA, CPU) aras\u0131nda arbitraj yaparak kontrol\u00fc payla\u015f\u0131r.</li> <li>Genel Kullan\u0131m: <ul> <li>Ana i\u015flemci (CPU) ve DMA birimi do\u011frudan AHB\u2019ye ba\u011fl\u0131d\u0131r.</li> <li>Sistem bellekleri (SRAM/Flash) ve sabit bellek aray\u00fczleri genellikle AHB \u00fczerinden eri\u015filir.</li> </ul> </li> </ul> <pre><code>// \u00d6rnek (STM32): AHB1 \u00fczerindeki GPIOA saatini etkinle\u015ftirme\nRCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOAEN;\n</code></pre>"},{"location":"embedded/embedded_programming/#apb-advanced-peripheral-bus","title":"APB (Advanced Peripheral Bus)","text":"<p>APB, AMBA ailesinin d\u00fc\u015f\u00fck h\u0131zl\u0131 \u00e7evre birimleri i\u00e7in tasarlanm\u0131\u015f basitle\u015ftirilmi\u015f veri yoludur:</p> <ul> <li>D\u00fc\u015f\u00fck Karma\u015f\u0131kl\u0131k: Tek d\u00f6ng\u00fcl\u00fc, pipelineless tasar\u0131m; arac\u0131lar (bridges) \u00fczerinden AHB\u2019ye ba\u011flan\u0131r.</li> <li>D\u00fc\u015f\u00fck G\u00fc\u00e7 T\u00fcketimi: \u00c7evresel birimleri gerektik\u00e7e uyand\u0131racak \u015fekilde \u00e7al\u0131\u015f\u0131r.</li> <li>Tipik Kullan\u0131m: UART, SPI, I\u00b2C, Timer\u2019lar gibi d\u00fc\u015f\u00fck h\u0131zl\u0131 alg\u0131lay\u0131c\u0131 ve kontrol mod\u00fclleri APB \u00fczerinde yer al\u0131r.</li> </ul> <pre><code>// \u00d6rnek (STM32): APB1 \u00fczerindeki TIM2 saatini etkinle\u015ftirme\nRCC-&gt;APB1ENR |= RCC_APB1ENR_TIM2EN;\n</code></pre> \u00d6zelikler AHP APB H\u0131z Y\u00fcksek h\u0131zda veri iletimi D\u00fc\u015f\u00fck h\u0131zda veri iletimi Veri Transferi Burst transfer, pipelining, y\u00fcksek h\u0131z Tek veri transferi, basit ileti\u015fim Yap\u0131 Karma\u015f\u0131k, daha fazla donan\u0131m gereksinimi Basit, d\u00fc\u015f\u00fck maliyetli Gecikme D\u00fc\u015f\u00fck gecikme Y\u00fcksek gecikme Uygulama Alanlar\u0131 CPU, DMA, bellek aray\u00fczleri, b\u00fcy\u00fck veri transferi \u00c7evre birimleri (UART, I2C, GPIO, Timer vb.) ile ileti\u015fim Ba\u011flant\u0131 Tipi Master/slave yap\u0131s\u0131, daha karma\u015f\u0131k ba\u011flant\u0131lar Basit veri iletimi ve ba\u011flant\u0131lar G\u00fc\u00e7 T\u00fcketimi Y\u00fcksek g\u00fc\u00e7 t\u00fcketimi D\u00fc\u015f\u00fck g\u00fc\u00e7 t\u00fcketimi"},{"location":"embedded/embedded_programming/#burst-transfer","title":"Burst Transfer","text":"<p>Burst Transfer, y\u00fcksek h\u0131zl\u0131 veri yollar\u0131nda ard\u0131\u015f\u0131k ve blok halinde veri iletimi sa\u011flayan y\u00f6ntemdir:</p> <ul> <li>Blok \u0130letimi: Bir\u00e7ok k\u00fc\u00e7\u00fck hatta tek tek veri yerine, b\u00fcy\u00fck bir veri blo\u011fu pe\u015f pe\u015fe aktar\u0131l\u0131r.</li> <li>Verimlilik: Her k\u00fc\u00e7\u00fck veri paketi i\u00e7in ayr\u0131 ba\u015flatma/durdurma/idare i\u015flemi yap\u0131lmaz; ba\u015flatma/durdurma maliyeti tek seferde \u00f6denir.</li> <li>D\u00fc\u015f\u00fck Gecikme: Pipeline deste\u011fiyle, her clock d\u00f6ng\u00fcs\u00fcnde yeni bir veri kelimesi transfer edilebilir.</li> <li>Y\u00fcksek Bant Geni\u015fli\u011fi: Burst modunda, topyek\u00fbn aktar\u0131m h\u0131z\u0131nda ciddi art\u0131\u015f sa\u011flar.</li> </ul>"},{"location":"embedded/embedded_programming/#access-level-erisim-seviyesi","title":"Access Level (Eri\u015fim Seviyesi)","text":"<p>G\u00f6m\u00fcl\u00fc sistemlerde eri\u015fim seviyeleri, kodun hangi modda \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ve hangi kaynaklara eri\u015febilece\u011fini belirler</p> Mod A\u00e7\u0131klama Handler Mode Kesme ve istisna i\u015fleyicilerinin (ISR) \u00e7al\u0131\u015ft\u0131\u011f\u0131, her zaman ayr\u0131cal\u0131kl\u0131 modu. Thread/User Mode Normal uygulama kodunun \u00e7al\u0131\u015ft\u0131\u011f\u0131 mod; ister ayr\u0131cal\u0131kl\u0131, ister k\u0131s\u0131tl\u0131 olabilir. PAL (Privileged Access) T\u00fcm sistem kaynaklar\u0131na tam eri\u015fime izin verir (\u00f6rn. donan\u0131m kontrol\u00fc). NPAL (Non\u2011Privileged) Korunan belle\u011fe ve kritik birimlere eri\u015fimi s\u0131n\u0131rland\u0131r\u0131r."},{"location":"embedded/embedded_programming/#heap-memory-ygn-ds-bellek","title":"Heap Memory (Y\u0131\u011f\u0131n D\u0131\u015f\u0131 Bellek)","text":"<ul> <li>Dinamik Tahsis: malloc, calloc, new gibi fonksiyonlarla \u00e7al\u0131\u015fma zaman\u0131nda ayr\u0131l\u0131r.</li> <li>Ya\u015fam S\u00fcresi: Serbest b\u0131rak\u0131lana (free, delete) dek bellekte kal\u0131r.</li> <li>Kullan\u0131m Alan\u0131: B\u00fcy\u00fckl\u00fc\u011f\u00fc \u00f6nceden bilinmeyen diziler, veri yap\u0131lar\u0131 (linked list, tree vb.).</li> </ul>"},{"location":"embedded/embedded_programming/#stack-memory-ygn-bellegi","title":"Stack Memory (Y\u0131\u011f\u0131n Belle\u011fi)","text":"<ul> <li>Otomatik Y\u00f6netim: Fonksiyon \u00e7a\u011fr\u0131s\u0131 s\u0131ras\u0131nda push, d\u00f6n\u00fc\u015fte pop edilir.</li> <li>Yerel De\u011fi\u015fkenler: Her \u00e7a\u011fr\u0131da yeni bir \u00e7er\u00e7eve (stack frame) olu\u015fturulur.</li> <li>S\u0131n\u0131r: Sabit boyutludur; ta\u015fma (stack overflow) riski vard\u0131r.</li> </ul>"},{"location":"embedded/embedded_programming/#aapcs-arm-architecture-procedure-call-standard","title":"AAPCS (ARM Architecture Procedure Call Standard)","text":"<ul> <li>ARM mimarisinde fonksiyon \u00e7a\u011fr\u0131 s\u00f6zle\u015fmesini tan\u0131mlar. Ama\u00e7lar:<ul> <li>Parametre \u0130letimi: \u0130lk d\u00f6rt parametre <code>r0\u2013r3</code> register\u2019lar\u0131nda, fazlas\u0131 y\u0131\u011f\u0131nda (stack) ta\u015f\u0131n\u0131r.</li> <li>Geri D\u00f6n\u00fc\u015f Adresi: <code>lr</code> (link register) i\u00e7inde saklan\u0131r.</li> <li>Y\u0131\u011f\u0131n D\u00fczeni: Yeni \u00e7er\u00e7evede \u00f6nce geri d\u00f6n\u00fc\u015f adresi, sonra yerel register kurtarma alan\u0131, en altta yerel de\u011fi\u015fkenler yer al\u0131r.</li> <li>Kay\u0131t Koru: Callee\u2011saved (<code>r4\u2013r11</code>) ve Caller\u2011saved (<code>r0\u2013r3, r12, lr</code>) register\u2019lar ayr\u0131\u015ft\u0131r\u0131l\u0131r.</li> </ul> </li> <li>Bu standart, farkl\u0131 derleyiciler ve k\u00fct\u00fcphaneler aras\u0131nda uyum ve ta\u015f\u0131nabilirlik sa\u011flar.</li> </ul>"},{"location":"embedded/embedded_programming/#nvic-nested-vectored-interrupt-controller","title":"NVIC (Nested Vectored Interrupt Controller)","text":"<p>ARM Cortex\u2011M mikrodenetleyicilerinde kesme y\u00f6netimini \u00fcstlenen donan\u0131m mod\u00fcl\u00fcd\u00fcr:</p> <ul> <li>Vectored Interrupts: Her kesme kayna\u011f\u0131 i\u00e7in \u00f6nceden tan\u0131ml\u0131 vekt\u00f6r tablosu (ISR adresleri).</li> <li>\u00d6ncelik Seviyeleri: 0 (en y\u00fcksek) \u2192 255 (en d\u00fc\u015f\u00fck) aras\u0131 \u00f6ncelik atayarak, kritik kesmelere \u00f6ncelik verebilirsiniz.</li> <li>Nesting (\u0130\u00e7 \u0130\u00e7e Kesme): Daha y\u00fcksek \u00f6ncelikli kesme, daha d\u00fc\u015f\u00fck \u00f6ncelikli bir ISR \u00e7al\u0131\u015f\u0131rken bile tetiklenip i\u015flenebilir.</li> <li>Enable/Disable: \u0130stedi\u011finiz kesmeyi <code>NVIC_EnableIRQ(IRQn)</code> ve <code>NVIC_DisableIRQ(IRQn)</code> ile kontrol edebilirsiniz.</li> </ul> <pre><code>// EXTI0 kesmesini \u00f6ncelik 2 olarak ayarlay\u0131p etkinle\u015ftirme (STM32 HAL)\nHAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);\nHAL_NVIC_EnableIRQ(EXTI0_IRQn);\n</code></pre>"},{"location":"embedded/embedded_programming/#msp-ve-psp-stack-pointerlar","title":"MSP ve PSP (Stack Pointer\u2019lar)","text":"<p>ARM Cortex\u2011M i\u015flemcide iki ayr\u0131 stack kullan\u0131l\u0131r:</p> <p>| \u0130\u015faret\u00e7i  | Kullan\u0131m Alan\u0131    | Mod | | MSP   | Kesme servis rutinleri ve sistem ba\u015flatma |   Privileged (kernel) | | PSP   | Uygulama kodu ve thread i\u015flemleri | Thread (user) |</p> <ul> <li>MSP (Main Stack Pointer): Sistem ba\u015flang\u0131c\u0131nda y\u0131\u011f\u0131n\u0131 MSP y\u00f6netir.</li> <li>PSP (Process Stack Pointer): OS/RTOS kullan\u0131ld\u0131\u011f\u0131nda, her thread kendi PSP y\u0131\u011f\u0131n\u0131na sahip olabilir.</li> </ul> <pre><code>// PSP kullan\u0131m\u0131 \u00f6rne\u011fi (CMSIS)\n__set_PSP(0x20002000);       // PSP ba\u015flang\u0131\u00e7 adresini ayarla\n__set_CONTROL(__get_CONTROL() | 2); // CONTROL register\u2019da SPSEL bit\u2019i = 1 (PSP se\u00e7)\n</code></pre>"},{"location":"embedded/embedded_programming/#tbit-thumb-bit","title":"T\u2011Bit (Thumb Bit)","text":"<ul> <li>ARM i\u015flemciler, iki komut seti aras\u0131nda ge\u00e7i\u015f yapabilir:</li> <li>ARM Modu: 32\u2011bit uzunlu\u011funda komutlar; <code>T\u2011bit = 0</code>.</li> <li>Thumb Modu: 16\u2011bit uzunlu\u011funda s\u0131k\u0131\u015ft\u0131r\u0131lm\u0131\u015f komutlar; <code>T\u2011bit = 1</code>.<ul> <li>Daha k\u00fc\u00e7\u00fck kod boyutu, d\u00fc\u015f\u00fck bellek t\u00fcketimi.</li> <li>Genellikle Cortex\u2011M \u00e7ekirdekleri sadece Thumb modu destekler.</li> </ul> </li> </ul>"},{"location":"embedded/embedded_programming/#bitbanding","title":"Bit\u2011Banding","text":"<ul> <li>Bit\u2011Banding, belirli bellek b\u00f6lgesindeki her biti ayr\u0131 bir adrese e\u015fler. B\u00f6ylece tek ad\u0131mla tek bir biti set/clear edebilirsiniz:</li> <li>Memory Region: 0x20000000\u20130x200FFFFF</li> <li>Alias Region: 0x22000000\u20130x23FFFFFF</li> <li>Hesaplama Form\u00fcl\u00fc: <code>alias_addr = alias_base + (byte_offset \u00d7 32) + (bit_number \u00d7 4)</code></li> </ul> <pre><code>// \u00d6rne\u011fin 0x20000000 adresindeki 3. bit i\u00e7in alias:\nalias = 0x22000000 + (0 \u00d7 32) + (3 \u00d7 4) = 0x2200000C\n\n// Bit\u2011banding ile GPIOA pin0\u2019u HIGH yapma (STM32)\n#define BITBAND_SRAM(addr, bit) \\\n  (*(volatile uint32_t*)(0x22000000 + (((addr) - 0x20000000) &lt;&lt; 5) + ((bit) &lt;&lt; 2)))\n\n#define GPIOA_ODR_ADDR  (0x40020000 + 0x14)  // GPIOA ODR offset\nBITBAND_SRAM(GPIOA_ODR_ADDR, 0) = 1;       // PA0 HIGH\n</code></pre> Register A\u00e7\u0131klama ODR Output Data Register (\u00e7\u0131k\u0131\u015f verisi) IDR Input Data Register (giri\u015f verisi) BSRR Bit Set/Reset Register (set ve reset i\u00e7in) BRR Bit Reset Register (sadece reset i\u00e7in)"},{"location":"embedded/embedded_programming/#hsi-highspeed-internal-oscillator","title":"HSI (High\u2011Speed Internal Oscillator)","text":"<ul> <li>Dahili osilat\u00f6r: MCU i\u00e7inde entegre edilmi\u015ftir.</li> <li>Frekans: STM32 modellerine g\u00f6re genellikle 8\u202fMHz veya 16\u202fMHz.</li> <li>Avantaj: Harici kristal gerekmez, h\u0131zl\u0131 ba\u015flar ve d\u00fc\u015f\u00fck g\u00fc\u00e7 t\u00fcketir.</li> <li>Dezavantaj: Do\u011frulu\u011fu <code>\u00b11\u202f%</code> civar\u0131nda; hassas zamanlama gerektiren protokoller i\u00e7in ideal de\u011fil.</li> </ul>"},{"location":"embedded/embedded_programming/#hse-highspeed-external-oscillator","title":"HSE (High\u2011Speed External Oscillator)","text":"<ul> <li>Harici kristal veya d\u0131\u015f saat sinyali kullan\u0131r.</li> <li>Desteklenen frekans: 4\u202fMHz \u2013 25\u202fMHz</li> <li>Avantaj: \u00c7ok daha kararl\u0131 ve do\u011fru saat kayna\u011f\u0131.</li> <li>Kullan\u0131m: USB, CAN, SDIO, y\u00fcksek h\u0131zl\u0131 UART gibi hassas zamanlama gerektiren ileti\u015fimler.</li> </ul>"},{"location":"embedded/embedded_programming/#programlama-notlar","title":"Programlama Notlar\u0131","text":"<ul> <li>Reference Manual: MCU\u2019nun t\u00fcm mod\u00fclleri, register haritalar\u0131 ve i\u015fleyi\u015fi hakk\u0131nda ayr\u0131nt\u0131l\u0131 dok\u00fcman.</li> <li> <p>Datasheet:</p> <ul> <li>Alternate Function Mapping: Pinlerin hangi alternatif i\u015flevleri destekledi\u011fini g\u00f6sterir.</li> <li>Block Diagram: MCU i\u00e7indeki birimlerin birbirine fiziksel ba\u011flant\u0131lar\u0131n\u0131 g\u00f6rsel olarak sunar.</li> </ul> </li> <li> <p>Kod Optimizasyonu (STM32CubeIDE):</p> <ul> <li><code>Project &gt; C/C++ Build &gt; Optimization Level</code> ile derleyici optimizasyon seviyesini belirler.</li> <li>Y\u00fcksek optimizasyon kod boyutunu azalt\u0131r, ancak bazen kritik kod par\u00e7alar\u0131n\u0131 kald\u0131rabilir.</li> </ul> </li> <li> <p>Otomatik Tamamlama: STM32CubeIDE i\u00e7inde <code>Ctrl+Space</code></p> </li> </ul>"},{"location":"embedded/embedded_programming/#volatile-anahtar-kelimesi","title":"volatile Anahtar Kelimesi","text":"<ul> <li>Derleyicinin optimizasyonu devre d\u0131\u015f\u0131 b\u0131rak\u0131r:</li> <li>Belle\u011fe veya donan\u0131m register\u2019lar\u0131na yaz\u0131lan de\u011fi\u015fkenlerin her eri\u015fimde ger\u00e7ekten okunmas\u0131n\u0131 sa\u011flar.</li> <li>Kesme (ISR) veya donan\u0131m etkile\u015fimleri sonucu de\u011fi\u015febilecek veriler i\u00e7in zorunludur.</li> </ul> <pre><code>volatile uint32_t timer_ticks;\n</code></pre>"},{"location":"embedded/embedded_programming/#struct-hizalamas-ve-padding","title":"Struct\u202fHizalamas\u0131 ve Padding","text":"<ul> <li>C\u2019de struct\u2019lar, i\u00e7indeki en b\u00fcy\u00fck veri tipinin hizalanma gereksinimine g\u00f6re \u201cpadding\u201d ekler.</li> <li>Bellek d\u00fczenini s\u0131k\u0131 kontrol i\u00e7in:</li> </ul> <pre><code>#pragma pack(push, 1)\ntypedef struct {\n    char a;   // 1 byte\n    int  b;   // 4 byte\n} PackedStruct;\n#pragma pack(pop)\n\n\ntypedef struct __attribute__((packed)) {\n    char a;\n    int  b;\n} PackedStruct;\n</code></pre>"},{"location":"embedded/embedded_programming/#arm-gcc-inline-assembly","title":"ARM\u202fGCC Inline Assembly","text":"<p>C/C++ kodu i\u00e7inde do\u011frudan ARM assembly komutlar\u0131 yazman\u0131z\u0131 sa\u011flar. \u00d6zel donan\u0131m komutlar\u0131 veya performans kritik i\u015flemlerde kullan\u0131\u015fl\u0131d\u0131r.</p> <pre><code>int add_numbers(int a, int b) {\n    int result;\n    __asm__ (\n        \"ADD %0, %1, %2\\n\\t\"   // ARM ADD komutu\n        : \"=r\" (result)        // \u00e7\u0131kt\u0131 operand\u0131\n        : \"r\" (a), \"r\" (b)     // giri\u015f operandlar\u0131\n        :                      // tahrip edilen register\u2019lar\n    );\n    return result;\n}\n</code></pre> <p>Not</p> <p>Daha fazla bilgi i\u00e7in \u201cCortex\u2011M4 Devices Generic User Guide\u201d i\u00e7indeki \u201cThe Cortex\u2011M4 Instruction Set\u201d b\u00f6l\u00fcm\u00fcne bak\u0131n.</p>"},{"location":"embedded/embedded_programming/#gpio-baslatma-ve-kullanm","title":"GPIO Ba\u015flatma ve Kullan\u0131m\u0131","text":"<ul> <li>Clock Aktifle\u015ftirme \u0130lgili GPIO portunun saatini a\u00e7\u0131n: <code>RCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOAEN;</code></li> <li>Pin Modu ve \u00d6zellikleri GPIOx-&gt;MODER, OTYPER, OSPEEDR, PUPDR register\u2019lar\u0131n\u0131 kullanarak:</li> </ul> <pre><code>// PA5\u2019i push\u2011pull \u00e7\u0131k\u0131\u015f, y\u00fcksek h\u0131z, no pull\u2011up/down olarak ayarlama\nGPIOA-&gt;MODER   &amp;= ~(3 &lt;&lt; (5*2));\nGPIOA-&gt;MODER   |=  (1 &lt;&lt; (5*2));       // 01 = output\nGPIOA-&gt;OTYPER  &amp;= ~(1 &lt;&lt; 5);           // 0 = push\u2011pull\nGPIOA-&gt;OSPEEDR |=  (3 &lt;&lt; (5*2));       // 11 = high speed\nGPIOA-&gt;PUPDR   &amp;= ~(3 &lt;&lt; (5*2));       // 00 = no pull\u2011up/down\n</code></pre> <ul> <li>\u00c7\u0131k\u0131\u015f ve Giri\u015f \u0130\u015flemleri</li> </ul> output<pre><code>GPIOA-&gt;ODR |=  (1 &lt;&lt; 5);  // PA5 = HIGH\nGPIOA-&gt;ODR &amp;= ~(1 &lt;&lt; 5);  // PA5 = LOW\n</code></pre> Input<pre><code>uint8_t state = (GPIOA-&gt;IDR &amp; (1 &lt;&lt; 5)) ? 1 : 0;\n</code></pre>"},{"location":"embedded/embedded_programming/#bilgisayarda-printf-ile-debug-itm-kullanarak","title":"Bilgisayarda printf ile Debug (ITM Kullanarak)","text":"<ul> <li><code>syscalls.c</code> i\u00e7inde <code>_write</code> fonksiyonunu ITM\u2019e y\u00f6nlendirin</li> </ul> <pre><code>#define DEMCR           (*((volatile uint32_t*)0xE000EDFC))\n#define ITM_STIMULUS0   (*((volatile uint32_t*)0xE0000000))\n#define ITM_TCR         (*((volatile uint32_t*)0xE0000E00))\n\nvoid ITM_SendChar(uint8_t ch) {\n    DEMCR |= (1 &lt;&lt; 24);        // TRCENA bit\u2019i\n    ITM_TCR |= 1;              // Port 0 aktif\n    while ((ITM_STIMULUS0 &amp; 1) == 0);\n    ITM_STIMULUS0 = ch;\n}\n\nint _write(int file, char *ptr, int len) {\n    for (int i = 0; i &lt; len; i++) {\n        ITM_SendChar((uint8_t)ptr[i]);\n    }\n    return len;\n}\n</code></pre>"},{"location":"embedded/embedded_programming/#debug-konfigurasyonu","title":"Debug Konfig\u00fcrasyonu","text":"<ul> <li>Debug Configurations \u2192 ST\u2011Link GDB Server</li> <li>Interface: SWD</li> <li>SN: (Cihaz Seri Numaras\u0131)</li> <li>Serial Wire Viewer (SWV): Enable</li> </ul>"},{"location":"embedded/embedded_programming/#swv-itm-konsolunu-acn","title":"SWV ITM Konsolunu A\u00e7\u0131n","text":"<ul> <li>Window \u2192 Show View \u2192 SWV \u2192 SWV ITM Data Console</li> <li>Configure Trace: Port 0 se\u00e7in \u2192 Start Trace</li> <li>Art\u0131k <code>printf(\"Hello %d\\n\", x);</code> \u00e7a\u011fr\u0131lar\u0131 SWV konsolda g\u00f6r\u00fcnecektir.</li> </ul>"},{"location":"embedded/embedded_programming/#stm32cubeide-ksayollar","title":"STM32CubeIDE K\u0131sayollar\u0131","text":"<ul> <li><code>Ctrl\u202f+\u202fO</code>\u202f\u202f\u202f\u202f: A\u00e7\u0131k dosyada fonksiyon ve sembolleri listeler</li> <li><code>Ctrl\u202f+\u202fSpace</code>\u202f: Kod tamamlama (auto\u2011complete)</li> </ul>"},{"location":"embedded/gstreamer/","title":"GStreamer","text":""},{"location":"embedded/gstreamer/#gstreamer-nedir","title":"GStreamer Nedir?","text":"<p>GStreamer, ses, video ve di\u011fer multimedya verilerinin i\u015flenmesi, kodlanmas\u0131, d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesi ve ak\u0131\u015f olu\u015fturulmas\u0131 i\u00e7in kullan\u0131lan a\u00e7\u0131k kaynakl\u0131 bir \u00e7er\u00e7evedir. Temel \u00e7al\u0131\u015fma modeli:</p> <pre><code>graph LR\n  A[Source] --&gt; B[Filter];\n  B --&gt; C[Sink];</code></pre> <pre><code>graph LR\n  A[Element 1] --&gt; |sink| B[Element 2];\n  B --&gt; |source| C[Element 3];</code></pre>"},{"location":"embedded/gstreamer/#mimari-ozellikler","title":"Mimari \u00d6zellikler","text":"<ul> <li>Mod\u00fcler &amp; Esnek: Her i\u015flev <code>\u201celement\u201d</code> ad\u0131 verilen bile\u015fenlerle sa\u011flan\u0131r.</li> <li>Geni\u015f Codec Deste\u011fi: \u00c7ok say\u0131da format ve codec plug\u2011in olarak sunulur.</li> <li>Ger\u00e7ek Zamanl\u0131 \u0130\u015fleme: D\u00fc\u015f\u00fck gecikmeyle canl\u0131 ak\u0131\u015flar\u0131 i\u015fleyebilir.</li> <li>D\u00fc\u015f\u00fck Seviye Kontrol: Pipeline\u2019\u0131 elle kurup detayl\u0131 y\u00f6netim imk\u00e2n\u0131.</li> <li>A\u00e7\u0131k Kaynak: \u0130stedi\u011finiz gibi geni\u015fletip \u00f6zelle\u015ftirebilirsiniz.</li> </ul>"},{"location":"embedded/gstreamer/#pipeline-element-ve-pad","title":"Pipeline, Element ve Pad","text":"<ul> <li>Pipeline: Boru hatt\u0131 (pipeline), elementlerin zincirlenmesidir. </li> </ul> <pre><code>gst-launch-1.0 videotestsrc ! videoconvert ! autovideosink\n</code></pre> <ul> <li><code>videotestsrc</code>\u2192 Test kayna\u011f\u0131</li> <li><code>videoconvert</code>\u2192 Renk format\u0131 d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc</li> <li> <p><code>autovideosink</code> \u2192 Ekrana \u00e7izici sink</p> </li> <li> <p>Element: Pipeline\u2019\u0131n yap\u0131 ta\u015f\u0131d\u0131r; her biri tek bir g\u00f6revi \u00fcstlenir (kaynak, d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc, sink\u2026).</p> </li> <li> <p>Pad: Elementler aras\u0131 veri ak\u0131\u015f noktalar\u0131d\u0131r:</p> <ul> <li>Source Pad: Elementten d\u0131\u015far\u0131 veri g\u00f6nderir.</li> <li>Sink Pad: Elemente veri al\u0131r.</li> </ul> </li> <li>Uyumlu pad t\u00fcrleri e\u015fle\u015fmeli; aksi takdirde ba\u011flant\u0131 kurulamaz.</li> </ul>"},{"location":"embedded/gstreamer/#hata-ayklama-sorgulama","title":"Hata Ay\u0131klama &amp; Sorgulama","text":"<ul> <li>GST_DEBUG: Log seviyesini ayarlar (<code>0\u20135</code>). </li> <li><code>gst-launch-1.0 --gst-debug-help</code></li> </ul> <pre><code>export GST_DEBUG=3\n</code></pre> <ul> <li><code>gst-inspect-1.0 [element]</code> Element veya plugin\u2019in \u00f6zelliklerini, pad\u2019lerini ve ayarlar\u0131n\u0131 g\u00f6sterir.</li> <li><code>gst-discoverer-1.0 [uri]</code> Medya dosyas\u0131n\u0131n codec, \u00e7\u00f6z\u00fcn\u00fcrl\u00fck, bit h\u0131z\u0131 vb. teknik detaylar\u0131n\u0131 \u00e7\u0131kar\u0131r.</li> </ul> Yararl\u0131 CLI Komutlar\u0131<pre><code># Basit test pipeline\u2019\u0131\ngst-launch-1.0 videotestsrc ! ximagesink\n\n# GStreamer versiyon ve kurulu plugin\u2019ler\ngst-launch-1.0 --version\ngst-inspect-1.0 --plugins\n\n# Kamera servisini yeniden ba\u015flat (Jetson \u00f6rne\u011fi)\nsudo service nvargus-daemon restart\n\n# Video4Linux cihazlar\u0131\nv4l2-ctl --list-devices\nv4l2-ctl -d /dev/video0 --all\nv4l2-ctl -d /dev/video0 --list-formats-ext\n\n# Ayr\u0131nt\u0131l\u0131 \u00e7\u0131kt\u0131\ngst-launch-1.0 -v videotestsrc ! videoconvert ! autovideosink\n</code></pre> <p>Not</p> <p>GUI tabanl\u0131 uygulamalar\u0131 uzaktan kullan\u0131rken ekran y\u00f6nlendirmesi i\u00e7in: <pre><code>export DISPLAY=:0\n</code></pre></p>"},{"location":"embedded/ipc/","title":"Inter-Process Communication (IPC)","text":"<p>Farkl\u0131 s\u00fcre\u00e7ler (process) aras\u0131nda veri, bilgi ve komut al\u0131\u015fveri\u015fi yapmay\u0131 sa\u011flayan mekanizmalard\u0131r. \u0130\u015fletim sisteminde paralel veya da\u011f\u0131t\u0131k \u00e7al\u0131\u015fan uygulamalar\u0131n birbirleriyle etkile\u015fim kurmas\u0131n\u0131 m\u00fcmk\u00fcn k\u0131lar.</p>"},{"location":"embedded/ipc/#uygulama-turleri","title":"Uygulama T\u00fcrleri","text":"<ul> <li> <p>Multi-Process Application: Birden fazla s\u00fcrecin ayn\u0131 anda ba\u011f\u0131ms\u0131z bi\u00e7imde \u00e7al\u0131\u015f\u0131p birbirleriyle etkile\u015fimde bulundu\u011fu yaz\u0131l\u0131mlard\u0131r.</p> </li> <li> <p>Parallel Programming: Karma\u015f\u0131k problemleri daha k\u00fc\u00e7\u00fck alt g\u00f6revlere b\u00f6l\u00fcp birden fazla i\u015flemci veya \u00e7ekirdekte e\u015f zamanl\u0131 \u00e7al\u0131\u015ft\u0131rarak performans\u0131 art\u0131rma tekni\u011fidir.</p> </li> <li> <p>Client\u2011Server Applications: \u0130stemciler (client) sunucuya (server) istek g\u00f6nderir, sunucu bu istekleri i\u015fler ve yan\u0131t d\u00f6ner. Da\u011f\u0131t\u0131k i\u015f y\u00fck\u00fc payla\u015f\u0131m\u0131 sa\u011flar.</p> </li> </ul>"},{"location":"embedded/ipc/#1-pipes","title":"1. Pipes","text":"<ul> <li>Tek y\u00f6nl\u00fc (unidirectional) veri kanal\u0131d\u0131r; bir ucu yazma, di\u011fer ucu okuma i\u00e7indir.</li> <li>Unnamed Pipes<ul> <li>Ebeveyn ve alt s\u00fcre\u00e7 (child) aras\u0131nda ge\u00e7ici, ads\u0131z kanal olu\u015fturur.</li> <li>Genellikle <code>pipe()</code> sistem \u00e7a\u011fr\u0131s\u0131yla yarat\u0131l\u0131r.</li> </ul> </li> <li>Named Pipes (FIFOs)<ul> <li>Dosya sisteminde \u00f6zel dosya (<code>/tmp/mypipe</code>) olarak var olur.</li> <li>Farkl\u0131 s\u00fcre\u00e7ler ve oturumlar aras\u0131nda kullan\u0131labilir.</li> <li>mkfifo <code>/tmp/mypipe</code> ile olu\u015fturulur.</li> </ul> </li> </ul>"},{"location":"embedded/ipc/#2-sockets","title":"2. Sockets","text":"<ul> <li>Hem ayn\u0131 makine i\u00e7i hem de a\u011f tabanl\u0131 iki y\u00f6nl\u00fc (bidirectional) ileti\u015fim sa\u011flar.<ul> <li>Unix Domain Sockets: Ayn\u0131 sistemde s\u00fcre\u00e7ler aras\u0131 d\u00fc\u015f\u00fck gecikmeli ileti\u015fim.</li> <li>TCP/IP Sockets: Farkl\u0131 makineler aras\u0131nda g\u00fcvenilir ba\u011flant\u0131.</li> <li>UDP Sockets: Ba\u011flant\u0131s\u0131z, d\u00fc\u015f\u00fck gecikmeli ileti\u015fim.</li> </ul> </li> </ul> <pre><code>// Tipik TCP server pseudo-kodu\nint sock = socket(AF_INET, SOCK_STREAM, 0);\nbind(sock, ...);\nlisten(sock, 5);\nint client = accept(sock, ...);\nread(client, buf, len);\nwrite(client, response, rlen);\n</code></pre>"},{"location":"embedded/ipc/#3-message-queues","title":"3. Message Queues","text":"<ul> <li>Mesajlar\u0131 FIFO kuyru\u011fu i\u00e7inde saklar; s\u00fcre\u00e7ler aras\u0131nda s\u0131ral\u0131 mesajla\u015fma sa\u011flar.<ul> <li>Adland\u0131r\u0131lm\u0131\u015f (POSIX): mq_open, mq_send, mq_receive.</li> <li>Unamed (System V): msgget, msgsnd, msgrcv.</li> <li>Mesaj boyutu ve izinleri tan\u0131mlanabilir; bir kuyru\u011fu birden \u00e7ok s\u00fcre\u00e7 kullanabilir.</li> </ul> </li> </ul>"},{"location":"embedded/ipc/#4-shared-memory","title":"4. Shared Memory","text":"<ul> <li>Birden \u00e7ok s\u00fcrecin ayn\u0131 fiziksel bellek b\u00f6lgesine eri\u015fmesini sa\u011flar; en h\u0131zl\u0131 IPC y\u00f6ntemlerinden biridir.<ul> <li>POSIX IPC: shm_open, mmap, shm_unlink.</li> <li>System V IPC: shmget, shmat, shmdt, shmctl.</li> </ul> </li> </ul> <p>Dikkat</p> <p>Mutlak senkronizasyon (mutex, semafor) kullan\u0131lmal\u0131, yoksa yar\u0131\u015f durumlar\u0131 (race condition) olu\u015fur.</p>"},{"location":"embedded/ipc/#5-semaphores","title":"5. Semaphores","text":"<ul> <li>Bir veya daha fazla s\u00fcrecin payla\u015f\u0131lan kaynaklara eri\u015fimini senkronize etmek i\u00e7in kullan\u0131l\u0131r.<ul> <li>POSIX: sem_open, sem_wait, sem_post, sem_close</li> <li>System V: semget, semop, semctl.</li> <li>Shared memory ile birlikte s\u0131k\u00e7a tercih edilir.</li> </ul> </li> </ul>"},{"location":"embedded/ipc/#6-signals","title":"6. Signals","text":"<ul> <li>S\u00fcre\u00e7lere asenkron bildirim (interrupt) g\u00f6ndermek i\u00e7in kullan\u0131l\u0131r.</li> <li>Standart sinyaller: <code>kill(pid, SIGTERM);</code><ul> <li>SIGINT \u00a0\u2192 Ctrl+C</li> <li>SIGTERM \u2192 Nazik sonland\u0131rma</li> <li>SIGKILL \u2192 Zorla sonland\u0131rma</li> </ul> </li> <li>Bir s\u00fcre\u00e7, signal(SIGINT, handler) ile sinyal al\u0131nd\u0131\u011f\u0131nda \u00e7al\u0131\u015ft\u0131r\u0131lacak fonksiyonu tan\u0131mlayabilir.</li> </ul> <p>Not</p> <p>Bu IPC mekanizmalar\u0131, gereksinimlerinize g\u00f6re performans, g\u00fcvenilirlik ve karma\u015f\u0131kl\u0131k a\u00e7\u0131s\u0131ndan farkl\u0131 avantajlar sunar. En h\u0131zl\u0131s\u0131 shared memory, en yayg\u0131n kullan\u0131lan\u0131 ise sockets\u2019tir; pipes ve message queue\u2019lar ise basit veri ak\u0131\u015flar\u0131nda idealdir.</p>"},{"location":"perception_ai/ai/","title":"AI","text":"<p>Kullan\u0131c\u0131lar modele girdi verilerini sa\u011flar; geli\u015ftiriciler ise uygun i\u015flem ad\u0131mlar\u0131n\u0131 (\u201cfonksiyonu\u201d) tan\u0131mlar. Yapay zek\u00e2, bu fonksiyonun en iyi h\u00e2le getirilmesi yani veri ile beklenen sonu\u00e7 aras\u0131ndaki ba\u011f\u0131nt\u0131n\u0131n algoritma taraf\u0131ndan \u201c\u00f6\u011frenilmesi\u201d i\u015fini \u00fcstlenir. K\u0131sacas\u0131, yapay zek\u00e2 elinizdeki \u00f6rnek girdi\u2011\u00e7\u0131kt\u0131 \u00e7iftlerinden hareketle, i\u015finizi \u201cotomatik olarak\u201d yapacak fonksiyonu bulur ve genelle\u015ftirir.</p> <p></p>"},{"location":"perception_ai/ai/#denetimli-ogrenme-supervised-learning","title":"Denetimli \u00d6\u011frenme (Supervised Learning)","text":"<ul> <li>Tan\u0131m: Girdi / \u00e7\u0131kt\u0131 e\u015fle\u015ftirmeleri i\u00e7eren etiketli verilerle e\u011fitim yap\u0131l\u0131r.</li> <li>Ama\u00e7: Modelin, bilinmeyen girdilere do\u011fru \u00e7\u0131kt\u0131lar tahmin etmesini sa\u011flamak.</li> <li>Nas\u0131l \u00c7al\u0131\u015f\u0131r?<ul> <li>E\u011fitim seti: <code>(x\u2081, y\u2081), (x\u2082, y\u2082), \u2026</code> gibi girdi\u2013etiket \u00e7iftleri.</li> <li>Model, x\u2019ten y\u2019yi \u00f6\u011frenmeye \u00e7al\u0131\u015f\u0131r (\u00f6rn. do\u011frusal regresyon, karar a\u011fa\u00e7lar\u0131, sinir a\u011flar\u0131).</li> </ul> </li> <li>Uygulama \u00d6rnekleri:<ul> <li>E\u2011posta s\u0131n\u0131fland\u0131rma: \u201cspam\u201d vs. \u201cspam de\u011fil\u201d</li> <li>G\u00f6r\u00fcnt\u00fc tan\u0131ma: Foto\u011fraftaki nesnenin etiketi</li> <li>Finans: Kredi risk tahmini</li> </ul> </li> </ul>"},{"location":"perception_ai/ai/#denetimsiz-ogrenme-unsupervised-learning","title":"Denetimsiz \u00d6\u011frenme (Unsupervised Learning)","text":"<ul> <li>Tan\u0131m: Etiketlenmemi\u015f verilerdeki gizli yap\u0131lar\u0131 ke\u015ffeder.</li> <li>Ama\u00e7: Veri k\u00fcmelerini anlamak, gruplamak veya indirgemek.</li> <li> <p>Nas\u0131l \u00c7al\u0131\u015f\u0131r?</p> <ul> <li>K\u00fcmelendirme (clustering): Benzer verileri bir araya toplar (K\u2011means, DBSCAN).</li> <li>Boyut indirgeme (dimensionality reduction): \u00d6zellik say\u0131s\u0131n\u0131 azalt\u0131r (PCA, t-SNE).</li> </ul> </li> <li> <p>Uygulama \u00d6rnekleri:</p> <ul> <li>M\u00fc\u015fteri segmentasyonu: Benzer al\u0131\u015fveri\u015f kal\u0131plar\u0131na g\u00f6re gruplama</li> <li>Anomali tespiti: Verideki u\u00e7 noktalar\u0131 bulma</li> <li>\u00d6znitelik \u00e7\u0131kar\u0131m\u0131: Verinin temel bile\u015fenlerini ke\u015ffetme</li> </ul> </li> </ul>"},{"location":"perception_ai/ai/#pekistirmeli-ogrenme-reinforcement-learning","title":"Peki\u015ftirmeli \u00d6\u011frenme (Reinforcement Learning)","text":"<ul> <li>Tan\u0131m: Bir ajan, bir ortam i\u00e7inde ad\u0131m ad\u0131m eylemler se\u00e7erek \u00f6d\u00fcl toplar ve stratejisini geli\u015ftirir.</li> <li>Ama\u00e7: Uzun vadeli toplam \u00f6d\u00fcl\u00fc maksimize eden bir politika \u00f6\u011frenmek.</li> <li>Nas\u0131l \u00c7al\u0131\u015f\u0131r?<ul> <li>Ajan, ortam\u0131n bir durumuna (s) bakar.</li> <li>Bir eylem (a) se\u00e7er.</li> <li>Ortam yeni duruma (s') ge\u00e7er ve bir \u00f6d\u00fcl (r) verir.</li> <li>Ajan, (s, a, r, s') tecr\u00fcbesinden \u00f6\u011frenir.</li> <li>Algoritmalar: Q\u2011Learning, SARSA, Deep Q\u2011Networks (DQN), Policy Gradient y\u00f6ntemleri (REINFORCE, PPO).</li> </ul> </li> <li>Uygulama \u00d6rnekleri:<ul> <li>Otonom s\u00fcr\u00fc\u015f: Arac\u0131 g\u00fcvenli ve verimli s\u00fcr\u00fc\u015fe y\u00f6nlendirme</li> <li>Oyun oynama: Atari, Go, satran\u00e7 gibi oyunlarda insan\u2011\u00fcst\u00fc performans</li> <li>Robot kontrol\u00fc: Manip\u00fclat\u00f6r kol hareketlerini optimize etme</li> </ul> </li> </ul>"},{"location":"perception_ai/ai/#hata-bulma-admlar","title":"Hata Bulma Ad\u0131mlar\u0131","text":"<ol> <li>Problem Definition: What problem are we trying to solve?</li> <li>Data: What kind of data do we have?</li> <li>Evaluation: What defines success for us?</li> <li>Features: What do we already know about the data?</li> <li>Modelling: Based on our problem and data, what model should we use? </li> <li>Experimentation: How could we improve/what can we try next?</li> </ol>"},{"location":"perception_ai/ai/#crossvalidation","title":"Cross\u2011Validation","text":"<ul> <li>Cross\u2011Validation, makine \u00f6\u011frenimi modellerinin genelleme yetene\u011fini (overfitting\u2019i \u00f6nleyerek ger\u00e7ek d\u00fcnyada nas\u0131l performans g\u00f6sterece\u011fini) de\u011ferlendirmek i\u00e7in yayg\u0131n olarak kullan\u0131lan bir tekniktir. Temel ad\u0131mlar \u015f\u00f6yle i\u015fler: <ul> <li>Veri K\u00fcmesini Par\u00e7alara B\u00f6lme<ul> <li>En yayg\u0131n y\u00f6ntem k\u2011fold cross\u2011validation\u2019d\u0131r: Veri seti e\u015fit b\u00fcy\u00fckl\u00fckte k par\u00e7aya (fold) b\u00f6l\u00fcn\u00fcr.</li> <li>\u00d6rne\u011fin <code>k = 5</code> ise, veri be\u015f par\u00e7aya ayr\u0131l\u0131r.</li> </ul> </li> <li>E\u011fitim ve Test D\u00f6ng\u00fcleri<ul> <li>Her seferinde bu k par\u00e7adan biri test seti, kalan <code>k\u202f\u2013\u202f1</code> par\u00e7a e\u011fitim seti olarak kullan\u0131l\u0131r.</li> <li>Toplam k farkl\u0131 model e\u011fitilir ve test edilir.</li> </ul> </li> <li>Performans \u00d6l\u00e7\u00fcm\u00fc<ul> <li>Her d\u00f6ng\u00fc i\u00e7in hata veya skor metri\u011fi (\u00f6rn. do\u011fruluk, MSE, R\u00b2) hesaplan\u0131r.</li> <li>T\u00fcm k sonu\u00e7 ortalanarak nihai performans tahmini elde edilir.</li> </ul> </li> <li>Avantajlar\u0131<ul> <li>Veri setindeki rastgele b\u00f6l\u00fcnmelere ba\u011fl\u0131 sapmay\u0131 azalt\u0131r.</li> <li>Modelin farkl\u0131 alt k\u00fcmelerde nas\u0131l davrand\u0131\u011f\u0131na dair kapsaml\u0131 bilgi sunar.</li> <li>\u00d6zellikle k\u00fc\u00e7\u00fck veri setlerinde daha g\u00fcvenilir bir de\u011ferlendirme sa\u011flar.</li> </ul> </li> </ul> </li> </ul> <p>Yayg\u0131n Cross\u2011Validation Y\u00f6ntemleri | Y\u00f6ntem     | A\u00e7\u0131klama | |----------|-----------| | k\u2011Fold    | Veri k par\u00e7aya b\u00f6l\u00fcn\u00fcr ve k kez e\u011fitim/test yap\u0131l\u0131r. | | Stratified k\u2011Fold |   \u00d6zellikle s\u0131n\u0131fland\u0131rmada, her fold\u2019da s\u0131n\u0131f oranlar\u0131n\u0131 korur. | | Leave-One-Out |   k = N (her \u00f6rnek bir fold); her model tek bir \u00f6rnek test eder. | | Shuffle Split  | Rastgele b\u00f6lme ve tekrarlama; her d\u00f6ng\u00fcde farkl\u0131 rastgele b\u00f6lme. |</p> <p></p>"},{"location":"perception_ai/ai/#neden-kullanlr","title":"Neden Kullan\u0131l\u0131r?","text":"<ul> <li>Genelleme Hatalar\u0131n\u0131 \u00d6l\u00e7er: Tek seferlik e\u011fitim/test b\u00f6l\u00fcnmesine k\u0131yasla daha istikrarl\u0131 metrikler sa\u011flar.</li> <li>Model Se\u00e7imi: Farkl\u0131 hiperparametrelerin kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131nda g\u00fcvenilir sonu\u00e7 verir.</li> <li>K\u00fc\u00e7\u00fck Veri Setleri: S\u0131n\u0131rl\u0131 veri oldu\u011funda, her \u00f6rnek hem e\u011fitim hem test i\u00e7in kullan\u0131larak veri verimli de\u011ferlendirilir.</li> </ul> <p>Not</p> <p>Bu y\u00f6ntemle, modelinizin Coefficient of Determination (<code>R\u00b2</code>), do\u011fruluk veya di\u011fer metriklere dayal\u0131 performans tahmininiz daha g\u00fcvenilir ve tekrarlanabilir hale gelir.</p>"},{"location":"perception_ai/ai/#pandas","title":"Pandas","text":"<p>Pandas, Python\u2019da veri analizi ve manip\u00fclasyonu i\u00e7in kullan\u0131lan bir k\u00fct\u00fcphanedir. Genellikle veri i\u015fleme, temizleme, d\u00f6n\u00fc\u015ft\u00fcrme ve analiz gibi veri bilimi ve veri analiti\u011fi projelerinde tercih edilir.</p>"},{"location":"perception_ai/ai/#numpy","title":"NumPy","text":"<ul> <li>NumPy, Python programlama dilinde bilimsel hesaplama ve \u00e7ok boyutlu dizi i\u015fleme i\u00e7in kullan\u0131lan g\u00fc\u00e7l\u00fc bir k\u00fct\u00fcphanedir.</li> <li><code>ndarray</code> yap\u0131s\u0131 ile \u00e7ok boyutlu diziler olu\u015fturur.</li> <li>Diziler \u00fczerinde h\u0131zl\u0131 matematiksel operasyonlar (aritmetik, istatistik, lineer cebir vb.) sunar. Bu \u00f6zellikleri sayesinde NumPy, veri analizi, makine \u00f6\u011frenimi ve g\u00f6r\u00fcnt\u00fc i\u015fleme ba\u015fta olmak \u00fczere pek \u00e7ok alanda yayg\u0131n olarak kullan\u0131l\u0131r.</li> </ul>"},{"location":"perception_ai/ai/#matplotlib","title":"Matplotlib","text":"<ul> <li>Matplotlib, Python\u2019da grafik ve g\u00f6rselle\u015ftirme olu\u015fturmak i\u00e7in kullan\u0131lan kapsaml\u0131 bir k\u00fct\u00fcphanedir. Bilimsel topluluklar ve veri bilimcileri taraf\u0131ndan s\u0131k\u00e7a tercih edilir.</li> <li>\u00c7izgi grafikleri (<code>plot</code>)</li> <li>Sa\u00e7\u0131l\u0131m grafikleri (<code>scatter</code>)</li> <li>\u00c7ubuk grafikleri (<code>bar</code>)</li> <li>Histogramlar (<code>hist</code>)</li> <li>3D grafikler (<code>mpl_toolkits.mplot3d</code>) ve daha pek \u00e7ok grafik t\u00fcr\u00fcn\u00fc destekler.</li> </ul>"},{"location":"perception_ai/ai/#scikit-learn","title":"Scikit - Learn","text":"<ol> <li>An end-to-end Scikit-Learn work workflow</li> <li>Getting the data ready</li> <li>Choose the right estimator/algorithm for our problems</li> <li>Fit the model/algorithm and use it to make predictions on our data</li> <li>Evaluating a model</li> <li>Save and load a trained model</li> <li>Putting it all together</li> </ol> <ul> <li>Yapay zek\u00e2 uygulamalar\u0131nda <code>X</code> ve <code>Y</code>, s\u0131kl\u0131kla ba\u011f\u0131ms\u0131z ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkenleri g\u00f6stermek i\u00e7in kullan\u0131l\u0131r:<ul> <li>X (Ba\u011f\u0131ms\u0131z De\u011fi\u015fkenler): Modelin girdi olarak kulland\u0131\u011f\u0131 \u00f6zelliklerdir. \u00d6rne\u011fin bir ev fiyat\u0131 tahmin modelinde:<ul> <li>Oda say\u0131s\u0131</li> <li>Metrekare</li> <li>Konum</li> <li>Ya\u015f</li> </ul> </li> <li>Y (Ba\u011f\u0131ml\u0131 De\u011fi\u015fken): X \u00f6zelliklerinden tahmin edilmek istenen hedef de\u011fi\u015fkendir. Ayn\u0131 \u00f6rnekte bu, evin fiyat\u0131d\u0131r.</li> </ul> </li> </ul>"},{"location":"perception_ai/ai/#veriyi-hazrlamak-temizleme-donusturme-azaltma","title":"Veriyi Haz\u0131rlamak: Temizleme, D\u00f6n\u00fc\u015ft\u00fcrme, Azaltma","text":"<ul> <li>Veri kalitesi: hem model do\u011frulu\u011funu hem de hesaplama h\u0131z\u0131n\u0131 do\u011frudan etkiler. Tipik \u00f6n i\u015flem ad\u0131mlar\u0131:<ul> <li>Clean Data:<ul> <li>Eksik veya bo\u015f sat\u0131rlar\u0131 kald\u0131r\u0131n (dropna).</li> <li>Birimleri tutarl\u0131 h\u00e2le getirin (\u00f6rne\u011fin t\u00fcm alanlar\u0131 m\u00b2).</li> <li>Kategorik renk etiketlerini say\u0131sal kodlara \u00e7evirin (one\u2011hot encoding).</li> </ul> </li> <li>Transform Data:<ul> <li>Gerekirse log d\u00f6n\u00fc\u015f\u00fcm\u00fc, tarih/par\u00e7a ayr\u0131\u015ft\u0131rma vb. uygulay\u0131n.</li> </ul> </li> <li>Reduce Data:<ul> <li>Sonucu etkilemeyen s\u00fctunlar\u0131 kald\u0131r\u0131n (\u00f6rne\u011fin \u201cID\u201d veya sabit de\u011ferli kolonlar). </li> <li>\u00d6zellik se\u00e7imi veya PCA ile boyut indirgeme yap\u0131n.</li> </ul> </li> </ul> </li> </ul> <pre><code>Clean Data -&gt; Transform Data -&gt; Reduce Data\n</code></pre>"},{"location":"perception_ai/ai/#ozellik-olceklendirme-feature-scaling","title":"\u00d6zellik \u00d6l\u00e7eklendirme (Feature Scaling)","text":"<ul> <li>Farkl\u0131 aral\u0131klardaki \u00f6zellikler, gradyan ini\u015f gibi optimizasyon tabanl\u0131 algoritmalarda \u00f6\u011frenme h\u0131z\u0131n\u0131 ve kararl\u0131l\u0131\u011f\u0131 bozar. \u0130ki yayg\u0131n y\u00f6ntem:</li> </ul>"},{"location":"perception_ai/ai/#gradyan-inis-tabanl-algoritmalar","title":"Gradyan \u0130ni\u015f Tabanl\u0131 Algoritmalar","text":"<ul> <li>Linear regression, logistic regression, sinir a\u011flar\u0131, PCA vb. modeller gradyan ini\u015f ile parametrelerini g\u00fcnceller. \u00d6zellik aral\u0131klar\u0131 farkl\u0131 oldu\u011funda:<ul> <li>B\u00fcy\u00fck de\u011ferli \u00f6zellikler \u00e7ok k\u00fc\u00e7\u00fck ad\u0131mlarla g\u00fcncellenir,</li> <li>K\u00fc\u00e7\u00fck de\u011ferli \u00f6zellikler \u00e7ok b\u00fcy\u00fck ad\u0131mlarla g\u00fcncellenir,</li> <li>Sonu\u00e7ta \u00f6\u011frenme yava\u015flar veya dengesizle\u015fir.</li> </ul> </li> <li>Bu y\u00fczden t\u00fcm \u00f6zellikleri ayn\u0131 \u00f6l\u00e7e\u011fe getirmek, gradyan ini\u015fin minimuma h\u0131zl\u0131 ve dengeli yak\u0131nsamas\u0131n\u0131 sa\u011flar.</li> </ul>"},{"location":"perception_ai/ai/#mesafeye-dayal-algoritmalar-distancebased","title":"Mesafeye Dayal\u0131 Algoritmalar (Distance\u2011Based)","text":"<ul> <li>Mesafeye dayal\u0131 algoritmalar, veri noktalar\u0131 aras\u0131ndaki uzakl\u0131klar\u0131 kullanarak benzerlik veya k\u00fcmelenme yapar. \u00d6zellik \u00f6l\u00e7ekleri farkl\u0131 oldu\u011funda b\u00fcy\u00fck de\u011ferli \u00f6zellikler daha bask\u0131n hale gelir, bu y\u00fczden feature scaling \u015fartt\u0131r.</li> <li>\u00d6rnek Algoritmalar:<ul> <li>K\u2011NN (K\u2011Nearest Neighbors): S\u0131n\u0131fland\u0131rma ve regresyon i\u00e7in en yak\u0131n K kom\u015fuyu kullan\u0131r.</li> <li>K\u2011means: Veri k\u00fcmesini K k\u00fcmeye ay\u0131r\u0131r, merkezine en yak\u0131n noktalar\u0131 bulur.</li> <li>SVM (Support Vector Machines): S\u0131n\u0131fland\u0131rma i\u00e7in hiperd\u00fczlemler olu\u015fturur; mesafe \u00f6l\u00e7\u00fcs\u00fcne duyarl\u0131d\u0131r.</li> </ul> </li> <li>Neden \u00d6l\u00e7eklendirme?<ul> <li>\u0130ki \u00f6zellik farkl\u0131 aral\u0131klardaysa (\u00f6rne\u011fin not ortalamas\u0131 0\u20135, gelir 0\u2013100\u202f000), gelir \u00f6zelli\u011fi mesafeyi domine eder.</li> <li>\u00d6klidyen mesafe gibi metrikler, t\u00fcm \u00f6zellikleri e\u015fit katk\u0131da bulunacak \u015fekilde normalizasyon gerektirir.</li> </ul> </li> </ul>"},{"location":"perception_ai/ai/#agac-tabanl-algoritmalar-treebased","title":"A\u011fa\u00e7 Tabanl\u0131 Algoritmalar (Tree\u2011Based)","text":"<ul> <li>A\u011fa\u00e7 tabanl\u0131 modeller, hem s\u0131n\u0131fland\u0131rma hem de regresyon problemlerinde en pop\u00fcler y\u00f6ntemlerden biridir. Do\u011frusal olmayan ili\u015fkileri kolayca yakalar ve \u00f6zellik \u00f6l\u00e7e\u011fine duyars\u0131zd\u0131r.</li> <li>Karakteristik \u00d6zellikler:<ul> <li>Split (B\u00f6lme) Kriteri: Her d\u00fc\u011f\u00fcmde, veri setini en homojen alt k\u00fcmelere ay\u0131ran tek bir \u00f6zelli\u011fe g\u00f6re b\u00f6lme.</li> <li>\u00d6zellik \u00d6l\u00e7e\u011fine Duyars\u0131zl\u0131k: Tek bir \u00f6zelli\u011fe dayal\u0131 b\u00f6ld\u00fc\u011f\u00fc i\u00e7in, di\u011fer \u00f6zelliklerin de\u011fer aral\u0131klar\u0131 b\u00f6lme karar\u0131n\u0131 etkilemez.</li> <li>Kararl\u0131l\u0131k &amp; Yorumlanabilirlik: Model yap\u0131s\u0131 a\u011fa\u00e7 grafi\u011fi \u015feklinde g\u00f6rselle\u015ftirilebilir.</li> </ul> </li> <li>\u00d6rnek Algoritmalar:<ul> <li>Decision Tree: Tek bir a\u011fa\u00e7 yap\u0131s\u0131 kullan\u0131r.</li> <li>Random Forest: Birden \u00e7ok karar a\u011fac\u0131ndan olu\u015fan topluluk y\u00f6ntemi.</li> <li>Gradient Boosted Trees: Ard\u0131\u015f\u0131k a\u011fa\u00e7larla hatay\u0131 azaltan g\u00fc\u00e7lendirme y\u00f6ntemi.</li> </ul> </li> </ul> <p>Not</p> <p>Mesafeye dayal\u0131 algoritmalarda mutlaka \u00f6l\u00e7eklendirme yap\u0131n. A\u011fa\u00e7 tabanl\u0131 algoritmalar ise \u00f6l\u00e7ekleme gerektirmez; farkl\u0131 aral\u0131klardaki \u00f6zellikleri do\u011frudan kullanabilir.</p>"},{"location":"perception_ai/ai/#normalization-minmax-olceklendirme","title":"Normalization (Min\u2013Max \u00d6l\u00e7eklendirme)","text":"<ul> <li>\u00d6zellik de\u011ferlerini 0 ile 1 aras\u0131na s\u0131k\u0131\u015ft\u0131ran bir \u00f6l\u00e7eklendirme tekni\u011fidir. Veri k\u00fcmesindeki her de\u011fer, \u00f6zellikteki en d\u00fc\u015f\u00fck ve en y\u00fcksek de\u011ferler kullan\u0131larak yeniden hesaplan\u0131r:</li> </ul> <ul> <li>Avantaj: T\u00fcm \u00f6zellikler ayn\u0131 aral\u0131\u011fa gelir, kar\u015f\u0131la\u015ft\u0131rma kolayla\u015f\u0131r.</li> <li>Dezavantaj: Yeni gelen veride x de\u011feri [xmin, xmax] d\u0131\u015f\u0131nda olursa duyarl\u0131l\u0131k kayb\u0131 ya\u015fanabilir.</li> </ul>"},{"location":"perception_ai/ai/#standardization-zpuan-donusumu","title":"Standardization (Z\u2011Puan D\u00f6n\u00fc\u015f\u00fcm\u00fc)","text":"<ul> <li> <p>\u00d6zelli\u011fin ortalamas\u0131n\u0131 0\u2019a, standart sapmas\u0131n\u0131 1\u2019e e\u015fitleyen bir \u00f6l\u00e7eklendirme y\u00f6ntemidir:</p> </li> <li> <p>\u03bc: \u00d6zelli\u011fin ortalamas\u0131</p> </li> <li>\u03c3: \u00d6zelli\u011fin standart sapmas\u0131</li> <li>Avantaj: Ayk\u0131r\u0131 de\u011ferlere kar\u015f\u0131 Min\u2013Max\u2019a g\u00f6re daha dayan\u0131kl\u0131d\u0131r.</li> <li>Dezavantaj: Da\u011f\u0131l\u0131m\u0131n normal (Gaussian) oldu\u011funu varsayar.</li> </ul> <p></p>"},{"location":"perception_ai/ai/#onehot-encoding","title":"One\u2011Hot Encoding","text":"<ul> <li>Kategorik de\u011fi\u015fkenleri (\u00f6rne\u011fin renkler) binary s\u00fctunlara d\u00f6n\u00fc\u015ft\u00fcr\u00fcr. Her kategori i\u00e7in bir s\u00fctun olu\u015fturulur; o kategori var ise 1, yok ise 0 ile g\u00f6sterilir:</li> </ul> Renk K\u0131rm\u0131z\u0131 Mavi Ye\u015fil K\u0131rm\u0131z\u0131 1 0 0 Mavi 0 1 0 Ye\u015fil 0 0 1 <ul> <li>Avantaj: Mesafeye dayal\u0131 algoritmalarda do\u011fru mesafe \u00f6l\u00e7\u00fcm\u00fc sa\u011flar.</li> <li>Dezavantaj: \u00c7ok say\u0131da kategori varsa boyut patlamas\u0131na (high dimensionality) yol a\u00e7abilir.</li> </ul>"},{"location":"perception_ai/ai/#kavramlar","title":"Kavramlar","text":""},{"location":"perception_ai/ai/#randomforestclassifier","title":"RandomForestClassifier","text":"<ul> <li>Birden \u00e7ok karar a\u011fac\u0131n\u0131n (decision tree) ansamble edilmesiyle (bagging) olu\u015fturulan, denetimli s\u0131n\u0131fland\u0131rma algoritmas\u0131d\u0131r.</li> <li>Kullan\u0131m Alan\u0131: Sonucun kategorik oldu\u011fu (\u00f6rne\u011fin; bir ki\u015finin hasta/sa\u011fl\u0131kl\u0131, e-postan\u0131n spam/ham olmas\u0131) problemlerde tercih edilir.</li> <li>\u00d6zellikler:<ul> <li>Alt \u00f6rneklem (bootstrap) alma ve rastgele \u00f6zellik se\u00e7imi ile a\u011fa\u00e7lar aras\u0131nda \u00e7e\u015fitlilik sa\u011flan\u0131r.</li> <li>A\u015f\u0131r\u0131 \u00f6\u011frenme (overfitting) riski tek bir karar a\u011fac\u0131na g\u00f6re daha d\u00fc\u015f\u00fckt\u00fcr.</li> </ul> </li> <li>Ba\u015fl\u0131ca Parametreler:<ul> <li>n_estimators: A\u011fa\u00e7 say\u0131s\u0131 (varsay\u0131lan 100).</li> <li>max_depth: A\u011fa\u00e7 derinli\u011fi s\u0131n\u0131rlamas\u0131.</li> <li>max_features: Her b\u00f6l\u00fcnmede de\u011ferlendirilecek rastgele \u00f6zellik say\u0131s\u0131.</li> </ul> </li> <li>K\u00fct\u00fcphane: <code>sklearn.ensemble.RandomForestClassifier</code></li> </ul>"},{"location":"perception_ai/ai/#randomforestregressor","title":"RandomForestRegressor","text":"<ul> <li>RandomForestClassifier mant\u0131\u011f\u0131n\u0131n regresyon sorunlar\u0131na uyarlanm\u0131\u015f halidir. S\u00fcrekli bir hedef de\u011fi\u015fkeni (\u00f6rne\u011fin; ev fiyat\u0131, s\u0131cakl\u0131k) tahmin etmek i\u00e7in kullan\u0131l\u0131r.</li> <li>Kullan\u0131m Alan\u0131: Tahmin edilecek de\u011ferin kesikli de\u011fil de s\u00fcrekli oldu\u011fu durumlar.</li> <li>\u00d6zellikler:<ul> <li>Ortalama alarak tahmin \u00fcretir (her a\u011fac\u0131n \u00e7\u0131kt\u0131s\u0131n\u0131n ortalamas\u0131).</li> <li>G\u00fcr\u00fclt\u00fcye kar\u015f\u0131 dayan\u0131kl\u0131d\u0131r ve genellikle y\u00fcksek varyansl\u0131 modelleri dengeler.</li> <li>Ba\u015fl\u0131ca Parametreler: RandomForestClassifier ile benzerdir.</li> </ul> </li> <li>K\u00fct\u00fcphane: <code>sklearn.ensemble.RandomForestRegressor</code></li> </ul>"},{"location":"perception_ai/ai/#decision-tree-karar-agac","title":"Decision Tree (Karar A\u011fac\u0131)","text":"<ul> <li>Hem s\u0131n\u0131fland\u0131rma hem de regresyon g\u00f6revlerinde kullan\u0131lan, parametrik olmayan denetimli \u00f6\u011frenme (supervised learning) algoritmas\u0131d\u0131r.</li> <li>Nas\u0131l \u00c7al\u0131\u015f\u0131r?<ul> <li>Veri, her d\u00fc\u011f\u00fcmde en iyi ay\u0131r\u0131m\u0131 sa\u011flayan \u00f6zellik ve e\u015fik de\u011feri (\u00f6r. Gini impurity, Entropy) se\u00e7ilerek ikili dallara ayr\u0131l\u0131r.</li> <li>Yaprak d\u00fc\u011f\u00fcmlere kadar veya \u00f6nceden belirlenmi\u015f ko\u015fullara (\u00f6r. maksimum derinlik) ula\u015fana dek b\u00f6l\u00fcnme devam eder.</li> </ul> </li> <li>Avantajlar:<ul> <li>Yorumlanabilir ve h\u0131zl\u0131d\u0131r.</li> <li>Veri \u00f6n i\u015fleme (normalizasyon, \u00f6l\u00e7ekleme) genellikle gerekmez.</li> </ul> </li> <li>Dezavantajlar:<ul> <li>Derin a\u011fa\u00e7lar a\u015f\u0131r\u0131 \u00f6\u011frenmeye meyillidir.</li> <li>Karar s\u0131n\u0131rlar\u0131n\u0131 dikd\u00f6rtgenlere benzer b\u00f6lgelere b\u00f6ler, dolay\u0131s\u0131yla karma\u015f\u0131k s\u0131n\u0131rlar zor \u00f6\u011frenilir</li> </ul> </li> </ul>"},{"location":"programming/c/","title":"C Programlama","text":"<ul> <li>LValue: Adrese sahip, atama yap\u0131labilen ifadelerdir.</li> <li>RValue: Atama yap\u0131lamayan, genellikle ge\u00e7ici de\u011ferlerdir.</li> <li>Call by Reference: C dilinde do\u011frudan yoktur, ancak pointerlar arac\u0131l\u0131\u011f\u0131yla benzer i\u015flev sa\u011flanabilir.</li> <li>Call by Value: Parametrelerin fonksiyona kopyalanarak g\u00f6nderilmesidir.</li> <li>Postfix (i++): \u0130\u015flemden sonra art\u0131r\u0131r.</li> <li>Prefix (++i): \u0130\u015flemden \u00f6nce art\u0131r\u0131r.</li> <li>Recursion: Bir fonksiyonun kendisini \u00e7a\u011f\u0131rma i\u015flemidir.</li> <li>Redeclaration: Ayn\u0131 kapsamda ayn\u0131 isimle de\u011fi\u015fken ya da fonksiyon tekrar tan\u0131mlanamaz. Bu hata \u00fcretir.</li> <li><code>,</code> operat\u00f6r\u00fc ayn\u0131 kapsamda ayn\u0131 isimle de\u011fi\u015fken ya da fonksiyon tekrar tan\u0131mlanamaz. Bu hata \u00fcretir.</li> <li>argc: Argument count (arg\u00fcman say\u0131s\u0131)</li> <li>argv: Argument vector (arg\u00fcman dizisi)</li> <li>Diziler bellek adreslerini tutar.</li> <li>dizi[index] ile index[dizi] ayn\u0131 anlama gelir (<code>*(dizi + index)</code>).</li> <li>Temel T\u00fcrler: int, float, double, char, void</li> <li>const: De\u011fi\u015fkeni sabit yapar.</li> <li>sizeof: Veri veya de\u011fi\u015fken boyutunu d\u00f6ner.</li> <li>Struct: Farkl\u0131 veri t\u00fcrlerini gruplar.</li> <li>Bitfield: Haf\u0131zay\u0131 daha verimli kullanmak i\u00e7in bit seviyesinde alan tan\u0131mlar.</li> <li>Enum: Sabitlere anlaml\u0131 isimler verir.</li> <li>Union: Ayn\u0131 bellek b\u00f6lgesini farkl\u0131 veri t\u00fcrleriyle kullan\u0131r.</li> </ul> <pre><code>typedef int tamsayi;\ntamsayi value = 0;\n\nstruct Person {\n  char name[20];\n  int age;\n};\n\ntypedef struct {\n  unsigned int month : 4;\n  unsigned int year : 11;\n  unsigned int day : 5;\n} Date;\n\ntypedef struct {\n  uint8_t x;\n  uint16_t y;\n} __attribute__((packed)) State_s;\n</code></pre> <ul> <li>Snake Case: my_variable_name</li> <li>Camel Case: myVariableName</li> <li>Pascal Case: MyVariableName</li> <li>attribute: Yap\u0131lar\u0131n bellekteki bo\u015fluklar\u0131n\u0131 optimize eder.</li> <li>volatile: Optimize edilmemesi gereken de\u011fi\u015fkenlerde kullan\u0131l\u0131r.</li> </ul> <pre><code>// constructor int main \u00f6nce \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar.\n// destructor int mainden sonra \u00e7a\u0131lmas\u0131n\u0131 sa\u011flar.\n\nvoid __attribute__((constructor)) calledFirst();\nvoid __attribute__((destructor)) calledLast();\n\nvoid main() { printf(\"main\"); }\n\nvoid calledFirst() {  printf(\"constructor\\n\"); }\nvoid calledLast(){ printf(\"destructor\\n\"); }\n\n// packed bellekte olan bo\u015fluklar\u0131n doldurulmas\u0131n\u0131 sa\u011flar. normalde alta bulunan \n// struct  32 byte olur fakat packed  sayesinde 24 byte olur.\ntypedef struct {\n  uint8_t x;\n  uint16_t y;\n} __attribute__((packed)) State_s;\n\nState_s state_1\nState_s state_2 = {1 ,2};\nState_s state_3 = {0}; // B\u00fct\u00fcn verilere 0 atar.\nState_s state_ptr;\nstate_ptr-&gt;x = 10; // ya da *(state_ptr).x = 10;\n</code></pre> <ul> <li>Implicit: Otomatik t\u00fcr d\u00f6n\u00fc\u015f\u00fcm.</li> <li>Explicit: Manuel t\u00fcr d\u00f6n\u00fc\u015f\u00fcm.</li> </ul> <pre><code>int x = (int)3.14; // C tarz\u0131\nint y = static_cast&lt;int&gt;(3.14); // C++ tarz\u0131\n</code></pre> <ul> <li>Ko\u015fullar: if, else if, else, switch</li> <li>D\u00f6ng\u00fcler: for, while, do-while</li> <li>Fonksiyonlar: Void d\u0131\u015f\u0131ndaki fonksiyonlar mutlaka d\u00f6n\u00fc\u015f yapmal\u0131d\u0131r.</li> <li>Define ve Makrolar: Derleme zaman\u0131nda sembolik isimler yarat\u0131r. <code>#define</code> sembolik isimler atanmas\u0131 i\u00e7in kullan\u0131l\u0131r. De\u011fi\u015fkenlerin \u00f6n\u00fcne bo\u015f bir #define koyarak, o de\u011fi\u015fkenin kullan\u0131m amac\u0131 hakk\u0131nda bilgi verilebilir. #define bellek k\u0131sm\u0131nda alan tutmaz derleme s\u0131ras\u0131nda otomatik olarak d\u00fczeltilir.</li> </ul> <pre><code>#define MAX_SIZE 100\n#define __MUTLAK_SONUC__    //bo\u015f define \nint __MUTLAK_SONUC__ degisken;\n</code></pre> <ul> <li>String (Karakter Dizileri): C dilinde, string (karakter dizileri) asl\u0131nda karakterlerden olu\u015fan dizilerdir. Karakter dizileri her zaman \u00f6zel bir sonland\u0131r\u0131c\u0131 karakter <code>\\0</code> (null terminat\u00f6r) ile biter. Bu sonland\u0131r\u0131c\u0131, dizinin sonunu belirtmek i\u00e7in kullan\u0131l\u0131r.<ul> <li>\u00d6rne\u011fin, 6 karakterlik bir metin i\u00e7in bellekte 7 byte'l\u0131k alan ayr\u0131l\u0131r (6 karakter + 1 null terminat\u00f6r).</li> <li>\u00c7ift t\u0131rnak \" i\u00e7inde yaz\u0131lan stringlere otomatik olarak <code>\\0</code> eklenir. Ancak tek t\u0131rnak ' ile belirtilen karakter dizilerinde son karakter olarak manuel <code>\\0</code> eklenmelidir.</li> </ul> </li> </ul> <pre><code>char str1[] = \"Hello\"; // Otomatik olarak \\0 eklenir.\nchar str2[] = {'H', 'i', '\\0'}; // Manuel olarak \\0 eklenm\n</code></pre> <pre><code>#include &lt;stdarg.h&gt;\n\nif(printf(\"Hello World\")) {}  // Bir kez \u00e7al\u0131\u015f\u0131r.\nwhile(printf(\"Hello World\")) {} // Sonsuz d\u00f6ng\u00fc.\n\nfor(int a = 0, b = 10; a &lt; 10 &amp;&amp; b &gt; 2; a++, b--);\nunsigned log int = size_t;\n\nint array[5] = {[0 ... 4] = 5}; // Derleyiciye g\u00f6re kabul edilir.\n\n\nprintf(\"%2.3f\", num);   // Sa\u011f hizal\u0131\nprintf(\"%-2.3f\", num);  // Sol hizal\u0131\nprintf(\"%+2.3f\", num);  // Pozitif say\u0131 \u00f6n\u00fcne '+' koyar\nprintf(\"%05x\", num);    // Bo\u015fluklara 0 koyar\nprintf(\"%*.*f\", 2,3,number); // '*' verilerin d\u0131\u015fardan doldurulmas\u0131n\u0131 sa\u011flar.\nprintf(\"%#x\", number);       // '#' say\u0131lar\u0131n 0x \u015feklinde yaz\u0131lmas\u0131n\u0131 sa\u011flar.\n\nchar buf[100];\nsprintf(buf, \"Say\u0131: %d\", num);\nsscanf(buf, \"Say\u0131: %d\", &amp;num);\n</code></pre> <ul> <li><code>for(;;), while(true)</code> sonsuz d\u00f6ng\u00fcye \u00f6rnektir.</li> <li><code>continue</code> d\u00f6ng\u00fcy\u00fc ba\u015fa al\u0131r. <code>break</code> d\u00f6ng\u00fcden \u00e7\u0131kar. <code>return</code> fonksiyondan \u00e7\u0131kar.</li> <li>Modern derleyiciler de <code>#pragma once</code> kullan\u0131labilir. </li> </ul> <p><pre><code>// HEADER GUARDS\n#ifndef SOME_UNIQUE_NAME_HERE\n#define SOME_UNIQUE_NAME_HERE\n#endif\n</code></pre> <pre><code>int add(int a, int b); // prototip (declaration)\n\nint add(int a, int b) { return a + b; }  // Definition\n\nint sum(int num, ...) { // de\u011fi\u015fken say\u0131da parametre alan fonksiyon\n    int total = 0;\n    va_list args;\n    va_start(args, num);\n    for (int i = 0; i &lt; num; i++) {\n        total += va_arg(args, int);\n    }\n    va_end(args);\n    return total;\n}\n</code></pre></p> <ul> <li>Direct Acces: Bir de\u011fi\u015fkenin ad\u0131n\u0131 kullanarak eri\u015fmektedir.</li> <li>Indirect Access(Dolayl\u0131 Eri\u015fim): Pointer adresinden de\u011fi\u015fken eri\u015fimidir.</li> <li>Genel ama\u00e7lar i\u00e7in <code>void</code> veri tipi kullan\u0131l\u0131r. B\u00fct\u00fcn veri tipleri atamas\u0131 yap\u0131labilir.</li> </ul>"},{"location":"programming/c/#pointer","title":"Pointer","text":"<ul> <li>Bir bellek adresini tutar ve y\u00f6netir.</li> <li>Pointer adresini (ptr), i\u015faret edilen de\u011feri (*ptr) ifade eder. <pre><code>int val = 10;\nint *ptr = &amp;val;\n</code></pre></li> </ul>"},{"location":"programming/c/#dinamik-bellek-yonetimi","title":"Dinamik Bellek Y\u00f6netimi","text":"<ul> <li>malloc: Bellekte belirtilen boyut kadar yer ay\u0131r\u0131r.</li> <li>calloc: Bellekte yer ay\u0131r\u0131r ve temizler.</li> <li>realloc: Daha \u00f6nce ayr\u0131lan bellek alan\u0131n\u0131 yeniden boyutland\u0131r\u0131r.</li> <li>free: Ayr\u0131lan belle\u011fi serbest b\u0131rak\u0131r.</li> </ul> <pre><code>int *arr = (int*)malloc(sizeof(int)*10);\nfree(arr);\n</code></pre>"},{"location":"programming/c/#temel-veri-yaplar","title":"Temel Veri Yap\u0131lar\u0131","text":"<ul> <li>Stack: Program derlenirken sabit boyutludur, LIFO mant\u0131\u011f\u0131 kullan\u0131r.</li> <li>Heap: \u00c7al\u0131\u015fma zaman\u0131 s\u0131ras\u0131nda dinamik bellek y\u00f6netimine izin verir.</li> <li>Linked List (Ba\u011fl\u0131 Liste): Veri par\u00e7alar\u0131n\u0131 birbirine ba\u011flayan pointerlarla dinamik haf\u0131za y\u00f6netimi sa\u011flar.</li> </ul>"},{"location":"programming/cpp/","title":"C++ Programlama","text":"<ul> <li>Bir de\u011fi\u015fkeni ba\u015flatman\u0131n (initialization) \u00fc\u00e7 yolu vard\u0131r:<ul> <li>Copy initialization (\u00f6rne\u011fin <code>int a = 5;</code>)</li> <li>Direct initialization (\u00f6rne\u011fin <code>int b(5);</code>)</li> <li>List initialization (\u00f6rne\u011fin <code>int c{5};</code>)</li> </ul> </li> </ul> <p>Not</p> <p>En g\u00fcvenilir olan\u0131 list initialization\u2019d\u0131r; \u00e7\u00fcnk\u00fc daralt\u0131c\u0131 (narrowing) d\u00f6n\u00fc\u015f\u00fcmlere \u00f6rne\u011fin bir float de\u011feri do\u011frudan int\u2019e izin vermez.</p> <ul> <li> <p>Tan\u0131mlan\u0131p hi\u00e7 kullan\u0131lmayan de\u011fi\u015fkenler i\u00e7in derleyici uyar\u0131 verir. Bu uyar\u0131y\u0131 bast\u0131rmak i\u00e7in C++17\u2019den itibaren <code>[[maybe_unused]]</code> \u00f6zniteli\u011fini kullanabiliriz.</p> </li> <li> <p><code>::</code> operat\u00f6r\u00fc, \u00f6n\u00fcnde bir isim (\u00f6rne\u011fin bir namespace veya s\u0131n\u0131f ad\u0131) yoksa \u201cglobal\u201d ad alan\u0131n\u0131 ifade eder.</p> </li> </ul> <pre><code>#include &lt;iostream&gt;   // Standart giri\u015f-\u00e7\u0131k\u0131\u015f k\u00fct\u00fcphanesi\n\nusing namespace std; // T\u00fcm std isimlerini do\u011frudan kullanmam\u0131za izin verir\n// Sadece belli bir \u00f6geyi dahil etmek istersek:\n// using std::cout;\n\nint main() {\n    [[maybe_unused]] int a = 5; // copy initialization\n    int b(5);                   // direct initialization\n    int c{5};                   // list initialization \u2014 narrowing\u2019a izin vermez\n}\n</code></pre> <ul> <li> <p><code>std::cin &gt;&gt;</code> operat\u00f6r\u00fc bo\u015fluk karakterine kadar okurken,</p> </li> <li> <p><code>std::getline(cin, str)</code> sat\u0131r sonuna (veya belirledi\u011finiz ba\u015fka bir s\u0131n\u0131rlay\u0131c\u0131ya) kadar t\u00fcm girdi sat\u0131r\u0131n\u0131 al\u0131r. Bu sayede kullan\u0131c\u0131dan bo\u015fluk i\u00e7eren sat\u0131rlar veya t\u00fcm sat\u0131r\u0131 almam\u0131z gerekti\u011finde getline tercih edilir.</p> </li> <li> <p><code>namespace</code>, ayn\u0131 isimli tan\u0131mlamalar\u0131n \u00e7ak\u0131\u015fmas\u0131n\u0131 \u00f6nlemek i\u00e7in kullan\u0131l\u0131r.</p> <ul> <li>Hem de\u011fi\u015fken, hem fonksiyon, hem de s\u0131n\u0131f ve di\u011fer tan\u0131mlar\u0131 ayr\u0131 gruplarda toplayabiliriz.</li> <li>\u0130\u00e7 i\u00e7e namespace\u2019ler tan\u0131mlamak da m\u00fcmk\u00fcnd\u00fcr.</li> </ul> </li> </ul> <pre><code>namespace A {\n    namespace B {\n        void foo();\n    }\n}\n</code></pre> <ul> <li><code>constexpr</code>, derleme zaman\u0131nda hesaplanabilen ve kesinlikle sabit (compile-time constant) olan de\u011ferler i\u00e7in;</li> <li><code>const</code> ise derlendikten sonra de\u011fi\u015ftirilemeyen, ama derleme zaman\u0131nda mutlaka hesaplanamayabilecek de\u011ferler i\u00e7in kullan\u0131l\u0131r</li> <li>C++20 ile aggregate tipler i\u00e7in \u201cdesignated initializer\u201d deste\u011fi eklendi. B\u00f6ylece yap\u0131daki sadece istedi\u011finiz \u00fcyeyi atayabilirsiniz: <pre><code>struct Foo { int a, b, c; };\n\nFoo f0 {1, 2, 3};                   // T\u00fcm \u00fcyeleri s\u0131rayla atar\nFoo f1 {.a = 1, .c = 3};            // Sadece a ve c\u2019yi atar; b = 0\n// C++20\u2019de \u00fcye s\u0131ras\u0131 \u00f6nemli de\u011fil:\nFoo f2 {.c = 3, .a = 1};            // Ge\u00e7erli\n</code></pre></li> <li><code>typedef</code> Eski C/C++ tarz\u0131 tip takma ad\u0131 (alias) olu\u015fturma.</li> <li> <p><code>using</code> C++11 ile gelen, daha okunur ve \u015fablonlarla da \u00e7al\u0131\u015fabilen modern alias tan\u0131m\u0131. <pre><code>// Eski stil\ntypedef unsigned long long ULLI1;\n\n// Yeni, daha okunur stil\nusing ULLI2 = unsigned long long;\n</code></pre></p> </li> <li> <p>\u00d6ne s\u0131f\u0131r koymak: oktal\u0131k (\u00f6r. 012); ekrana oktal g\u00f6sterimi i\u00e7in std::oct.</p> </li> <li>\u00d6ne 0x koymak: onalt\u0131l\u0131k (\u00f6r. 0x12); ekrana onalt\u0131l\u0131k i\u00e7in std::hex.</li> <li>\u00d6ne 0b koymak: ikilik (\u00f6r. 0b10).</li> <li>C++14+\u2019te b\u00fcy\u00fck say\u0131larda okuryaz\u0131l\u0131\u011f\u0131n\u0131 art\u0131rmak i\u00e7in t\u0131rnak: <code>100'000'000</code>.</li> </ul>"},{"location":"programming/cpp/#donguler-ve-kontrol-yaplar","title":"D\u00f6ng\u00fcler ve Kontrol Yap\u0131lar\u0131","text":"<p>C++\u2019ta klasik kontrol yap\u0131lar\u0131n\u0131n yan\u0131 s\u0131ra range-based for (C++11) d\u00f6ng\u00fcs\u00fc de bulunur.</p> <ul> <li><code>for (init; cond; inc)</code>, <code>while (cond)</code>, <code>do { \u2026 } while (cond);</code></li> <li><code>if (cond) { \u2026 } else { \u2026 }</code></li> <li><code>switch (expr) { case \u2026: \u2026; break; \u2026 }</code></li> <li><code>goto label;</code> (genellikle \u00f6nerilmez; kod ak\u0131\u015f\u0131n\u0131 karma\u015f\u0131kla\u015ft\u0131r\u0131r)</li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\nusing namespace std::literals;  \n\nint main() {\n    std::vector words{ \"peter\"s, \"likes\"s, \"frozen\"s };\n    for (auto&amp; word : words) {\n        std::cout &lt;&lt; word &lt;&lt; ' ';\n    }\n    // \u00c7\u0131kt\u0131: peter likes frozen \n}\n</code></pre>"},{"location":"programming/cpp/#program-sonlandrma-ve-hata-denetimi","title":"Program\u0131 Sonland\u0131rma ve Hata Denetimi","text":"<ul> <li><code>std::exit(int status):</code> Program\u0131 \u201cnormal\u201d olarak sonland\u0131r\u0131r.</li> <li><code>std::atexit(func):</code> Program kapan\u0131rken func()\u2019u \u00e7a\u011f\u0131r\u0131r.</li> <li><code>std::abort():</code> Program\u0131 aniden, \u201cabnormal\u201d bi\u00e7imde sonland\u0131r\u0131r.</li> <li><code>assert(cond):</code> cond sa\u011flanmazsa program\u0131 durdurur (yaln\u0131zca NDEBUG tan\u0131ml\u0131 de\u011filken).</li> </ul>"},{"location":"programming/cpp/#fonksiyonlar-ve-inline-namespace","title":"Fonksiyonlar ve Inline Namespace","text":"<ul> <li>inline fonksiyon: Derleme a\u015famas\u0131nda \u00e7a\u011fr\u0131ld\u0131\u011f\u0131 yere yerle\u015ftirilir (inlining), fonksiyon \u00e7a\u011fr\u0131s\u0131 y\u00fck\u00fcn\u00fc azalt\u0131r.</li> <li>inline namespace: Birden fazla s\u00fcr\u00fcm i\u00e7eren k\u00fct\u00fcphanelerde, \u00f6ntan\u0131ml\u0131 s\u00fcr\u00fcm\u00fc belirtmek i\u00e7in:</li> </ul> <pre><code>#include &lt;iostream&gt;\n\nnamespace V1 {\n    void doSomething() { std::cout &lt;&lt; \"V1\\n\"; }\n}\n\ninline namespace V2 {\n    void doSomething() { std::cout &lt;&lt; \"V2\\n\"; }\n}\n\nint main() {\n    V1::doSomething(); // V1\n    V2::doSomething(); // V2\n    doSomething();     // inline namespace \u2192 V2\n}\n</code></pre> <ul> <li>constexpr vs. consteval vs. constexpr<ul> <li>constexpr: Derleme zaman\u0131nda hesaplanabilir, fakat ihtiya\u00e7 duyuldu\u011funda \u00e7al\u0131\u015fma zaman\u0131nda da \u00e7a\u011fr\u0131labilir.</li> <li>consteval: Her \u00e7a\u011fr\u0131s\u0131 derleme zaman\u0131nda kesinlikle de\u011ferlendirilir (C++20).</li> </ul> </li> </ul>"},{"location":"programming/cpp/#lambda-ifadeleri","title":"Lambda \u0130fadeleri","text":"<ul> <li>Anonim fonksiyon tan\u0131m\u0131 yapar: <pre><code>auto f = []() { std::cout &lt;&lt; \"Hello\\n\"; };\nf();\n</code></pre></li> <li>Parametre ve d\u00f6n\u00fc\u015f: <pre><code>auto div = [](int x, int y, bool intDiv) -&gt; double {\n    if (intDiv)\n        return x / y;                   // int b\u00f6lme, sonra double\u2019a d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr\n    else\n        return static_cast&lt;double&gt;(x) / y;\n};\n</code></pre></li> <li>Yakalama listesi<ul> <li><code>[=]</code> t\u00fcm yerel de\u011fi\u015fkenleri de\u011fer ile kopyalar</li> <li><code>[&amp;]</code> t\u00fcm yerel de\u011fi\u015fkenlere referans verir</li> <li><code>[a, &amp;b]</code> belli de\u011fi\u015fkeni de\u011fer, di\u011ferini referans al\u0131r</li> <li>mutable ile de\u011fer yakalansa bile i\u00e7erde de\u011fi\u015ftirme izinli olur ama d\u0131\u015far\u0131 etkilemez</li> </ul> </li> </ul> <pre><code>int a = 1, b = 2;\nauto lv = [=]() mutable { a = 5; return a; }; // d\u0131\u015far\u0131daki a de\u011fi\u015fmez\nauto lf = [&amp;]()         { b = 5; return b; }; // d\u0131\u015far\u0131daki b de\u011fi\u015fir\n</code></pre>"},{"location":"programming/cpp/#sablonlar-templates","title":"\u015eablonlar (Templates)","text":"<ul> <li>C++\u2019ta t\u00fcrden ba\u011f\u0131ms\u0131z kod yazmak i\u00e7in kullan\u0131l\u0131r.</li> <li>E\u011fer t\u00fcm arg\u00fcmanlar ayn\u0131 t\u00fcrden ise &lt; &gt; yazmaya gerek yoktur.</li> <li>Farkl\u0131 t\u00fcrler i\u00e7in genellikle t\u00fcrleri kendiniz belirtirsiniz. <pre><code>#include &lt;iostream&gt;\ntemplate&lt;typename T, typename U&gt;\nauto add(T a, U b) {\n    return a + b;\n}\n\nint main() {\n    std::cout &lt;&lt; add(10, 3.5) &lt;&lt; '\\n';    // 13.5\n    std::cout &lt;&lt; add&lt;int, double&gt;(10, 3.5) &lt;&lt; '\\n'; // a\u00e7\u0131k belirtilmi\u015f\n}\n</code></pre></li> <li>S\u0131n\u0131f \u015eablonlar\u0131 ve Varsay\u0131lan Arg\u00fcman <pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt;\n\ntemplate&lt;typename T, typename U = int&gt;\nclass MyClass {\npublic:\n    MyClass() {\n        T value{};\n        std::cout &lt;&lt; typeid(value).name() &lt;&lt; '\\n';\n    }\n    template&lt;typename X&gt;\n    void add(X a, X b) {\n        std::cout &lt;&lt; (a + b) &lt;&lt; '\\n';\n    }\n};\n\nint main() {\n    MyClass&lt;double&gt;    m1;    // U = int\n    MyClass&lt;char, long&gt; m2;   // a\u00e7\u0131k belirtildi\n    m1.add(1.2, 3.4);\n    m1.add&lt;double&gt;(5.5, 6.6);\n}\n</code></pre></li> </ul>"},{"location":"programming/cpp/#bitset","title":"Bitset","text":"<pre><code>#include &lt;bitset&gt;\nbitset&lt;5&gt; bits;    // 5 bitlik bir dizi\ncout &lt;&lt; bits &lt;&lt; endl;  // 00000\nbits = 10;\ncout &lt;&lt; bits &lt;&lt; endl;  // 01010\n</code></pre>"},{"location":"programming/cpp/#dinamik-bellek","title":"Dinamik Bellek","text":"<pre><code>char* buffer = new char[8];   // Bellekten dizi ay\u0131rma\ndelete[] buffer;              // Dizi silme\n\nconst int* ptr1; // \u0130\u015faret etti\u011fi de\u011fer sabit, adres de\u011fi\u015febilir\nint* const ptr2; // Adres sabit, i\u015faret etti\u011fi de\u011fer de\u011fi\u015febilir\n\nint (*array)[5] = new int[x][5];  // x\u00d75\u2019lik matris\n</code></pre>"},{"location":"programming/cpp/#smart-pointers","title":"Smart Pointers","text":"<p>C++\u2019ta ham i\u015faret\u00e7iler (new/delete) yerine ak\u0131ll\u0131 i\u015faret\u00e7iler (smart pointers) kullanmak, bellek s\u0131z\u0131nt\u0131lar\u0131n\u0131 ve \u00e7ifte silme hatalar\u0131n\u0131 b\u00fcy\u00fck oranda ortadan kald\u0131r\u0131r. \u00dc\u00e7 ana t\u00fcr\u00fc vard\u0131r: 1. <code>std::unique_ptr&lt;T&gt;</code> Tek sahipli ak\u0131ll\u0131 i\u015faret\u00e7idir. Sahip oldu\u011fu nesnenin bellekten silinmesini otomatikle\u015ftirir: unique_ptr kapsam (scope) sonland\u0131\u011f\u0131nda delete \u00e7a\u011fr\u0131l\u0131r. Kopyalanamaz, ancak ta\u015f\u0131nabilir (std::move ile). Bu sayede \u00e7ifte silme riskini ve bellek s\u0131z\u0131nt\u0131lar\u0131n\u0131 \u00f6nler. \u0130sterseniz \u00f6zel bir silici (deleter) de tan\u0131mlayabilirsiniz:</p> <pre><code>auto fileCloser = [](FILE* f){ if(f) fclose(f); };\nstd::unique_ptr&lt;FILE, decltype(fileCloser)&gt; fptr(fopen(\"log.txt\",\"r\"), fileCloser);\n</code></pre> <ol> <li> <p><code>std::shared_ptr&lt;T&gt;</code> Payla\u015f\u0131ml\u0131 sahiplik sa\u011flayan i\u015faret\u00e7idir. Ayn\u0131 nesneye birden fazla shared_ptr i\u015faret edebilir ve referans say\u0131s\u0131 (use_count) s\u0131f\u0131rlanana dek nesne silinmez. D\u00f6ng\u00fcsel ba\u011f\u0131ml\u0131l\u0131k riskini k\u0131rmak i\u00e7in std::weak_ptr kullanarak \u201czay\u0131f\u201d i\u015faret\u00e7i olu\u015fturabilirsiniz. Referans say\u0131s\u0131n\u0131 y\u00f6netmek i\u00e7in atomik i\u015flemler kulland\u0131\u011f\u0131ndan, unique_ptr\u2019a g\u00f6re biraz daha maliyetlidir.</p> </li> <li> <p><code>std::make_unique&lt;T&gt;(...)</code> ve <code>std::make_shared&lt;T&gt;(...)</code> C++14/17 ile gelen fabrikalar (factory functions). Ham i\u015faret\u00e7i yerine do\u011frudan ak\u0131ll\u0131 i\u015faret\u00e7i olu\u015fturur ve exception safety (istisna g\u00fcvenli\u011fi) sa\u011flar:</p> </li> </ol> <pre><code>auto up = std::make_unique&lt;MyClass&gt;(ctorArg1, ctorArg2);\nauto sp = std::make_shared&lt;MyClass&gt;(ctorArg1, ctorArg2);\n</code></pre> <ul> <li>make_unique: yaln\u0131zca bir sahipli unique_ptr d\u00f6nd\u00fcr\u00fcr.</li> <li>make_shared: nesneyi ve referans sayac\u0131 tek bir bellek blo\u011funda tutar, daha verimli bellek kullan\u0131m\u0131 sunar.</li> </ul>"},{"location":"programming/cpp/#casting-turleri","title":"Casting T\u00fcrleri","text":"<ol> <li>static_cast(x): Derleme zaman\u0131nda g\u00fcvenli d\u00f6n\u00fc\u015f\u00fcmler (\u00f6rne\u011fin say\u0131 t\u00fcrleri aras\u0131). <li>dynamic_cast(p): \u00c7al\u0131\u015fma zaman\u0131nda polimorfik s\u0131n\u0131flar aras\u0131nda g\u00fcvenli downcast/upcast. <li>const_cast(x): const niteli\u011fini kald\u0131rmak i\u00e7in. <li>reinterpret_cast(p): \u0130ki i\u015f par\u00e7ac\u0131\u011f\u0131 aras\u0131ndaki bellek g\u00f6sterimini yeniden yorumlamak i\u00e7in (\u00e7ok dikkatli kullan\u0131lmal\u0131). <pre><code>float  f   = 3.14f;\nint    i1  = static_cast&lt;int&gt;(f);\n\nclass Base { virtual void foo() {} };\nclass Derived : public Base {};\n\nBase*       bp = new Derived();\nDerived*    dp = dynamic_cast&lt;Derived*&gt;(bp);\n\nconst int   x  = 5;\nint&amp;        y  = const_cast&lt;int&amp;&gt;(x);\n\nint*        p  = reinterpret_cast&lt;int*&gt;(0x1234);\n</code></pre>"},{"location":"programming/cpp/#stdvector-vs-stdarray","title":"<code>std::vector</code> vs. <code>std::array</code>","text":"<p>C++\u2019ta dinamik ve sabit boyutlu diziler i\u00e7in iki temel s\u0131n\u0131f \u015fablonu vard\u0131r:</p> <ul> <li><code>std::vector&lt;T&gt;</code><ul> <li>Dinamik boyutlu dizi. Eleman ekledik\u00e7e otomatik b\u00fcy\u00fcr.</li> <li>Rastgele eri\u015fim i\u00e7in <code>operator[]</code> ve s\u0131n\u0131r denetimli <code>at()</code> sa\u011flar.</li> <li><code>vec[i]</code> h\u0131zl\u0131 ama s\u0131n\u0131r denetimsiz.</li> <li><code>vec.at(i)</code> s\u0131n\u0131r d\u0131\u015f\u0131 eri\u015fimde std::out_of_range f\u0131rlat\u0131r.</li> </ul> </li> </ul> <pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::vector&lt;int&gt; primes{2, 3, 5, 7};  // Ba\u015flang\u0131\u00e7 listesiyle 4 eleman\n    std::vector&lt;int&gt; data(10);            // 10 elemanl\u0131, t\u00fcm de\u011ferler 0\n\n    // Hatal\u0131: do\u011frudan tek say\u0131yla vekt\u00f6r olu\u015fturulamaz\n    // std::vector&lt;int&gt; v1 = 10;  \n\n    // Do\u011fru: tek elemanl\u0131 vekt\u00f6r\n    std::vector&lt;int&gt; v1{10};\n\n    // Eri\u015fim\n    std::cout &lt;&lt; primes[1] &lt;&lt; \"\\n\";       // 3\n    std::cout &lt;&lt; v1.at(0) &lt;&lt; \"\\n\";        // 10\n\n    // Boyut \u00f6\u011frenme\n    std::cout &lt;&lt; \"Size: \"     &lt;&lt; v1.size()     &lt;&lt; \"\\n\";\n    std::cout &lt;&lt; \"Capacity: \" &lt;&lt; v1.capacity() &lt;&lt; \"\\n\";\n}\n</code></pre> <ul> <li> <p><code>std::array&lt;T, N&gt;</code></p> <ul> <li>Sabit boyutlu dizi; derleme zaman\u0131nda N belirlenir.</li> <li>\u0130\u00e7inde C stili dizilere benzer \u015fekilde \u00e7al\u0131\u015f\u0131r, ama STL ile uyumludur.</li> <li><code>size()</code>, <code>at()</code>, <code>operator[]</code>, <code>begin()</code>, <code>end()</code> gibi \u00fcyelere sahiptir. <pre><code>#include &lt;array&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::array&lt;int, 5&gt; arr = {10, 20, 30, 40, 50};\n    for (std::size_t i = 0; i &lt; arr.size(); ++i) {\n        std::cout &lt;&lt; arr[i] &lt;&lt; ' ';\n    }\n    // \u00c7\u0131kt\u0131: 10 20 30 40 50 \n}\n</code></pre></li> </ul> </li> <li> <p><code>empty():</code> Bo\u015fsa true, de\u011filse false d\u00f6ner.</p> </li> <li><code>size():</code> Ge\u00e7erli eleman say\u0131s\u0131n\u0131 d\u00f6ner.</li> <li><code>capacity():</code> Ayr\u0131lm\u0131\u015f bellek kapasitesini d\u00f6ner; size() \u2264 capacity().</li> <li><code>reserve(n):</code> Kapasiteyi en az n olacak \u015fekilde \u00f6nceden ay\u0131r\u0131r; yeniden tahsisi azalt\u0131r.</li> <li><code>resize(n):</code> Boyutu n olarak ayarlar; yeni elemanlar varsay\u0131lan T ctor ile olu\u015fturulur.</li> <li><code>push_back(val):</code> Sonuna bir kopya ekler.</li> <li><code>emplace_back(args\u2026):</code> Nesneyi yerinde (in-place) olu\u015fturur; kopya maliyeti yok.</li> <li><code>pop_back():</code> Son eleman\u0131 siler.</li> <li><code>front() / back():</code> \u0130lk ve son eleman\u0131 referans olarak d\u00f6ner.</li> </ul> <pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::vector&lt;int&gt; v;\n    std::cout &lt;&lt; std::boolalpha &lt;&lt; \"Empty? \" &lt;&lt; v.empty() &lt;&lt; \"\\n\";\n\n    v.reserve(5);              // Kapasite \u2265 5\n    for (int i = 1; i &lt;= 5; ++i) {\n        v.emplace_back(i * 10); // 10, 20, 30, 40, 50\n    }\n\n    std::cout &lt;&lt; \"Size: \"     &lt;&lt; v.size()     &lt;&lt; \"\\n\"; // 5\n    std::cout &lt;&lt; \"Capacity: \" &lt;&lt; v.capacity() &lt;&lt; \"\\n\";\n\n    v.resize(3);               // art\u0131k {10,20,30}\n    std::cout &lt;&lt; \"After resize: \";\n    for (auto x : v) std::cout &lt;&lt; x &lt;&lt; ' ';\n    std::cout &lt;&lt; \"\\n\";\n\n    v.push_back(99);           // {10,20,30,99}\n    std::cout &lt;&lt; \"Last element: \" &lt;&lt; v.back() &lt;&lt; \"\\n\";\n\n    v.pop_back();              // son eleman\u0131 kald\u0131r\u0131r\n    std::cout &lt;&lt; \"After pop: \";\n    for (auto x : v) std::cout &lt;&lt; x &lt;&lt; ' ';\n    std::cout &lt;&lt; \"\\n\";\n}\n</code></pre>"},{"location":"programming/cpp/#nesne-yonelimli-programlama-oop","title":"Nesne Y\u00f6nelimli Programlama (OOP)","text":"<ol> <li> <p>Eri\u015fim Belirleyicileri (Access Specifiers)</p> <ul> <li><code>public</code>: Her yerden eri\u015filebilir.</li> <li><code>protected</code>: Sadece o s\u0131n\u0131f i\u00e7inden ve ondan t\u00fcreyen alt s\u0131n\u0131flardan eri\u015filebilir.</li> <li><code>private</code>: Yaln\u0131zca tan\u0131mland\u0131\u011f\u0131 s\u0131n\u0131f\u0131n i\u00e7inden eri\u015filebilir. (Varsay\u0131lan eri\u015fim seviyesi s\u0131n\u0131f (class) i\u00e7inde private\u2019d\u0131r.) <pre><code>class A {\npublic:\n    void pub();      // her yerden\nprotected:\n    void prot();     // A ve alt s\u0131n\u0131flar\nprivate:\n    void priv();     // sadece A i\u00e7inde\n};\n</code></pre></li> </ul> </li> <li> <p>\u00d6zel \u00dcye Fonksiyonlar: <code>Default</code>, <code>Delete</code>, <code>Special Members</code></p> <ul> <li>C++ derleyici, s\u0131n\u0131f\u0131n\u0131z i\u00e7in e\u011fer belirtmezseniz a\u015fa\u011f\u0131dakileri \u201cdefault\u201d olarak olu\u015fturur:</li> <li>Varsay\u0131lan yap\u0131c\u0131 (default constructor)</li> <li>Y\u0131k\u0131c\u0131 (destructor)</li> <li>Kopya yap\u0131c\u0131 (copy constructor)</li> <li>Atama operat\u00f6r\u00fc (copy assignment operator) <pre><code>class MyClass {\npublic:\n    MyClass(int x) : value(x) {}     // \u00d6zel yap\u0131c\u0131\n    MyClass() = default;             // Derleyici yap\u0131c\u0131y\u0131 olu\u015fturursun\n    MyClass(const MyClass&amp;) = delete;           // Kopyalamay\u0131 yasakla\n    MyClass&amp; operator=(const MyClass&amp;) = delete; // Atamay\u0131 yasakla\n    ~MyClass() = default;            // Varsay\u0131lan y\u0131k\u0131c\u0131\nprivate:\n    int value;\n};\n</code></pre></li> </ul> </li> <li> <p><code>this</code> \u0130\u015faret\u00e7isi ve Ba\u015flat\u0131c\u0131 Listesi</p> <ul> <li><code>this</code>, i\u00e7inde bulundu\u011funuz nesnenin adresini g\u00f6steren i\u015faret\u00e7idir.</li> <li>\u00dcye ba\u015flatma listesi (<code>initializer list</code>) ile, yap\u0131c\u0131 g\u00f6vdesine girmeden \u00f6nce \u00fcye de\u011fi\u015fkenlerinizi atayabilirsiniz; b\u00f6ylece \u00e7ak\u0131\u015fan isimlerde de netlik sa\u011flan\u0131r: <pre><code>class Point {\nint x, y;\npublic:\nPoint(int x, int y) : x(x), y(y) {}  // soldaki x: \u00fcye, sa\u011fdaki: parametre\nPoint() : x(0), y(0) {}              // default yap\u0131c\u0131\n};\n</code></pre></li> </ul> </li> <li> <p>Kaps\u00fclleme (Encapsulation)</p> <ul> <li>S\u0131n\u0131f\u0131n i\u00e7 verilerini private tutup, public getter/ setter metotlar\u0131yla korumal\u0131 eri\u015fim sa\u011flars\u0131n\u0131z: <pre><code>class Rectangle {\nprivate:\n    double width, height;\npublic:\n    void setWidth(double w) { width = w; }\n    double getWidth() const { return width; }\n    // Benzer setter/getter\u2019lar height i\u00e7in de...\n};\n</code></pre></li> </ul> </li> <li> <p>Static \u00dcyeler</p> <ul> <li>static \u00fcye de\u011fi\u015fken ve fonksiyonlar s\u0131n\u0131fa ait, nesneye de\u011fil.</li> <li>static \u00fcye fonksiyonlar sadece ba\u015fka static \u00fcyelere eri\u015febilir.</li> <li>Tan\u0131m\u0131 s\u0131n\u0131f d\u0131\u015f\u0131na bir kez yap\u0131lmal\u0131d\u0131r: <pre><code>class Counter {\npublic:\n    static int count;\n    Counter() { ++count; }\n};\nint Counter::count = 0;  // s\u0131n\u0131f d\u0131\u015f\u0131 tan\u0131m\n\n// Kullan\u0131m:\nCounter a, b;\nstd::cout &lt;&lt; Counter::count;  // 2\n</code></pre></li> </ul> </li> <li> <p>Friend (Arkada\u015f) Bildirimi</p> <ul> <li><code>friend</code> fonksiyon veya s\u0131n\u0131flar, private/protected \u00fcyelere eri\u015febilir: <pre><code>class A {\n    int x = 42;\n    friend void printA(const A&amp;);\n};\n\nvoid printA(const A&amp; a) {\n    std::cout &lt;&lt; a.x &lt;&lt; \"\\n\";  // private x\u2019e eri\u015fim\n}\n</code></pre></li> </ul> </li> <li> <p>Operat\u00f6r A\u015f\u0131r\u0131 Y\u00fckleme (Operator Overloading)</p> <ul> <li>S\u0131n\u0131f\u0131n\u0131zda var olan operat\u00f6rleri \u00f6zelle\u015ftirebilirsiniz; ancak t\u00fcm operat\u00f6rler y\u00fcklenemez (sizeof, ::, .* vb. yasakt\u0131r). <pre><code>class Vec {\n    int x, y;\npublic:\n    Vec(int x, int y) : x(x), y(y) {}\n    Vec operator+(const Vec&amp; r) const { return Vec{x + r.x, y + r.y}; }\n    Vec&amp; operator+=(const Vec&amp; r) { x += r.x; y += r.y; return *this; }\n    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const Vec&amp; v) {\n        return os &lt;&lt; \"(\" &lt;&lt; v.x &lt;&lt; \", \" &lt;&lt; v.y &lt;&lt; \")\";\n    }\n};\n</code></pre></li> </ul> </li> <li> <p><code>const</code> \u00dcyeler ve mutable</p> <ul> <li><code>const</code> \u00fcye fonksiyonlar (void f() const) s\u0131n\u0131f verilerini de\u011fi\u015ftirmez.</li> <li><code>mutable</code> ile i\u015faretlenmi\u015f \u00fcye de\u011fi\u015fkenler, const fonksiyonlar i\u00e7inde bile de\u011fi\u015ftirilebilir: <pre><code>class Example {\n    mutable int cache;\npublic:\n    Example() : cache(0) {}\n    int getCache() const { return cache++; } // derleme hatas\u0131 yok\n};\n</code></pre></li> </ul> </li> <li> <p><code>explicit</code> Yap\u0131c\u0131lar</p> <ul> <li>Tek parametreli yap\u0131c\u0131lar i\u00e7in explicit koyarak istenmeyen otomat d\u00f6n\u00fc\u015f\u00fcmleri \u00f6nlersiniz: <pre><code>class Foo {\npublic:\n    explicit Foo(int x);\n};\n\nvoid bar(Foo f);\n\nbar(10);       // HATA: otomatik d\u00f6n\u00fc\u015f\u00fcm yasak\nbar(Foo(10));  // DO\u011eRU\n</code></pre></li> </ul> </li> <li> <p>Kal\u0131t\u0131m (Inheritance)</p> <ul> <li>Tekli kal\u0131t\u0131m: class Derived : access Base { \u2026 };</li> <li>Eri\u015fim: public, protected veya private (default private). <pre><code>class Base { public: void foo(); };\nclass Derived : public Base { /* Base::foo() kullanabilir */ };\n\nclass A { public: void f(); };\nclass B { public: void g(); };\nclass C : public A, public B { /* hem f() hem g() */ };\n</code></pre></li> <li>Virt\u00fcel kal\u0131t\u0131m (diamond problemini \u00e7\u00f6zer): <pre><code>class Device { /*\u2026*/ };\nclass Scanner : virtual public Device { /*\u2026*/ };\nclass Printer : virtual public Device { /*\u2026*/ };\nclass Copier  : public Scanner, public Printer { /*\u2026*/ };\n</code></pre></li> </ul> </li> <li> <p>Polimorfizm (\u00c7ok Bi\u00e7imlilik)</p> <ul> <li>virtual \u00fcye fonksiyonlar, \u00e7a\u011fr\u0131n\u0131n ger\u00e7ek nesne t\u00fcr\u00fcne g\u00f6re \u00e7\u00f6z\u00fclmesini sa\u011flar. <pre><code>class Base {\npublic:\n    virtual void work() { std::cout&lt;&lt;\"Base\\n\"; }\n    virtual ~Base() = default;  // sanal y\u0131k\u0131c\u0131\n};\n\nclass Derived : public Base {\npublic:\n    void work() override { std::cout&lt;&lt;\"Derived\\n\"; }\n};\n\nint main() {\n    Base* p = new Derived();\n    p-&gt;work();   // \u201cDerived\u201d yazd\u0131r\u0131r\n    delete p;\n}\n</code></pre></li> <li>Saf sanal fonksiyon (pure virtual) ile soyut s\u0131n\u0131f (interface) olu\u015fturabilirsiniz: <pre><code>class IShape {\npublic:\n    virtual double area() const = 0;  // saf sanal\n    virtual ~IShape() = default;\n};\n</code></pre></li> </ul> </li> </ol>"},{"location":"programming/cpp/#qt","title":"QT","text":""},{"location":"programming/cpp/#mesaj-yaps-event-loop","title":"Mesaj Yap\u0131s\u0131 (Event Loop)","text":"<ul> <li>Her Qt uygulamas\u0131n\u0131n veya thread\u2019in bir mesaj kuyru\u011fu (event queue) vard\u0131r.</li> <li>GUI, sisteme gelen olaylar\u0131 (t\u0131klama, klavye giri\u015fi vb.) mesaj formunda kuyru\u011fa iletir.</li> <li>Uygulama, <code>app.exec()</code> \u00e7a\u011fr\u0131s\u0131yla mesaj d\u00f6ng\u00fcs\u00fcn\u00fc ba\u015flat\u0131r ve mesaj yoksa bekler, mesaj geldik\u00e7e ilgili widget\u2019a iletir.</li> </ul> <pre><code>#include &lt;QApplication&gt;\n#include &lt;QWidget&gt;\n\nint main(int argc, char *argv[]) {\n    QApplication app(argc, argv);\n\n    QWidget window;\n    window.show();      // Pencereyi g\u00f6sterir\n\n    return app.exec();  // Mesaj d\u00f6ng\u00fcs\u00fcn\u00fc ba\u015flat\u0131r\n}\n</code></pre>"},{"location":"programming/cpp/#log-mesajlar","title":"Log Mesajlar\u0131","text":"<pre><code>#include &lt;QDebug&gt;\n\nqInfo()    &lt;&lt; \"Bilgi mesaj\u0131\";\nqDebug()   &lt;&lt; \"Debug mesaj\u0131\" &lt;&lt; 123;\nqWarning() &lt;&lt; \"Uyar\u0131 mesaj\u0131\";\nqCritical()&lt;&lt; \"Hata mesaj\u0131\";\nqFatal(\"Kritik hata, program sonlanacak\"); // \u00c7\u0131k\u0131\u015f\u0131 *abnormal* yapar\n</code></pre>"},{"location":"programming/cpp/#kod-tarz-ve-isaretleme","title":"Kod Tarz\u0131 ve \u0130saretleme","text":"<ul> <li>Qt kodlama stilinde s\u0131n\u0131f \u00fcye de\u011fi\u015fkenleri i\u00e7in genellikle m_ \u00f6neki kullan\u0131l\u0131r (Hungarian Notation\u2019\u0131n hafif bir uyarlamas\u0131): <pre><code>class Person {\nprivate:\n    int m_age;\n\npublic:\n    void setAge(int age) { m_age = age; }\n    int age() const      { return m_age; }\n};\n</code></pre></li> </ul> temel_fonksiyonlar.cpp<pre><code>connect(sender,   SIGNAL(valueChanged(int)),\n        receiver, SLOT(onValueChanged(int)));\n\ndisconnect(...);\n</code></pre> sinyal.cpp<pre><code>emit valueChanged(42);\n</code></pre>"},{"location":"programming/cpp/#temel-qt-snflar","title":"Temel Qt S\u0131n\u0131flar\u0131","text":"<ul> <li><code>QPushButton</code> Buton olu\u015fturur. Konum ve boyut ayar\u0131 i\u00e7in move(x,y) ve resize(w,h) kullan\u0131l\u0131r.</li> <li><code>QLabel</code> Metin veya HTML bi\u00e7imlendirmeli i\u00e7erik g\u00f6sterir</li> <li><code>QMessageBox</code> Bilgi, uyar\u0131 veya hata kutular\u0131</li> <li><code>QString</code> Unicode destekli metin s\u0131n\u0131f\u0131. Metotlar: <code>insert()</code>, <code>remove()</code>, <code>split()</code>, <code>toInt()</code>, <code>toDouble()</code> vb. <pre><code>QString s1(\"deneme\");\nQString s2(10, QChar('A'));      // \"AAAAAAAAAA\"\nbool empty = s1.isEmpty();       // \"\" ise true\nbool isNull = s1.isNull();       // null ise true\n</code></pre></li> <li><code>QChar</code> Tek bir Unicode karakter. Kontroller: <code>isLower()</code>, <code>isUpper()</code>, <code>isDigit()</code> d\u00f6n\u00fc\u015f\u00fcmler: <code>toLower()</code>,<code>toUpper()</code>.</li> <li><code>QVector&lt;T&gt;</code> / <code>QList&lt;T&gt;</code> / <code>QStringList</code> / <code>QSet&lt;T&gt;</code> / <code>QMap&lt;Key,Val&gt;</code> <pre><code>QVector&lt;QString&gt; vec(10, \"deneme\");\nQList&lt;int&gt;       list;\nlist &lt;&lt; 1 &lt;&lt; 2 &lt;&lt; 3;\nQStringList sl = {\"a\",\"b\",\"c\"};\nQSet&lt;int&gt;    set = {1,2,3};\nQMap&lt;QString,int&gt; ages;\nages.insert(\"Ali\", 30);\n</code></pre></li> <li><code>qDeleteAll(container)</code> \u0130\u015faret\u00e7i i\u00e7eren konteynerlerde i\u00e7indeki i\u015faret\u00e7ileri siler.</li> <li><code>QIODevice</code> Temel giri\u015f/\u00e7\u0131k\u0131\u015f arabirimi.</li> <li><code>QFile</code> Dosya i\u015flemleri. open(), readAll(), write().</li> <li><code>QFileInfo</code> Dosya/dizin bilgisi: fileName(), filePath(), isFile(), size(), suffix().</li> <li><code>QDir</code> Dizin y\u00f6netimi: cd(), cdUp(), mkdir(), exists().</li> <li><code>QTextStream</code> Metin ak\u0131\u015flar\u0131 i\u00e7in; Unicode destekli &lt;&lt; / &gt;&gt;.</li> <li><code>QDataStream</code> Seri (binary) ak\u0131\u015flar i\u00e7in, platformlar aras\u0131 uyumlu.</li> <li><code>QStorageInfo</code> Dosya sistemindeki disk/partition bilgileri.</li> <li><code>QLockFile</code> Dosya kilidi; \u00e7oklu i\u015flemde g\u00fcvenlik sa\u011flar.</li> <li><code>QSysInfo</code> Sistem bilgisi (OS tipi, mimari).</li> <li><code>QFileSystemWatcher</code> Dizin/dosya de\u011fi\u015fikliklerini izler.</li> <li><code>QProcess</code> Harici s\u00fcre\u00e7leri ba\u015flat\u0131r ve ileti\u015fim kurar.</li> <li><code>QSettings</code> Ayarlar\u0131 anahtar-de\u011fer olarak saklar (Windows registry veya ini/plist dosyalar\u0131).</li> <li><code>QByteArrayView</code> Salt okunur QByteArray g\u00f6r\u00fcn\u00fcm\u00fc; kopya olmadan eri\u015fim.</li> <li><code>QScopedPointer&lt;T&gt;</code> Tek sahipli i\u015faret\u00e7i. Kapsam sonland\u0131\u011f\u0131nda nesneyi siler.</li> <li><code>QSharedPointer&lt;T&gt;</code> Payla\u015f\u0131ml\u0131 i\u015faret\u00e7i, referans say\u0131ml\u0131. Son kullan\u0131c\u0131 silindi\u011finde nesneyi serbest b\u0131rak\u0131r.</li> <li><code>QHBoxLayout</code>, <code>QVBoxLayout</code>, <code>QGridLayout</code> Widget\u2019lar\u0131 yatay, dikey veya \u0131zgara d\u00fczeninde yerle\u015ftirir.</li> <li><code>QTimer</code> Belirli aral\u0131klarla sinyal (timeout()) yayar: <pre><code>QTimer *t = new QTimer(this);\nconnect(t, &amp;QTimer::timeout, this, &amp;MyClass::onTimeout);\nt-&gt;start(1000); // 1 saniye\n</code></pre></li> <li><code>QThread</code> Arka plan i\u015f par\u00e7ac\u0131\u011f\u0131 olu\u015fturur.</li> <li>\u00d6ncelik <code>HighestPriority</code>, <code>LowestPriority</code> vb.</li> <li><code>QMutex</code> Payla\u015f\u0131lan veri eri\u015fiminde kilitleme i\u00e7in lock(), unlock().</li> </ul>"},{"location":"programming/cpp/#qt-veri-tipleri","title":"Qt Veri Tipleri","text":"<pre><code>qint8,  quint8,  \nqint16, quint16,  \nqint32, quint32,  \nqint64, quint64,  \nqintptr, uintptr_t \n</code></pre>"},{"location":"programming/cpp/#c-qml-haberlesmesi","title":"C++ &amp; QML Haberle\u015fmesi","text":"<ol> <li> <p>Meta-Object System (MOC)</p> <ul> <li>Qt\u2019nin sinyal-slot, <code>Q_PROPERTY</code>, dinamik t\u00fcr bilgisi (RTTI) gibi uzant\u0131lar\u0131n\u0131 sa\u011flayan ara\u00e7t\u0131r.</li> <li>Her QObject t\u00fcrevi s\u0131n\u0131fa <code>Q_OBJECT</code> makrosu eklenmeli; ard\u0131ndan moc (Meta-Object Compiler) bu s\u0131n\u0131f i\u00e7in ek kod \u00fcretir.</li> <li>MOC \u00e7\u0131kt\u0131s\u0131 derleyiciye eklenerek sinyal-slot ba\u011flama, \u00f6z nitelik (property) kayd\u0131 vb. i\u015fler otomatik hale gelir.</li> <li>Qt\u2019nin sinyal-slot ve dinamik \u00f6zelli\u011fini sa\u011flayan arac\u0131.</li> <li>Her QObject t\u00fcrevindeki s\u0131n\u0131fa <code>Q_OBJECT</code> makrosunu ekleyerek MOC\u2019un i\u015flevselli\u011fini aktifle\u015ftirirsiniz.</li> <li>Qt\u2019nin sinyal-slot, Q_PROPERTY, dinamik meta-veri gibi \u00f6zellikleri formlar</li> <li>Q_OBJECT makrosunu ekledi\u011finiz s\u0131n\u0131flar i\u00e7in otomatik olarak ek kod \u00fcretir.</li> <li>S\u0131n\u0131f\u0131n\u0131za sinyal, slot, property tan\u0131mlar\u0131 ekledi\u011finizde, MOC bunlar\u0131 y\u00fcr\u00fctebilecek C++ kaynaklar\u0131n\u0131 olu\u015fturur.</li> <li>Derleyiciye eklenen bu MOC \u00e7\u0131kt\u0131s\u0131, Qt\u2019nin meta-object altyap\u0131s\u0131n\u0131n temelidir.</li> <li>MOC olmasayd\u0131, connect(), emit, Q_PROPERTY gibi \u00fcst seviye mekanizmalar \u00e7al\u0131\u015fmazd\u0131.</li> <li>Kaynak dosyan\u0131z\u0131 derlerken, Qt\u2019nin build sistemi otomatik olarak moc_MyClass.cpp gibi ek dosyalar \u00fcretir ve bu dosyalar da derlemeye dahil edilir. <pre><code>class MyClass : public QObject {\n    Q_OBJECT\n    // ...\n};\n</code></pre></li> </ul> </li> <li> <p>Signals &amp; Slots</p> <ul> <li>Signal: Nesnede bir olay ger\u00e7ekle\u015fti\u011finde duyurulan bildiridir; parametre ta\u015f\u0131yabilir.</li> <li>Slot: Bir sinyal tetiklendi\u011finde \u00e7a\u011fr\u0131lan normal C++ \u00fcye fonksiyonu veya lambda.</li> <li>Bu mekanizma, nesnelerin birbirinden habersiz \u00e7al\u0131\u015fmas\u0131n\u0131 (\u201cloosely coupled\u201d) sa\u011flar <pre><code>connect(sender, &amp;Sender::valueChanged, receiver, &amp;Receiver::onValueChanged);        // Function pointers (C++11+)\n\n//Derleme zaman\u0131nda de\u011fil, \u00e7al\u0131\u015fma zaman\u0131nda \u00e7\u00f6z\u00fcl\u00fcr; yaz\u0131m hatas\u0131 ancak runtime\u2019da fark edilir.\nconnect(sender, SIGNAL(valueChanged(int)), receiver, SLOT(onValueChanged(int)));    // SIGNAL/SLOT makrolar\u0131 (eski stil)\nconnect(button, &amp;QPushButton::clicked, this, [this]{ doSomething(); }); // Lambda / Functor\n\nemit valueChanged(m_value); // Signal tetiklemek i\u00e7in\n</code></pre></li> </ul> </li> <li> <p><code>Q_PROPERTY</code></p> <ul> <li>C++ taraf\u0131nda tan\u0131mlad\u0131\u011f\u0131n\u0131z bir \u00fcye de\u011fi\u015fkeni, getter/setter ve notifikasyon sinyaliyle QML\u2019e \u201cproperty\u201d olarak sunar</li> <li>READ: getter fonksiyonu</li> <li>WRITE: setter fonksiyonu</li> <li>NOTIFY: de\u011fer de\u011fi\u015fti\u011finde yay\u0131nlanacak sinyal <pre><code>class Model : public QObject {\n    Q_OBJECT\n    Q_PROPERTY(int value\n               READ  value\n               WRITE setValue\n               NOTIFY valueChanged)\npublic:\n    int  value() const { return m_value; }\n    void setValue(int v) {\n        if (m_value == v) return;\n        m_value = v;\n        emit valueChanged(m_value);\n    }\nsignals:\n    void valueChanged(int newValue);\nprivate:\n    int m_value{0};\n};\n</code></pre></li> </ul> </li> <li> <p>QQmlContext &amp; Context Properties</p> <ul> <li><code>setContextProperty(name, obj)</code> QML k\u00f6k ba\u011flam\u0131na (root context) name ad\u0131yla obj\u2019i yerle\u015ftirir.</li> <li>C++ nesnelerini do\u011frudan QML\u2019de isimle kullanmak i\u00e7in: main.cpp<pre><code>#include &lt;QQmlApplicationEngine&gt;\n#include &lt;QQmlContext&gt;\n\nQQmlApplicationEngine engine;\nModel *model = new Model(&amp;engine);\n\nengine.rootContext()-&gt;setContextProperty(\"appModel\", model);\nengine.load(QUrl(\"qrc:/main.qml\"));\n</code></pre> main.qml<pre><code>Text { text: appModel.value }\n</code></pre> <pre><code>QQuickViev view;\nQQmlContext* context = view.engine()-&gt;rootContext();\ncontext-&gt;setContextProperty(\"_aSize\", QSize(100,200));\ncontext-&gt;setContextProperty(\"_background\", QColor(Qt::red));\n</code></pre> <pre><code>import QtQuick 2.0\nRectangle{\n    width: _aSize.width\n    height: _aSize.height\n    color: _background\n}\n</code></pre></li> </ul> </li> <li> <p>qmlRegisterType &amp; Singleton</p> <ul> <li><code>qmlRegisterSingletonInstance(uri, ver, name, instance)</code> \u00d6nceden olu\u015fturdu\u011funuz tekil C++ nesnesini QML global singleton olarak sunar.</li> <li><code>qmlRegisterType&lt;T&gt;(uri, ver, name)</code> QML kodunda do\u011frudan import uri ver \u2192 name { } ile kullan\u0131lmas\u0131n\u0131 sa\u011flar.</li> <li><code>qmlRegisterUncreatableType</code> QML\u2019den yeni \u00f6rne\u011fi olu\u015fturulamayan, yaln\u0131zca sabit tan\u0131ml\u0131 \u00f6zelliklerine eri\u015filen C++ tipleri i\u00e7in kullan\u0131l\u0131r.</li> <li><code>qRegisterMetaType</code> Signal-slot ve QVariant arac\u0131l\u0131\u011f\u0131yla aktar\u0131lacak custom tipler i\u00e7in \u00e7al\u0131\u015fma zaman\u0131 tipi kayd\u0131 yapar. <pre><code>qmlRegisterType&lt;Model&gt;(\"MyApp\", 1, 0, \"Model\");\n\nauto settings = new Settings(&amp;engine);\nqmlRegisterSingletonInstance&lt;Settings&gt;(\"MyApp\",1,0,\"Settings\", settings);\nqmlRegisterUncreatableType&lt;Constants&gt;(\"MyApp.Utils\", 1, 0, \"Constants\", QStringLiteral(\"Only static enums/constants available\"));\n</code></pre> <pre><code>import MyApp 1.0\nModel { id: model; value: 10 }\n</code></pre></li> </ul> </li> <li> <p><code>QVariant</code> ve Metatype Sistemi</p> <ul> <li><code>QVariant</code> Her t\u00fcr\u00fc <code>(int, QString, QObject*, custom type\u2026)</code> saklayabilen kapsay\u0131c\u0131. QML-C++ aras\u0131 veri ta\u015f\u0131mada kritik.</li> <li>Custom C++ tiplerini QVariant i\u00e7inde kullanmak i\u00e7in: <pre><code>Q_DECLARE_METATYPE(MyClass)\nqRegisterMetaType&lt;MyClass&gt;(\"MyClass\");\n</code></pre></li> <li><code>Q_GADGET</code> QObject miras\u0131 gerektirmeyen, yine de <code>Q_PROPERTY</code> + QMetaType deste\u011fi sa\u011flayan s\u0131n\u0131flar i\u00e7in: <pre><code>class Point {\n    Q_GADGET\n    Q_PROPERTY(int x MEMBER m_x)\n    Q_PROPERTY(int y MEMBER m_y)\npublic:\n    int m_x{}, m_y{};\n};\nQ_DECLARE_METATYPE(Point)\n</code></pre></li> </ul> </li> <li> <p><code>Q_INVOKABLE</code></p> <ul> <li>QObject tabanl\u0131 s\u0131n\u0131fta, C++ fonksiyonunu QML\u2019den do\u011frudan \u00e7a\u011f\u0131rmak i\u00e7in: <pre><code>class Helper : public QObject {\n    Q_OBJECT\npublic:\n    Q_INVOKABLE QString greet(const QString &amp;name) {\n        return \"Hello, \" + name;\n    }\n};\n</code></pre> <pre><code>Text { text: Helper.greet(\"World\") }\n</code></pre></li> </ul> </li> <li> <p><code>QVariantList</code>, Model-View, <code>ListModel</code></p> <ul> <li><code>QVariantList</code>: QML\u2019de dizi (<code>ListModel</code>) olarak kolay kullan\u0131labilir.</li> <li>MVC mimarisi: <code>QAbstractListModel</code> t\u00fcreterek veri modelinizi tan\u0131mlay\u0131p QML\u2019de ListView/Repeater ile ba\u011flayabilirsiniz.</li> </ul> </li> <li> <p>Event Loop &amp; Mesaj D\u00f6ng\u00fcs\u00fc</p> <ul> <li><code>QCoreApplication::exec()</code> veya <code>QQmlApplicationEngine::exec()</code> ile ba\u015flat\u0131l\u0131r; GUI ve sinyal-slot etkile\u015fimini besleyen ana d\u00f6ng\u00fcd\u00fcr.</li> </ul> </li> <li> <p><code>qt_add_qml_module</code></p> <ul> <li>Qt 6+ projelerinde, QML kaynaklar\u0131n\u0131 ve bile\u015fenlerini mod\u00fcl halinde derlemek i\u00e7in kullan\u0131l\u0131r:</li> <li>URI: QML\u2019de import MyApp.Components 1.0 ile eri\u015filen ad.</li> <li>QML_FILES: Mod\u00fcl\u00fcn i\u00e7indeki .qml dosyalar\u0131.</li> <li>RESOURCE_PREFIX: QML\u2019den \u00e7a\u011f\u0131r\u0131rken kullan\u0131lacak yol.</li> </ul> </li> </ol>"},{"location":"programming/python/","title":"Python Programlama","text":"<ul> <li><code>#</code> Sat\u0131r i\u00e7i yorum ba\u015flat\u0131r.</li> <li><code>\\</code> Sat\u0131r sonu karakter ka\u00e7\u0131\u015f\u0131nda kullan\u0131l\u0131r (\u00f6rne\u011fin uzun sat\u0131r\u0131 b\u00f6lmek i\u00e7in).</li> <li><code>\\\\</code> Tek bir ters e\u011fik \u00e7izgi () \u00fcretir.</li> <li>Type casting <code>int(), float(), bool(), str(), complex()</code></li> <li>De\u011fi\u015fken atamalar\u0131 ve temel operat\u00f6rler <pre><code>a = b = 10            # Birden fazla de\u011fi\u015fkene ayn\u0131 anda de\u011fer atama\na, b, c = 10, 20, 30  # \u00c7oklu atama\na, b = b, a           # \u0130ki de\u011fi\u015fkenin yerini de\u011fi\u015ftirme\na ** 2                # Kuvvet alma (ayn\u0131 zamanda pow(a, 2)\n</code></pre></li> <li><code>:=</code> (walrus operat\u00f6r\u00fc) Ko\u015ful i\u00e7indeyken atama yapman\u0131z\u0131 sa\u011flar <pre><code>if (n := len(input(\"deger: \"))) &lt; 10:\nprint(f\"Girdi {n} karakterden k\u0131sa\")\n</code></pre></li> </ul>"},{"location":"programming/python/#yerlesik-fonksiyonlar","title":"Yerle\u015fik Fonksiyonlar","text":"<ul> <li>Say\u0131sal ve Matematiksel Fonksiyonlar</li> </ul> Fonksiyon A\u00e7\u0131klama <code>abs(x)</code> Mutlak de\u011fer <code>pow(x, y[, z])</code> xy veya modlu: (xy) % z <code>round(x[, n])</code> x\u2019i n ondal\u0131\u011fa yuvarlar (default n=0). <code>divmod(a, b)</code> <code>(a // b, a % b)</code> d\u00f6ner. <code>max(iterable, \u2026)</code> En b\u00fcy\u00fck eleman; \u00e7oklu arg ile de kullan\u0131labilir <code>min(iterable, \u2026)</code> En k\u00fc\u00e7\u00fck eleman <code>sum(iterable, start=0)</code> Toplam. start ba\u015flang\u0131\u00e7 de\u011feri. <code>range(start, stop[, step])</code> Say\u0131 dizisi \u00fcretir (start varsay\u0131lan 0, step varsay\u0131lan\u00a01) <ul> <li>D\u00f6n\u00fc\u015f\u00fcm Fonksiyonlar\u0131</li> </ul> Fonksiyon A\u00e7\u0131klama <code>int(x[, base])</code> x\u2019i tam say\u0131ya \u00e7evirir (base taban). <code>float(x)</code> x\u2019i ondal\u0131kl\u0131 say\u0131ya \u00e7evirir. <code>complex(re, im=0)</code> Karma\u015f\u0131k say\u0131 olu\u015fturur. <code>str(x)</code> x\u2019i string\u2019e d\u00f6n\u00fc\u015ft\u00fcr\u00fcr. <code>bytes(x, encoding)</code> x\u2019i bytes yapar. <code>bytearray(x, \u2026)</code> De\u011fi\u015ftirilebilir bytes. <code>bin(x), oct(x), hex(x)</code> x\u2019i s\u0131ras\u0131yla ikili, sekizli, onalt\u0131l\u0131ya \u00e7evirir. <code>chr(i), ord(c)</code> Kod noktas\u0131 \u2194 karakter. <ul> <li>Koleksiyon \u0130\u015flemleri</li> </ul> Fonksiyon A\u00e7\u0131klama <code>len(x)</code> Eleman say\u0131s\u0131 / uzunluk. <code>type(obj)</code> Nesnenin t\u00fcr\u00fc <code>sorted(iterable, key, reverse)</code> S\u0131ral\u0131 liste d\u00f6ner. <code>reversed(seq)</code> Ters y\u00f6nde iterator d\u00f6ner. <code>sum(iter, start)</code> Toplam (say\u0131sal iter) <code>min, max</code> en k\u00fc\u00e7\u00fck / en b\u00fcy\u00fck <code>all(iter)</code> T\u00fcm \u00f6\u011feler True ise True <code>any(iter)</code> En az bir \u00f6\u011fe True ise True <code>enumerate(iter, start=0)</code> (index, value) \u00e7iftlerinden iter olu\u015fturur <code>zip(*iterables)</code> Paralel iterasyon i\u00e7in tuple iterator <code>filter(func, iterable)</code> func(item) True ise \u00f6\u011feyi ge\u00e7irir <code>map(func, iterable)</code> func(item) d\u00f6nen yeni \u00f6\u011fe iteratoru <code>slice(start, stop, step)</code> Dilim objesi (obj[slice]) <pre><code># filter &amp; map \u00f6rne\u011fi\nl = [1,2,3,4,5,6]\nprint(list(filter(lambda x: x%2, l)))       # [1,3,5]\nprint(list(map(lambda x: x*x, l)))          # [1,4,9,16,25,36]\n\n# Direkt liste halinde g\u00f6rmek i\u00e7in:\nprint(*enumerate(\"istihza\"))\n# veya for d\u00f6ng\u00fcs\u00fcnde:\nfor idx, harf in enumerate(\"istihza\", start=1):\n    print(idx, harf)\n</code></pre> <ul> <li>Fonksiyonel ve Dinamik Fonksiyonlar</li> </ul> Fonksiyon A\u00e7\u0131klama <code>eval(expr)</code> expr string\u2019ini de\u011ferlendirir, sonu\u00e7 d\u00f6ner. <code>exec(code)</code> code string\u2019ini \u00e7al\u0131\u015ft\u0131r\u0131r, de\u011fer d\u00f6nd\u00fcrmez. <code>compile(...)</code> String\u2019i \u00e7al\u0131\u015ft\u0131r\u0131labilir koda \u00e7evirir. <code>globals()</code> Global isim alan\u0131 s\u00f6zl\u00fc\u011f\u00fcn\u00fc d\u00f6ner. <code>locals()</code> Mevcut local isim alan\u0131 s\u00f6zl\u00fc\u011f\u00fcn\u00fc d\u00f6ner. <code>callable(obj)</code> obj() \u00e7a\u011fr\u0131labilir mi? (True/False) <code>hash(obj)</code> obj hash de\u011ferini d\u00f6ner. <code>isinstance(obj, type)</code> T\u00fcr denetimi yapar. <code>issubclass(cls, classinfo)</code> Alt s\u0131n\u0131f sorgusu. <code>dir(obj)</code> obj\u2019in metot/\u00f6zellik adlar\u0131n\u0131 listeler. <code>vars([obj])</code> obj\u2019in dict \u00f6\u011fesini d\u00f6ner (varsay\u0131lan local/global). <code>help(obj)</code> Yard\u0131m sistemini a\u00e7ar, dok\u00fcmantasyonu g\u00f6sterir. <code>id(obj)</code> obj\u2019in benzersiz kimlik numaras\u0131 (bellek adresi). <code>input(prompt)</code> Kullan\u0131c\u0131dan girdi al\u0131r (string). <code>exit(), quit()</code> \u00c7\u0131k\u0131\u015f i\u015flevi (REPL i\u00e7in) <pre><code># globals/locals \u00f6rne\u011fi\nglobals()['z'] = 23\ndef fonk(a,b):\n    x = a+b\n    print(locals())\nfonk(10,20)\n# {'a':10, 'b':20, 'x':30}\n\nexec(\"print('Merhaba')\")\nresult = eval(\"10 + 20\")  # 30\n\nprint(dir(str))   # str s\u0131n\u0131f\u0131n\u0131n metotlar\u0131n\u0131 g\u00f6sterir\nprint(dir(10))    # int nesnesinin metotlar\u0131n\u0131 g\u00f6sterir\nprint(dir(\"\"))    # yine str metotlar\u0131n\u0131 listeler\n</code></pre> <ul> <li><code>print(*objs, sep=' ', end='\\n', file=sys.stdout, flush=False)</code><ul> <li><code>sep</code> \u00d6\u011feler aras\u0131 ay\u0131r\u0131c\u0131.</li> <li><code>end</code> Sonuna eklenen karakter.</li> <li><code>file</code> Yazma hedefi (dosya veya ba\u015fka bir \u00e7\u0131kt\u0131 ak\u0131\u015f\u0131).</li> <li><code>flush</code> An\u0131nda yazmay\u0131 zorlar.</li> </ul> </li> <li><code>input(prompt)</code> Kullan\u0131c\u0131dan girdi al\u0131r (her zaman string d\u00f6ner). <pre><code>with open(\"deneme.txt\", \"w\") as dosya:\n    ad = input(\"adiniz: \")\n    yas = int(input(\"yas: \"))\n    print(ad, yas, sep=\"-\", file=dosya, flush=True)\n</code></pre></li> <li> <p><code>*</code> operat\u00f6r\u00fc</p> <ul> <li>Fonksiyon \u00e7a\u011fr\u0131s\u0131nda <code>*iterable</code>: elemanlar\u0131 ayr\u0131 arg\u00fcman olarak ge\u00e7irir.</li> <li>String \u00e7arp\u0131m\u0131nda <code>\"deneme\" * 3 \u2011&gt; \"denemedenedeme\"</code>.</li> </ul> </li> <li> <p><code>replace(old, new, count=-1)</code> String i\u00e7inde old karakter(leri)ni new ile de\u011fi\u015ftirir. count parametresi, en fazla ka\u00e7 de\u011fi\u015fiklik yap\u0131laca\u011f\u0131n\u0131 s\u0131n\u0131rlar (default: t\u00fcm\u00fc).</p> </li> </ul> <pre><code>metin = \"denemedeneme\"\nprint(metin.replace(\"e\", \"E\"))      # \"dEnEmEdEnEmE\"\nprint(metin.replace(\"d\", \"\", 1))    # ilk 'd' silinir: \"enemedeneme\"\n</code></pre> <ul> <li><code>split(sep=None, maxsplit=-1)\u00a0/\u00a0rsplit(sep=None, maxsplit=-1)\u00a0/\u00a0splitlines(keepends=False)</code><ul> <li><code>split</code> Varsay\u0131lan bo\u015fluk/kayd\u0131rma karakterlerine g\u00f6re b\u00f6ler.</li> <li><code>rsplit</code> Sa\u011fdan ba\u015flayarak b\u00f6ler (\u00f6zellikle maxsplit kullan\u0131rken fark eder).</li> <li><code>splitlines</code> Sat\u0131r sonu karakterlerine g\u00f6re b\u00f6ler; keepends=True sat\u0131r sonlar\u0131n\u0131 korur. <pre><code>metin = \"a, b, c, d\"\nprint(metin.split())          # ['a,', 'b,', 'c,', 'd']\nprint(metin.split(\", \"))      # ['a', 'b', 'c', 'd']\nprint(metin.rsplit(\", \", 2))  # ['a, b', 'c', 'd']\nprint(\"line1\\nline2\".splitlines())        # ['line1', 'line2']\nprint(\"line1\\nline2\".splitlines(True))    # ['line1\\n', 'line2']\n</code></pre></li> </ul> </li> <li><code>strip(chars=None)\u00a0/\u00a0lstrip(chars=None)\u00a0/\u00a0rstrip(chars=None)</code> Ba\u015flang\u0131\u00e7 ve/veya sondaki bo\u015fluk ya da chars parametresindeki karakterleri siler. <pre><code>s = \"  abc  \"\nprint(s.strip())    # \"abc\"\nprint(s.lstrip())   # \"abc  \"\nprint(s.rstrip())   # \"  abc\"\n</code></pre></li> <li><code>join(iterable)</code> Iterable i\u00e7indeki t\u00fcm \u00f6\u011feleri birle\u015ftirip tek bir string d\u00f6ner; self araya konur. <pre><code>parts = [\"Py\", \"thon\", \"3\"]\nprint(\"\".join(parts))      # \"Python3\"\nprint(\"-\".join(parts))     # \"Py-thon-3\"\n</code></pre></li> <li><code>count(sub[, start[, end]])</code> Bir alt string\u2019in ka\u00e7 kez ge\u00e7ti\u011fini sayar. <pre><code>s = \"banana\"\nprint(s.count(\"a\"))          # 3\nprint(s.count(\"na\", 2, 5))   # 1\n</code></pre></li> <li><code>index(sub[, start[, end]])\u00a0/\u00a0rindex(sub[, start[, end]])</code> <ul> <li><code>index</code> \u0130lk e\u015fle\u015fmenin ba\u015flang\u0131\u00e7 indeksini d\u00f6ner, bulunamazsa ValueError.</li> <li><code>rindex</code> Sa\u011fdan aramaya ba\u015flar. <pre><code>s = \"abracadabra\"\nprint(s.index(\"ra\"))      # 2\nprint(s.rindex(\"ra\"))     # 9\n</code></pre></li> </ul> </li> <li><code>find(sub[, start[, end]])\u00a0/\u00a0rfind(sub[, start[, end]])</code><ul> <li><code>find</code> \u0130lk e\u015fle\u015fmenin indeksini d\u00f6ner; bulunamazsa -1.</li> <li><code>rfind</code> Sa\u011fdan arar. <pre><code>print(s.find(\"cad\"))   # 4\nprint(s.find(\"xyz\"))   # -1\n</code></pre></li> </ul> </li> <li><code>center(width[, fillchar])\u00a0/\u00a0ljust(width[, fillchar])\u00a0/\u00a0rjust(width[, fillchar])</code> Metni belirtilen geni\u015fli\u011fe ortalar veya sola/sa\u011fa yaslar; bo\u015fluk d\u0131\u015f\u0131 karakter i\u00e7in fillchar verebilirsiniz. <pre><code>print(\"hi\".center(6))           # '  hi  '\nprint(\"hi\".ljust(6, \"_\"))       # 'hi____'\nprint(\"hi\".rjust(6, \"-\"))       # '----hi'\n</code></pre></li> <li><code>zfill(width)</code> Sa\u011fa yaslayarak sol taraf\u0131 s\u0131f\u0131r ('0') ile doldurur. <pre><code>print(\"42\".zfill(5))    # '00042'\nprint(\"-42\".zfill(5))   # '-0042'\n</code></pre></li> <li><code>partition(sep)\u00a0/\u00a0rpartition(sep)</code> String\u2019i \u00fc\u00e7 par\u00e7aya ay\u0131r\u0131r: (\u00f6nce, sep, sonra). rpartition sa\u011fdan ba\u015flar. <pre><code>print(\"istanbul\".partition(\"an\"))   # ('ist', 'an', 'bul')\nprint(\"istanbul\".rpartition(\"an\"))  # ('ist', 'an', 'bul')\n</code></pre></li> <li><code>encode(encoding=\"utf-8\", errors=\"strict\")</code> String\u2019i belirtilen kodlamaya g\u00f6re byte dizisine \u00e7evirir. <pre><code>b = \"\u00e7ay\".encode(\"utf-8\")   # b'\\xc3\\xa7ay'\nb2 = \"abc\".encode(\"ascii\")  # b'abc'\n</code></pre></li> <li><code>str.maketrans(x, y=None, z=None)</code>\u00a0&amp;\u00a0<code>translate(table)</code><ul> <li><code>maketrans(x, y)</code> \u0130ki string\u2019in karakterlerini e\u015fle\u015ftiren bir d\u00f6n\u00fc\u015f\u00fcm tablosu (s\u00f6zl\u00fck) olu\u015fturur.</li> <li><code>maketrans('', '', z)</code> z i\u00e7indeki karakterleri kald\u0131rmak i\u00e7in tablo \u00fcretir.</li> <li><code>translate(table)</code> String\u2019i tabloya g\u00f6re d\u00f6n\u00fc\u015ft\u00fcr\u00fcr veya siler. <pre><code># T\u00fcrk\u00e7e karakter d\u00f6n\u00fc\u015f\u00fcm\u00fc \u00f6rne\u011fi\nkaynak = \"\u015f\u00e7\u00f6\u011f\u00fc\u0131\u015e\u00c7\u00d6\u011e\u00dc\u0130\"\nhedef  = \"sco guiSCOGUI\"\ntablo  = str.maketrans(kaynak, hedef)\nprint(\"\u00e7a\u011f\".translate(tablo))   # \"cag\"\n\n# Belirli karakterleri silme\nsil = \"ae\u0131io\u00f6u\u00fcAEI\u0130O\u00d6U\u00dc\"\ntablo2 = str.maketrans('', '', sil)\nprint(\"Merhaba D\u00fcnya\".translate(tablo2))  # \"Mrhb Dny\"\n</code></pre></li> </ul> </li> </ul>"},{"location":"programming/python/#bicimlendirme-eski-stil","title":"% Bi\u00e7imlendirme (Eski Stil)","text":"<ul> <li><code>%</code> i\u015faretinden sonra gelen format karakterleri (%d, %s, %f, %x vb.) C tarz\u0131 yer tutuculard\u0131r. <pre><code>print(\"Ad\u0131n\u0131z: %s, Soyad\u0131n\u0131z: %s\" % (\"Serkan\", \"Mazlum\"))\nprint(\"%%\")                # Y\u00fczde i\u015fareti yazd\u0131r\u0131r: %\n\nprint(\"%d\" % 13.5)         # 13\nprint(\"%05d\" % 20)         # '00020' \u2014 geni\u015flik 5, soldan s\u0131f\u0131rla doldur\nprint(\"%.5d\" % 23)         # '00023' \u2014 tam say\u0131 i\u00e7in 5 basamakl\u0131 g\u00f6sterim\n\nprint(\"%.5f\" % 3.1415926)  # '3.14159' \u2014 virg\u00fclden sonra 5 basamak\nprint(\"%15s\" % \"serkan\")   # '         serkan' \u2014 geni\u015flik 15, sa\u011fa yasla\nprint(\"%-15s\" % \"serkan\")  # 'serkan         ' \u2014 sola yasla\n\n# \u0130\u00e7 i\u00e7e metodlarla:\nprint(\"|%s|\" % \"deneme\".center(15))\nprint(\"|%s|\" % \"istihza\".rjust(15))\n</code></pre></li> </ul>"},{"location":"programming/python/#strformat-metodu","title":"str.format() Metodu","text":"<ul> <li><code>{}</code> yer tutucular\u0131n\u0131, format() i\u00e7indeki arg\u00fcmanlarla doldurur.</li> <li><code>{0}, {1}\u2026</code> say\u0131larla pozisyon belirtebilir; <code>{name}</code> ile isimli arg\u00fcman kullanabilirsiniz.</li> <li>\u0130ste\u011fe ba\u011fl\u0131 format belirtimleri i\u00e7in <code>:</code> kullan\u0131l\u0131r:<ul> <li>Hizalama: <code>{:&gt;10} (sa\u011fa)</code>, <code>{:^10} (ortala)</code>, <code>{:&lt;10} (sola)</code>.</li> <li>Tip ve hassasiyet: <code>{:d}, {:.2f}</code> vb.</li> <li>Binlik ay\u0131r\u0131c\u0131: <code>{:,}</code> (her 3 basamakta virg\u00fcl). <pre><code>template = \"\"\"\nAd\u0131n\u0131z : {}\nSoyad\u0131n\u0131z: {}\n\"\"\"\nprint(template.format(\"Serkan\", \"Mazlum\"))\n\n# Pozisyonlu parametre\ntemplate2 = \"Merhaba {1}, ben {0}\"\nprint(template2.format(\"Serkan\", \"Mazlum\"))\n\n# \u0130simli parametre\nprint(\"Kullan\u0131c\u0131: {user}\".format(user=\"serkan\"))\n\n# Binlik ay\u0131r\u0131c\u0131\nprint(\"{:,}\".format(1234567890))   # '1,234,567,890'\n\n# Hizalama ve precision\nprint(\"{:&gt;8}\".format(\"hi\"))        # '      hi'\nprint(\"{:.3f}\".format(2/3))        # '0.667'\n</code></pre></li> </ul> </li> </ul>"},{"location":"programming/python/#f-string-python-36","title":"F-String (Python\u00a03.6+)","text":"<ul> <li>Dizge ba\u015f\u0131na <code>f</code> eklenir, <code>{}</code> i\u00e7inde do\u011frudan de\u011fi\u015fken veya ifadeler yazabilirsiniz.</li> <li>Esnek: aritmetik, metod \u00e7a\u011fr\u0131s\u0131, format belirtimi do\u011frudan kullan\u0131labilir. <pre><code>isim, soyad = \"Serkan\", \"Mazlum\"\nsayi1, sayi2 = 10, 20\n\n# Basit kullan\u0131m\nprint(f\"Selam {isim} {soyad}, toplam = {sayi1 + sayi2}\")\n\n# Format ile precision ve hizalama\npi = 3.14159\nprint(f\"Pi \u2248 {pi:.2f}\")           # 'Pi \u2248 3.14'\nprint(f\"|{'deneme':^10}|\")        # '|  deneme  |'\n\n# Direkt ifadeler ve input\nprint(f\"Say\u0131lar\u0131n toplam\u0131 = {int(input('1. say\u0131: ')) + int(input('2. say\u0131: '))}\")\n</code></pre></li> </ul>"},{"location":"programming/python/#temel-veri-turleri","title":"Temel Veri T\u00fcrleri","text":"<ul> <li> <p>Immutable: De\u011fi\u015ftirilemez veri tipleri</p> <ul> <li>Say\u0131lar (int, float, complex)</li> <li>String (str)</li> <li>Demet (tuple)</li> </ul> </li> <li> <p>Mutable: De\u011fi\u015ftirilebilir veri tipleri</p> <ul> <li>Liste (list)</li> <li>S\u00f6zl\u00fck (dict)</li> <li>K\u00fcme (set)</li> </ul> </li> </ul>"},{"location":"programming/python/#say-sistemleri","title":"Say\u0131 Sistemleri","text":"<ul> <li>Python\u2019da say\u0131lar\u0131 farkl\u0131 tabanlarda g\u00f6r\u00fcnt\u00fclemek ve d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in yerle\u015fik fonksiyonlar ve bi\u00e7imlendirme \u00f6zellikleri vard\u0131r.</li> <li>abs(x)\u00a0\u2192 |x|</li> <li><code>max(iterable, key=\u2026) / min(\u2026)</code>\u00a0\u2192 En b\u00fcy\u00fck/k\u00fc\u00e7\u00fck \u00f6\u011fe (veya key fonksiyonuna g\u00f6re).</li> <li><code>sum(iterable, start=0)</code>\u00a0\u2192 Toplam.</li> <li><code>divmod(a, b)\u00a0\u2192 (a // b, a % b)</code> b\u00f6l\u00fcm ve kalan.</li> </ul> <p>Tabanda Yazd\u0131rma<pre><code>bases = [\"Onlu\", \"Sekizli\", \"Onalt\u0131l\u0131\", \"\u0130kili\"]\nprint((\" {:^9} \" * len(bases)).format(*bases))\n\nfor i in range(17):\n    # {:^9}    \u2192 Onlu\n    # {:^9o}   \u2192 Sekizli (oct)\n    # {:^9x}   \u2192 Onalt\u0131l\u0131 (hex, k\u00fc\u00e7\u00fck harf)\n    # {:^9b}   \u2192 \u0130kili (bin)\n    print(\"{0:^9} {0:^9o} {0:^9x} {0:^9b}\".format(i))\n\n   Onlu     Sekizli   Onalt\u0131l\u0131    \u0130kili   \n    0          0          0          0    \n    1          1          1          1    \n    2          2          2         10    \n   \u2026 \n   16         20         10       10000  \n</code></pre> - <code>bin(n)\u00a0\u2192 \"0b...\"</code> (ikili) - <code>oct(n)\u00a0\u2192 \"0o...\"</code> (sekizli) - <code>hex(n)\u00a0\u2192 \"0x...\"</code> (onalt\u0131l\u0131) - <code>int(s, base)\u00a0\u2192 string</code> belirtilen base taban\u0131ndan onluyla d\u00f6nd\u00fcr\u00fcr.</p> <pre><code>&gt;&gt;&gt; bin(14)               # '0b1110'\n&gt;&gt;&gt; oct(239)              # '0o357'\n&gt;&gt;&gt; hex(1234)             # '0x4d2'\n&gt;&gt;&gt; int('a12b', 16)       # 0xA12B ondal\u0131k: 41291\n</code></pre> <ul> <li><code>int, float, complex</code> temel say\u0131sal t\u00fcrler.</li> <li><code>float.as_integer_ratio()</code>\u00a0\u2192 Kesir olarak (<code>pay, payda</code>).</li> <li><code>float.is_integer()</code>\u00a0\u2192 Tam say\u0131 m\u0131? (\u00f6r. <code>12.0.is_integer() == True</code>)</li> <li><code>int.bit_length()</code>\u00a0\u2192 \u0130kili g\u00f6sterimde ka\u00e7 bit kullan\u0131l\u0131yor?</li> </ul> <pre><code>a = 12.0\nc = 12 + 4j\nn = 11\nprint(a.as_integer_ratio())   # (12, 1)\nprint(a.is_integer())         # True\nprint(c.real, c.imag)         # 12.0 4.0\nprint(n.bit_length())         # 4  (\u00e7\u00fcnk\u00fc 11 \u2192 '1011')\n\nnums = [2, -5, 7, 3]\nprint(abs(-5))               # 5\nprint(max(nums))             # 7\nprint(min(nums, key=abs))    # 2\nprint(sum(nums))             # 7\nprint(divmod(20, 6))         # (3, 2)\n</code></pre>"},{"location":"programming/python/#karakter-dizileri-strings","title":"Karakter Dizileri (Strings)","text":"<ul> <li>Tek ('\u2026'), \u00e7ift (\"\u2026\") veya \u00fc\u00e7l\u00fc t\u0131rnak ('''\u2026''' / \"\"\"\u2026\"\"\") kullan\u0131labilir.</li> <li>\u00dc\u00e7l\u00fc t\u0131rnak \u00e7ok sat\u0131rl\u0131 metin tan\u0131m\u0131 i\u00e7indir.</li> <li>\u0130\u00e7 i\u00e7e t\u0131rnak gerekirse di\u011fer tip t\u0131rnak kullan\u0131l\u0131r veya ka\u00e7\u0131\u015f karakteri (<code>\\\", \\'</code>) kullan\u0131l\u0131r.</li> </ul> <pre><code>multiline = \"\"\"\nHello\nWorld\n\"\"\"\nprint('He said \"Hello\"')\nprint(\"It's OK\")\n</code></pre> <ul> <li><code>str</code> (Immutable)</li> <li><code>expandtabs(tabsize)</code> Sekme (<code>\\t</code>) karakterlerini belirtilen geni\u015flikte bo\u015fluklara \u00e7evirir. <code>\"a\\tb\".expandtabs(4)  # 'a   b'</code></li> <li><code>help(str)</code> str s\u0131n\u0131f\u0131n\u0131n metotlar\u0131n\u0131 g\u00f6sterir</li> </ul> <p>\u0130ndeksleme ve Dilimleme<pre><code>kelime = \"ali\"\nkelime[0]       # 'a'\nkelime[-1]      # 'i' (son eleman)\nkelime[:2]      # 'al' (ba\u015flang\u0131\u00e7tan 2. karaktere kadar, 2 dahil de\u011fil)\nkelime[1:]      # 'li' (1. karakterden sona kadar)\nkelime[::-1]    # 'ila' (ters \u00e7evirme)\nkelime[::2]     # 'ai' (iki karakterde bir atlayarak)\n\"A\" + kelime[1:]# 'Ali' (ilk harfi de\u011fi\u015ftirerek)\n</code></pre> B\u00fcy\u00fck / K\u00fc\u00e7\u00fck Harf D\u00f6n\u00fc\u015f\u00fcmleri<pre><code>s = \"python Programlama\"\ns.capitalize()   # 'Python programlama' \u2013 sadece ilk harf\ns.title()        # 'Python Programlama' \u2013 her kelimenin ilk harfi\ns.upper()        # 'PYTHON PROGRAMLAMA'\ns.lower()        # 'python programlama'\ns.casefold()     # 'python programlama' \u2013 dil ba\u011f\u0131ms\u0131z, daha agresif k\u00fc\u00e7\u00fcltme\ns.swapcase()     # 'PYTHON pROGRAMLAMA'\n</code></pre> Sorgulamalar<pre><code>s.islower()     # t\u00fcm\u00fc k\u00fc\u00e7\u00fck m\u00fc?\ns.isupper()     # t\u00fcm\u00fc b\u00fcy\u00fck m\u00fc?\ns.startswith(\"py\")  # ba\u015fl\u0131yor mu?\ns.endswith(\"ma\")    # bitiyor mu?\ns.isalpha()     # yaln\u0131zca harflerden mi?\ns.isdigit()     # yaln\u0131zca rakamlardan m\u0131?\ns.isalnum()     # harf veya rakam m\u0131?\ns.isdecimal()   # ondal\u0131k rakam m\u0131?\ns.isnumeric()   # say\u0131sal karakter mi?\ns.isidentifier()# ge\u00e7erli Python tan\u0131mlay\u0131c\u0131 m\u0131?\ns.isspace()     # yaln\u0131zca bo\u015fluk karakterlerinden mi?\ns.isprintable() # yazd\u0131r\u0131labilir karakterler mi?\n</code></pre> Ters \u00c7evirme ve S\u0131ralama<pre><code>a = \"ali\"\n# reversed: iterator d\u00f6ner\nprint(\"\".join(reversed(a)))  # 'ila'\n\n# sorted: liste d\u00f6ner\nprint(sorted(\"deneme\"))      # ['a','d','e','e','m','n']\n</code></pre> T\u00fcrk\u00e7e karakter s\u0131ralama i\u00e7in locale kullan\u0131n<pre><code>import locale\nlocale.setlocale(locale.LC_ALL, \"tr_TR.UTF-8\")  # sistemde y\u00fckl\u00fc olmal\u0131\nprint(sorted(\"\u00e7i\u00e7ek\", key=locale.strxfrm))\n</code></pre></p>"},{"location":"programming/python/#liste-list","title":"Liste (list)","text":"<ul> <li>K\u00f6\u015feli parantez i\u00e7inde tan\u0131mlan\u0131r, \u00f6\u011feler , ile ayr\u0131l\u0131r <code>liste = [1, \"iki\", 3.0, True]</code></li> <li>Mutable (de\u011fi\u015ftirilebilir): Ayn\u0131 liste \u00fczerinde ekleme, silme, de\u011fi\u015ftirme yapabilirsiniz.</li> <li>Tekrar eden elemanlar olabilir.</li> <li>Eleman say\u0131s\u0131n\u0131 len(liste) ile al\u0131rs\u0131n\u0131z.</li> <li>\u0130\u00e7 i\u00e7e listeler desteklenir</li> <li><code>list()</code> yap\u0131c\u0131yla da olu\u015fturabilirsiniz</li> <li><code>append(x)</code> Sonuna x ekler.</li> <li><code>extend(iterable)</code> T\u00fcm \u00f6\u011feleri ekler (tek tek).</li> <li><code>insert(i, x)</code> \u0130ndeks i konumuna x ekler.</li> <li><code>remove(x)</code> \u0130lk e\u015fle\u015fen \u00f6\u011feyi siler; bulunmazsa ValueError.</li> <li><code>pop([i])</code> \u0130ndeks ideki \u00f6\u011feyi d\u00f6ner ve siler (varsay\u0131lan son \u00f6\u011fe).</li> <li><code>clear()</code> T\u00fcm \u00f6\u011feleri siler ([] olur).</li> <li><code>index(x[, start[, end]])</code> \u0130lk buldu\u011fu x\u2019in indeksini d\u00f6ner; bulunmazsa ValueError.</li> <li><code>count(x)</code> x\u2019in listede ka\u00e7 kez ge\u00e7ti\u011fini d\u00f6ner.</li> <li><code>sort(key=None, reverse=False)</code> Yerinde s\u0131ralar.</li> <li><code>reverse()</code> Yerinde ters \u00e7evirir.</li> <li><code>copy()</code> Y\u00fczeysel kopya d\u00f6ner (orijinal listeden ba\u011f\u0131ms\u0131z).</li> <li><code>b = a \u2192 referans</code> ayn\u0131 listeyi i\u015faret eder; birinde de\u011fi\u015fiklik di\u011ferini etkiler.</li> <li><code>b = a[:]</code> veya <code>b = list(a)</code> veya <code>b = a.copy() \u2192 yeni liste</code> ba\u011f\u0131ms\u0131z kopya.</li> </ul> <pre><code>my_list = [1, 2, 2, 3, 'a', 'b', 'c']\n\nmatris = [[1,2,3], [4,5,6], [7,8,9]]\nprint(matris[1][2])  # 6\n\nbos = list()                 # []\nchars = list(\"python\")       # ['p','y','t','h','o','n']\nnums  = list(range(5))       # [0,1,2,3,4]\n\na = [3,1,4]\na.append(2)           # [3,1,4,2]\na.extend([5,6])       # [3,1,4,2,5,6]\na.insert(1, 99)       # [3,99,1,4,2,5,6]\na.remove(99)          # [3,1,4,2,5,6]\nx = a.pop()           # x=6, a=[3,1,4,2,5]\na.sort()              # [1,2,3,4,5]\na.reverse()           # [5,4,3,2,1]\nb = a.copy()          # b ba\u011f\u0131ms\u0131z kopya\n</code></pre> \u00d6\u011felere Eri\u015fim ve Dilimleme<pre><code>meyveler = [\"elma\",\"armut\",\"\u00e7ilek\",\"kiraz\"]\nprint(meyveler[0])     # 'elma'\nprint(meyveler[-1])    # 'kiraz'\nprint(meyveler[1:3])   # ['armut','\u00e7ilek']\nprint(meyveler[:2])    # ['elma','armut']\nprint(meyveler[::2])   # ['elma','\u00e7ilek']\n</code></pre> List Comprehensions<pre><code># 0\u2013999 aras\u0131 say\u0131lar\nliste = [i for i in range(1000)]\n# \u00e7ift say\u0131lar\neven = [i for i in range(1000) if i % 2 == 0]\n# i\u00e7 i\u00e7e a\u00e7ma\nmatris = [[1,2],[3,4]]\nduz = [x for row in matris for x in row]  # [1,2,3,4]\n</code></pre>"},{"location":"programming/python/#demet-tuple","title":"Demet (tuple)","text":"<ul> <li>Parantez i\u00e7inde veya virg\u00fclle olu\u015fturulur</li> <li>Immutable: \u0130\u00e7erik de\u011fi\u015ftirilemez; yeni bir atama eski nesneden farkl\u0131 kimlik \u00fcretir.</li> <li>Eri\u015fim, dilimleme listelerle ayn\u0131 \u015fekilde</li> <li>Tekrar eden elemanlar olabilir.</li> <li>Tek \u00f6\u011feli demet: sonuna virg\u00fcl koyun.</li> <li>Y\u00fczeysel kopya gerekmez; atama hep referans davran\u0131\u015f\u0131 verir.</li> <li><code>count(x)</code> x\u2019in ka\u00e7 kez ge\u00e7ti\u011fini sayar.</li> <li><code>index(x)</code> \u0130lk x\u2019in indeksini d\u00f6ner; bulunmazsa <code>ValueError</code>.</li> </ul> <pre><code>t = (1, 2, 3)\nt2 = 4, 5, 6\n\nprint(t[0], t[-1], t[1:3])\nsingle = (42,) # Tek elemanl\u0131 Demet\n\nt = (1,2,1,3)\nprint(t.count(1))   # 2\nprint(t.index(3))   # 3\n</code></pre>"},{"location":"programming/python/#sozluk-dict","title":"S\u00f6zl\u00fck (dict)","text":"<ul> <li>Anahtarlar immutable ve benzersiz olmal\u0131; de\u011ferler mutable olabilir.</li> <li>S\u00fcsl\u00fc parantezle olu\u015fturulur: <code>{}</code>.</li> <li>Key\u00a0\u2013\u00a0Value \u00e7iftlerinden olu\u015fur</li> <li>De\u011fi\u015fik veri tipleri kullan\u0131labilir:<ul> <li>Key olarak immutable tipler (str, int, tuple vs.).</li> <li>Value olarak her t\u00fcr (list, dict, ba\u015fka dict vs.).</li> </ul> </li> <li>Yeni \u00f6\u011fe eklemek/g\u00fcncellemek:</li> <li><code>keys()</code> T\u00fcm anahtarlar\u0131 d\u00f6ner.</li> <li><code>values()</code> T\u00fcm de\u011ferleri d\u00f6ner.</li> <li><code>items()</code> (key, value) \u00e7iftlerini d\u00f6ner.</li> <li><code>get(key, default=None)</code> Key yoksa default d\u00f6ner, hata vermez.</li> <li><code>pop(key, default=\u2026)</code> Key\u2019i silip de\u011ferini d\u00f6ner; yoksa default veya KeyError.</li> <li><code>popitem()</code> Son eklenen \u00e7ifti silip d\u00f6ner.</li> <li><code>setdefault(key, default=None)</code> Key yoksa ekler ve default d\u00f6ner; varsa mevcut de\u011feri d\u00f6ner.</li> <li><code>update(other_dict)</code> Ba\u015fka bir s\u00f6zl\u00fc\u011f\u00fcn i\u00e7eri\u011fini ekler/g\u00fcnceller.</li> <li><code>clear()</code> T\u00fcm \u00f6\u011feleri siler ({}).</li> <li><code>copy()</code> Y\u00fczeysel kopya olu\u015fturur.</li> <li><code>fromkeys()</code> Belirli anahtarlarla hepsi ayn\u0131 de\u011fere sahip yeni bir s\u00f6zl\u00fck olu\u015fturur:</li> </ul> <pre><code>sozluk = {\n    \"kitap\"      : \"book\",\n    \"bilgisayar\" : \"computer\",\n    \"dil\"        : \"language\"\n}\n\nsozluk[\"Ahmet\"] = \"Adana\"\n\nsozluk = {\"a\": 1, \"b\": 2}\nprint(list(sozluk.keys()))    # ['a', 'b']\nprint(sozluk.get(\"c\", 0))     # 0\nsozluk.update({\"b\": 3, \"c\": 4})\nprint(sozluk)                 # {'a':1, 'b':3, 'c':4}\n</code></pre> \u0130\u00e7 i\u00e7e s\u00f6zl\u00fcklere eri\u015fim<pre><code>kisiler = {\n    \"Ahmet\": {\"Sehir\": \"Istanbul\", \"Meslek\": \"Ogretmen\"},\n    \"Mehmet\": {\"Sehir\": \"Adana\", \"Meslek\": \"Muhendis\"}\n}\nprint(kisiler[\"Ahmet\"][\"Meslek\"])  # \u00d6gretmen\n\nkeys = ['a', 'b', 'c']\nsozluk = dict.fromkeys(keys, 0)\n# {'a':0, 'b':0, 'c':0}\n</code></pre>"},{"location":"programming/python/#kume-set","title":"K\u00fcme (set)","text":"<ul> <li><code>set()</code> ile veya <code>{}</code> i\u00e7inde virg\u00fclle olu\u015fturulur.</li> <li>Mutable (de\u011fi\u015ftirilebilir), s\u0131ras\u0131z, benzersiz elemanlar.</li> <li>Immutable set: <code>frozenset()</code> olu\u015fturulduktan sonra de\u011fi\u015ftirilemez.</li> <li><code>add(x)</code> Eleman ekler.</li> <li><code>update(iterable)</code> Birden fazla eleman\u0131 ekler.</li> <li><code>remove(x)</code> Eleman siler; yoksa KeyError.</li> <li><code>discard(x)</code> Eleman siler; yoksa hata vermez.</li> <li><code>pop()</code> Rastgele bir eleman\u0131 siler ve d\u00f6ner.</li> <li><code>clear()</code> T\u00fcm elemanlar\u0131 siler.</li> <li><code>copy()</code> Y\u00fczeysel kopya d\u00f6ner.</li> <li><code>union(other)</code>\u00a0/\u00a0<code>|</code>: Birle\u015fim.</li> <li><code>intersection(other)</code>\u00a0/\u00a0<code>&amp;</code>: Kesi\u015fim.</li> <li><code>difference(other)</code>\u00a0/\u00a0<code>-</code>: Fark.</li> <li><code>symmetric_difference(other)</code>\u00a0/\u00a0<code>^</code>: Kar\u015f\u0131l\u0131kl\u0131 fark.</li> <li><code>_update</code> versiyonlar\u0131 (<code>intersection_update</code>, vb.) sonucu ayn\u0131 k\u00fcmeye uygular.</li> <li>Sorgular:<ul> <li><code>isdisjoint(other)</code> Ortak eleman yok mu?</li> <li><code>issubset(other)</code> Alt k\u00fcme mi?</li> <li><code>issuperset(other)</code> \u00dcst k\u00fcme mi?</li> </ul> </li> </ul> <pre><code>my_set = {1, 2, 3, 'a', 'b', 'c'}\ns = set([1,2,3])\nt = {\"elma\", \"armut\", \"kiraz\"}\nf = frozenset([1,2,3])\n\ns = {1,2,3}\ns.add(4)           # {1,2,3,4}\ns.update([5,6])    # {1,2,3,4,5,6}\ns.discard(2)       # {1,3,4,5,6}\ns.remove(3)        # {1,4,5,6}\n\na = {1,2,3,4}\nb = {3,4,5,6}\n\nprint(a | b)   # {1,2,3,4,5,6}\nprint(a &amp; b)   # {3,4}\nprint(a - b)   # {1,2}\nprint(a ^ b)   # {1,2,5,6}\nprint(a.issubset({1,2,3,4,5}))  # True\n</code></pre>"},{"location":"programming/python/#donguler-ve-kosullar","title":"D\u00f6ng\u00fcler ve Ko\u015fullar","text":"<ul> <li>if\u00a0\u2013\u00a0elif\u00a0\u2013\u00a0else: Ko\u015fullar\u0131 <code>and</code>\u00a0ve\u00a0<code>or</code> ile birle\u015ftirebilir, <code>not</code> ile tersleyebilirsiniz. <code>in</code> \u00f6\u011fenin i\u00e7inde olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. <code>is</code> kimlik (ayn\u0131 nesneye i\u015faret etme) kontrol\u00fc yapar.</li> </ul> <pre><code>n = 42\n\nif (n &gt; 10) and (n &lt; 100):\n    print(\"10 ile 100 aras\u0131nda\")\nelif (n &gt; 100) or (n &lt; 0):\n    print(\"0\u2019dan k\u00fc\u00e7\u00fck veya 100\u2019den b\u00fcy\u00fck\")\nelif not (n == 42):\n    print(\"Yanl\u0131\u015f say\u0131\")\nelse:\n    print(\"Di\u011fer durumlar\")\n\n# 'in' \u00f6rne\u011fi\nif 'a' in \"ali\":\n    print(\"\u2018a\u2019 var\")\n\n# 'is' \u00f6rne\u011fi (\u00f6zellikle tekil nesneler i\u00e7in, \u00f6rn. None)\na = None\nif a is None:\n    print(\"a h\u00e2l\u00e2 None\")\n</code></pre> <ul> <li>for\u00a0\u2013\u00a0while D\u00f6ng\u00fc olu\u015fturmak i\u00e7in kullan\u0131l\u0131r. <code>pass\u00a0\u2013\u00a0break\u00a0\u2013\u00a0continue</code> <ul> <li>pass: G\u00f6vdesi bo\u015f bir blok b\u0131rakmak i\u00e7in (ileride doldurmak \u00fczere).</li> <li>break: D\u00f6ng\u00fcy\u00fc tamamen sonland\u0131r\u0131r.</li> <li>continue: D\u00f6ng\u00fcn\u00fcn bir sonraki yinelemesine atla</li> </ul> </li> </ul> <pre><code># for d\u00f6ng\u00fcs\u00fc\nfor harf in \"deneme\":\n    print(harf)\n\n# enumerate ile indeksli yineleme\nfor idx, harf in enumerate(\"deneme\"):\n    print(idx, harf)\n\n# while d\u00f6ng\u00fcs\u00fc\ni = 0\nwhile i &lt; 3:\n    print(i)\n    i += 1\n</code></pre> <ul> <li><code>for - while</code> d\u00f6ng\u00fcs\u00fcne bir <code>else</code> blo\u011fu ekleyebilirsiniz. D\u00f6ng\u00fc normal sonlan\u0131rsa (yani <code>break</code> ile kesilmezse) else \u00e7al\u0131\u015f\u0131r:</li> </ul> <pre><code>metin = \"Bu yAz\u0131dA k\u00fc\u00e7\u00fck a yok.\"\nfor harf in metin:\n    if harf == 'a':\n        print(\"\u2018a\u2019 bulundu.\")\n        break\nelse:\n    print(\"\u2018a\u2019 bulunmad\u0131.\")\n</code></pre>"},{"location":"programming/python/#hata-yakalama-ve-istisnalar","title":"Hata Yakalama ve \u0130stisnalar","text":"<ul> <li>try\u00a0\u2013\u00a0except <code>try</code> blo\u011fu i\u00e7indeki kod \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r; e\u011fer tan\u0131ml\u0131 bir istisna (Exception) f\u0131rlat\u0131l\u0131rsa uygun <code>except</code> blo\u011fu devreye girer. Birden fazla <code>except</code> ile farkl\u0131 hata t\u00fcrlerini ayr\u0131 i\u015fleyebilirsiniz. Hi\u00e7bir t\u00fcr belirtilmeden yaz\u0131lan <code>except</code> t\u00fcm istisnalar\u0131 yakalar (genellikle \u00f6nerilmez).</li> </ul> <pre><code>try:\n    deger = input(\"Say\u0131: \")\n    deger_int = int(deger)\nexcept ValueError:\n    print(\"Ge\u00e7erli bir say\u0131 de\u011fil.\")\nexcept ZeroDivisionError:\n    print(\"S\u0131f\u0131ra b\u00f6lme hatas\u0131.\")\nexcept (TypeError, NameError) as hata:\n    print(\"Ba\u015fka bir hata:\", hata)\nelse:\n    print(\"Ba\u015far\u0131l\u0131 d\u00f6n\u00fc\u015f\u00fcm:\", deger_int)\nfinally:\n    print(\"Bu blok her zaman \u00e7al\u0131\u015f\u0131r.\")\n</code></pre> <ul> <li>raise Kendi hata durumlar\u0131n\u0131z\u0131 f\u0131rlatmak i\u00e7in:</li> </ul> <pre><code>deger = int(input(\"De\u011fer: \"))\nif deger == 10:\n    raise Exception(\"10 say\u0131s\u0131 yasakt\u0131r!\")\n</code></pre> <ul> <li>assert Bir ko\u015fulun do\u011fru oldu\u011funu do\u011frulamak i\u00e7in. Yanl\u0131\u015fsa <code>AssertionError</code> f\u0131rlat\u0131r:</li> </ul> <pre><code>giris = input(\"Ad\u0131n\u0131z: \")\nassert giris, \"\u0130sim bo\u015f olamaz!\"\nprint(\"Ho\u015f geldiniz,\", giris)\n</code></pre>"},{"location":"programming/python/#temel-dosya-islemleri","title":"Temel Dosya \u0130\u015flemleri","text":"<ul> <li>open(path, mode, encoding=None) ile dosya a\u00e7\u0131l\u0131r.</li> <li> <p>mode:</p> <ul> <li><code>'r'</code>\u00a0\u2013 okuma (varsay\u0131lan)</li> <li><code>'w'</code>\u00a0\u2013 yazma (varsa \u00fczerine yazar, yoksa olu\u015fturur)</li> <li><code>'a'</code>\u00a0\u2013 ekleme (varsa sona ekler, yoksa olu\u015fturur)</li> <li>b eklenirse ikili mod (\u00f6rn. <code>'rb'</code>, <code>'wb'</code>)</li> <li> <ul> <li>eklenirse hem okuma hem yazma (\u00f6rn. <code>'r+'</code>, <code>'w+'</code>)</li> </ul> </li> </ul> </li> <li> <p>Windows yollar\u0131nda ters e\u011fik \u00e7izgi () ka\u00e7\u0131\u015f karakteri oldu\u011fundan:</p> </li> </ul> <pre><code># Ya \u00e7ift ters e\u011fik kullan\u0131n:\nf = open(\"C:\\\\klasor\\\\dosya.txt\", \"r\")\n# Ya ham string (raw) ile:\nf = open(r\"C:\\klasor\\dosya.txt\", \"r\")\n</code></pre> Manuel a\u00e7ma-kapatma<pre><code>try:\n    f = open(\"veri.txt\", \"r\", encoding=\"utf-8\")\n    i\u00e7erik = f.read()\n    # ... i\u015flemler ...\nexcept IOError:\n    print(\"Dosya a\u00e7\u0131lamad\u0131 veya okuma hatas\u0131!\")\nfinally:\n    f.close()\n</code></pre> <ul> <li>Context manager (with) kulland\u0131\u011f\u0131n\u0131zda <code>close()</code> otomatik \u00e7a\u011fr\u0131l\u0131r:</li> </ul> <pre><code>with open(\"veri.txt\", \"r\", encoding=\"utf-8\") as f:\n    for sat\u0131r in f:\n        print(sat\u0131r.rstrip(\"\\n\"))\n# with blo\u011fu bitince f.close() otomatik yap\u0131l\u0131r\n</code></pre> <ul> <li><code>f.read(size=-1)</code> T\u00fcm i\u00e7eri\u011fi (size=-1) veya en fazla size byte/karakter okur.</li> <li><code>f.readline()</code> Bir sat\u0131r okur (sat\u0131r sonunu da i\u00e7erir).</li> <li><code>f.readlines()</code> T\u00fcm sat\u0131rlar\u0131 liste olarak d\u00f6ner.</li> <li><code>f.write(text) / f.writelines(iterable)</code> Metni yazar. write tek string, writelines birden \u00e7ok sat\u0131r i\u00e7eren iterable al\u0131r.</li> <li><code>print(..., file=f, flush=True)</code> print fonksiyonu ile do\u011frudan dosyaya yazabilirsiniz.</li> </ul> <pre><code>with open(\"cikti.txt\", \"w\", encoding=\"utf-8\") as f:\n    f.write(\"Merhaba\\n\")\n    print(\"Dosyaya ek sat\u0131r\", file=f, flush=True)\n</code></pre> <ul> <li><code>f.seek(offset, whence=0)</code> <ul> <li>\u0130mleci offset byte ileri/geri ta\u015f\u0131r.<ul> <li>whence=0: ba\u015ftan (seek(0) ba\u015fa d\u00f6n).</li> <li>whence=1: mevcut pozisyondan.</li> <li>whence=2: sondan.</li> </ul> </li> </ul> </li> <li><code>f.tell()</code> Ge\u00e7erli imle\u00e7 pozisyonunu byte cinsinden d\u00f6ner.</li> <li><code>f.readable(), f.writable(), f.seekable()</code> \u0130zin sorgular\u0131 (bool).</li> <li><code>f.truncate(size=None)</code> Dosyay\u0131 <code>size</code> byte\u2019a kadar k\u0131salt\u0131r (default: mevcut pozisyona kadar).</li> <li><code>f.mode</code>\u00a0\u2192 a\u00e7\u0131l\u0131\u015f modu ('r', 'wb', vb.)</li> <li><code>f.name</code>\u00a0\u2192 dosya ad\u0131 veya yol</li> <li><code>f.encoding</code>\u00a0\u2192 metin modunda kullan\u0131lan kodlama</li> </ul> <pre><code># Metin modu (sat\u0131r sonu \u00e7evirisi, encoding)\nwith open(\"notlar.txt\", \"w+\", encoding=\"utf-8\") as f:\n    f.write(\"T\u00fcrk\u00e7e karakter: \u00e7\\n\")\n    f.seek(0)\n    print(f.read())\n\n# \u0130kili mod (raw byte)\nwith open(\"resim.png\", \"rb\") as f:\n    header = f.read(8)\n    print(header)  # b'\\x89PNG\\r\\n\\x1a\\n'\n</code></pre>"},{"location":"programming/python/#pdf-dosyalar-uzerinde-basit-islemler","title":"PDF Dosyalar\u0131 \u00dczerinde Basit \u0130\u015flemler","text":"<ul> <li>PDF\u2019ler genellikle ikili dosyalard\u0131r; i\u00e7inde <code>/Producer</code>, <code>/CreationDate</code> gibi metaveri etiketleri bulunur. \u00d6rne\u011fin \u00fcretici bilgisini okumak i\u00e7in:</li> </ul> <pre><code>with open(\"belge.pdf\", \"rb\") as f:\n    data = f.read()\n    idx = data.find(b\"/Producer\")\n    if idx != -1:\n        print(data[idx:idx+50])\n</code></pre> <p>Not</p> <p>Ger\u00e7ek PDF i\u015fleme i\u00e7in PyPDF2, pdfminer.six gibi k\u00fct\u00fcphaneleri kullanmak \u00e7ok daha g\u00fcvenli ve pratiktir.</p> Etiket Anlam\u0131 <code>/Creator</code> Belgeyi olu\u015fturan uygulama veya yaz\u0131l\u0131m (\u00f6r. Adobe InDesign) <code>/Producer</code> PDF\u2019yi \u00fcreten k\u00fct\u00fcphane veya ara\u00e7 (\u00f6r. \u201cPDFLib\u201d vb.) <code>/Author</code> Belge yazar\u0131 <code>/Title</code> Belge ba\u015fl\u0131\u011f\u0131 <code>/Subject</code> Belge konusu veya \u00f6zeti <code>/Keywords</code> Anahtar kelimeler (arama ve s\u0131n\u0131fland\u0131rma i\u00e7in) <code>/CreationDate</code> Olu\u015fturulma tarihi (D:YYYYMMDDHHmmSSZ format\u0131nda) <code>/ModDate</code> Son de\u011fi\u015ftirilme tarihi <code>/Trapped</code> Bask\u0131 i\u015f ak\u0131\u015f\u0131 notu (\u201cTrue\u201d, \u201cFalse\u201d veya \u201cUnknown\u201d) <pre><code>with open(\"belge.pdf\", \"rb\") as f:\n    data = f.read()\n    for tag in [b\"/Creator\", b\"/Producer\", b\"/Author\", b\"/Title\", b\"/Subject\", b\"/Keywords\", b\"/CreationDate\", b\"/ModDate\"]:\n        idx = data.find(tag)\n        if idx != -1:\n            snippet = data[idx:idx+100].split(b\"\\n\",1)[0]\n            print(snippet)\n</code></pre>"},{"location":"programming/python/#dosya-turu-alglama-magic-numbers","title":"Dosya T\u00fcr\u00fc Alg\u0131lama (Magic Numbers)","text":"<ul> <li>Baz\u0131 dosyalar, i\u00e7erdikleri \u201cmagic number\u201d (sihr\u00ee say\u0131) ad\u0131 verilen sabit bayt dizileri sayesinde t\u00fcrleri kolayca tespit edilebilir:</li> <li>JPEG\u00a0\u2013 Ba\u015flang\u0131\u00e7 baytlar\u0131: <code>FF D8 FF E0 ?? ?? 4A 46 49 46</code> (JFIF) Veya <code>FF D8 FF E0 ?? ?? 45 78 69 66</code> (Exif)</li> <li>PNG\u00a0\u2013 \u0130lk 8 bayt: <ul> <li>Onluk:\u00a0<code>137\u00a080\u00a078\u00a071\u00a013\u00a010\u00a026\u00a010</code> </li> <li>Onalt\u0131l\u0131k:\u00a0<code>89 50 4E 47 0D 0A 1A 0A</code></li> <li>Karakter kar\u015f\u0131l\u0131\u011f\u0131:\u00a0<code>\\x89 P N G \\r \\n \\x1A \\n</code></li> </ul> </li> <li>GIF\u00a0\u2013 \u0130lk 3 bayt:\u00a0<code>47 49 46</code>\u00a0(\u201cGIF\u201d)</li> <li>TIFF\u00a0\u2013 \u0130lk 2 bayt:\u00a0<code>49 49</code> (\u201cII\u201d) veya\u00a0<code>4D 4D</code> (\u201cMM\u201d)</li> <li>BMP\u00a0\u2013 \u0130lk 2 bayt:\u00a0<code>42 4D</code>\u00a0(\u201cBM\u201d)</li> </ul> <pre><code>for path in dosyalar:\n    header = open(path, 'rb').read(10)\n    if header[6:10] in (b'JFIF', b'Exif'):\n        print(f\"{path} \u2192 JPEG\")\n    elif header[:8] == b\"\\x89PNG\\r\\n\\x1a\\n\":\n        print(f\"{path} \u2192 PNG\")\n    elif header[:3] == b\"GIF\":\n        print(f\"{path} \u2192 GIF\")\n    elif header[:2] in (b\"II\", b\"MM\"):\n        print(f\"{path} \u2192 TIFF\")\n    elif header[:2] == b\"BM\":\n        print(f\"{path} \u2192 BMP\")\n    else:\n        print(f\"{path} \u2192 Bilinmeyen t\u00fcr\")\n</code></pre>"},{"location":"programming/python/#karakter-byte-ve-bytearray","title":"Karakter, Byte ve Bytearray","text":"<ul> <li>Kodlama Hatalar\u0131 (<code>errors</code>): <ul> <li>Dosya a\u00e7arken errors parametresi, \u00e7\u00f6z\u00fcmlenemeyen karakterlerle ne yap\u0131laca\u011f\u0131n\u0131 belirler:<ul> <li><code>'strict'</code>\u00a0\u2192 Hata f\u0131rlat\u0131r.</li> <li><code>'ignore'</code>\u00a0\u2192 Hatay\u0131 atlatarak karakteri atlar.</li> <li><code>'replace'</code>\u00a0\u2192 Ge\u00e7ersiz karakter yerine ? koyar.</li> <li><code>'xmlcharrefreplace'</code>\u00a0\u2192 XML karakter referans\u0131 (\u04d2) ekler.</li> </ul> </li> </ul> </li> </ul> <pre><code># '\u00e7' ASCII\u2019e \u00e7evrilmez:\n\"\u00e7al\u0131\u015f\".encode(\"ascii\", errors=\"ignore\")   # b\"al s\"\n\"\u00e7al\u0131\u015f\".encode(\"ascii\", errors=\"replace\")  # b\"?al?s\"\n</code></pre> <ul> <li><code>repr(obj)</code> Nesnenin resmi (parse edilebilir) g\u00f6sterimini d\u00f6ner; ka\u00e7\u0131\u015f dizilerini g\u00f6sterir.</li> <li><code>ascii(obj)</code> repr() benzeri, ama ASCII olmayan karakterleri \\x../\\u.. bi\u00e7iminde kodlar.</li> <li><code>ord(c)</code> Karakter c\u2019nin Unicode kod noktas\u0131n\u0131 d\u00f6ner (int).</li> <li><code>chr(n)</code> Kod noktas\u0131 n\u2019e kar\u015f\u0131l\u0131k gelen karakteri d\u00f6ner.</li> <li><code>bytes</code> De\u011fi\u015ftirilemez (immutable) bayt dizisi.</li> <li><code>bytearray</code> De\u011fi\u015ftirilebilir (mutable) bayt dizi</li> <li><code>s.encode(encoding, errors)</code> \u2192 bytes</li> <li><code>b.decode(encoding, errors)</code> \u2192 str</li> <li><code>fromhex()</code> Onalt\u0131l\u0131k dizeden bytes olu\u015fturur</li> </ul> <pre><code>print(repr(\"Line\\nNew\"))    # \"'Line\\\\nNew'\"\nprint(ascii(\"T\u00fcrk\u00e7e\"))      # \"'T\\\\xfcrk\\\\xe7e'\"\n\nprint(ord('A'))  # 65\nprint(chr(65))   # 'A'\n\nb = b\"hello\"                         # literal\nb2 = bytes([65,66,67])               # b\"ABC\"\nba = bytearray(b\"mutable\")           # bytearray(b\"mutable\")\n\ns = \"\u0130stanbul\"\nb = s.encode(\"utf-8\")            # b'\\xc4\\xb0stanbul'\nprint(b.decode(\"utf-8\"))         # '\u0130stanbul'\n\nbytes.fromhex(\"deadbeef\")      # b'\\xde\\xad\\xbe\\xef'\n\n# Bir karakterin byte uzunlu\u011fu, kulland\u0131\u011f\u0131n\u0131z kodlamaya g\u00f6re de\u011fi\u015fir:\nprint(len(\"\u015f\".encode(\"utf-8\")))    # 2 byte\nprint(len(\"\u015f\".encode(\"cp1254\")))   # 1 byte\n</code></pre>"},{"location":"programming/python/#fonksiyonlar-def","title":"Fonksiyonlar (def)","text":"<ul> <li><code>def</code> anahtar kelimesiyle fonksiyon tan\u0131mlan\u0131r.</li> <li>\u0130lk sat\u0131rdaki string (docstring), fonksiyonun belgelendirilmesi i\u00e7indir (<code>help()</code> ile eri\u015filebilir).</li> </ul> Tan\u0131m ve \u00c7a\u011fr\u0131<pre><code>def kayit_olustur(isim, soyisim, sehir):\n    \"\"\"\n    \u00dc\u00e7 zorunlu parametre alan kay\u0131t olu\u015fturma fonksiyonu.\n    \"\"\"\n    print(f\"\u0130sim   : {isim}\")\n    print(f\"Soyisim: {soyisim}\")\n    print(f\"\u015eehir  : {sehir}\")\n\n# Pozisyonel arg\u00fcmanlarla\nkayit_olustur(\"F\u0131rat\", \"\u00d6zg\u00fcl\", \"\u0130stanbul\")\n\n# Keyword arg\u00fcmanlarla (s\u0131ra farketmez)\nkayit_olustur(soyisim=\"\u00d6zg\u00fcl\", isim=\"F\u0131rat\", sehir=\"\u0130stanbul\")\n</code></pre> <ul> <li><code>Default</code> de\u011ferler tan\u0131m s\u0131ras\u0131nda belirlenir.</li> <li>Default\u2019lar yaln\u0131zca sondaki parametrelerde kullan\u0131labilir.</li> </ul> Varsay\u0131lan (Default) Parametreler<pre><code>def kur(kurulum_dizini=\"/usr/bin/\"):\n    \"\"\"\n    Kurulum dizini verilmezse varsay\u0131lan \"/usr/bin/\" kullan\u0131l\u0131r.\n    \"\"\"\n    print(f\"Program {kurulum_dizini} dizinine kuruldu!\")\n\nkur()                    # Program /usr/bin/ dizinine kuruldu!\nkur(\"/opt/myapp/\")       # Program /opt/myapp/ dizinine kuruldu!\n</code></pre> <ul> <li>De\u011fi\u015fken Say\u0131da Parametre: <code>*args</code> \u2192 pozisyonel arg\u00fcmanlar\u0131 tuple olarak al\u0131r. <code>**kwargs</code> \u2192 keyword arg\u00fcmanlar\u0131 dict olarak al\u0131r.</li> </ul> <pre><code>def carp(*sayilar):\n    \"\"\"\u0130stedi\u011finiz kadar say\u0131 al\u0131r, hepsini \u00e7arpar.\"\"\"\n    sonuc = 1\n    for s in sayilar:\n        sonuc *= s\n    return sonuc\n\nprint(carp(2, 3, 5))  # 30\n\ndef kayit(**bilgiler):\n    \"\"\"Anahtar=de\u011fer \u00e7iftlerini s\u00f6zl\u00fck olarak yazd\u0131r\u0131r.\"\"\"\n    for k, v in bilgiler.items():\n        print(f\"{k:10}: {v}\")\n\nkayit(ad=\"Ahmet\", soyad=\"\u00d6z\", sehir=\"Ankara\")\n</code></pre> <ul> <li><code>*args</code> ve <code>**kwargs</code> ayn\u0131 fonksiyonda birlikte kullan\u0131labilir.</li> <li> <p>S\u0131ralama:</p> <ul> <li>Pozisyonel zorunlu parametreler</li> <li>Default parametreler</li> <li><code>*args</code></li> <li>Keyword-only parametreler (sadece * sonras\u0131 gelenler)</li> <li><code>**kwargs</code></li> </ul> </li> <li> <p><code>*</code> i\u015faretiyle, sonras\u0131nda gelen parametrelerin yaln\u0131zca keyword ile atanmas\u0131n\u0131 zorunlu k\u0131labilirsiniz</p> </li> </ul> Keyword\u2011only Parametreler<pre><code>def islem(a, b, *, verbose=False):\n    \"\"\"verbose ancak key=value ile ge\u00e7ilebilir.\"\"\"\n    result = a + b\n    if verbose:\n        print(f\"{a} + {b} = {result}\")\n    return result\n\nislem(2, 3, verbose=True)  # 5 sat\u0131r\u0131n\u0131 yazd\u0131r\u0131r\n# islem(2,3,True)          # TypeError!\n</code></pre>"},{"location":"programming/python/#fonksiyondan-deger-dondurme","title":"Fonksiyondan De\u011fer D\u00f6nd\u00fcrme","text":"<ul> <li><code>return</code> ile fonksiyonu sonland\u0131r\u0131p de\u011fer d\u00f6nd\u00fcr\u00fcr.</li> <li><code>return</code> yoksa <code>None</code> d\u00f6ner.</li> </ul> <pre><code>import random\n\ndef sayi_uret(bas=0, bit=50, adet=5):\n    \"\"\"Tekrars\u0131z rastgele say\u0131lar seti d\u00f6ner.\"\"\"\n    sonuc = set()\n    while len(sonuc) &lt; adet:\n        sonuc.add(random.randint(bas, bit))\n    return sonuc\n\nrastgele = sayi_uret(1, 100, adet=3)\nprint(rastgele)  # \u00f6rn. {42, 7, 99}\n</code></pre>"},{"location":"programming/python/#lambda-anonim-fonksiyonlar","title":"Lambda (Anonim Fonksiyonlar)","text":"<ul> <li>Tek sat\u0131rl\u0131k, isimlendirilmemi\u015f fonksiyon tan\u0131m\u0131 i\u00e7in:</li> </ul> <pre><code>carp = lambda *s, **k: __import__(\"functools\").reduce(lambda x,y: x*y, s, 1)\nprint(carp(2,3,4))  # 24\n\n# Basit \u00f6rnek\nkare = lambda x: x*x\nprint(kare(5))      # 25\n</code></pre> <pre><code>def fonk(param1, param2):\n    return param1 + param2\n\n#lambda \nfonk = lambda param1, param2: param1 + param2\n\nharfler = \"abc\u00e7defg\u011fh\u0131ijklmno\u00f6prs\u015ftu\u00fcvyz\"\nisimler = [\"ahmet\", \"\u0131\u015f\u0131k\", \"ismail\", \"can\", \"iskender\"]\n\n\u00e7evrim = {i: harfler.index(i) for i in harfler}           \nprint(sorted(isimler, key=lambda x: \u00e7evrim.get(x[0])))\n\nl = [2, 5, 10, 23, 3, 6]\nprint(*map(lambda say\u0131: say\u0131 ** 2, l))\n</code></pre> <ul> <li>Local de\u011fi\u015fkenler fonksiyon i\u00e7inde tan\u0131ml\u0131d\u0131r.</li> <li><code>global</code> ile fonksiyon i\u00e7inde <code>global</code> scope\u2019daki bir de\u011fi\u015fkene atama yapabilirsiniz:</li> </ul> <pre><code>isim = \"F\u0131rat\"\n\ndef degistir():\n    global isim\n    isim += \" \u00d6zg\u00fcl\"\n\ndegistir()\nprint(isim)  # F\u0131rat \u00d6zg\u00fcl\n</code></pre> <ul> <li><code>nonlocal</code> ile d\u0131\u015f (ancak global olmayan) scope\u2019daki de\u011fi\u015fkene eri\u015febilirsiniz:</li> </ul> <pre><code>def dis_fonksiyon():\n    x = 5\n    def ic_fonksiyon():\n        nonlocal x\n        x += 3\n    ic_fonksiyon()\n    return x\n\nprint(dis_fonksiyon())  # 8\n</code></pre>"},{"location":"programming/python/#oz-yinelemeli-fonksiyonlar","title":"\u00d6z yinelemeli fonksiyonlar","text":"<pre><code>def azalt(s):\n    if len(s) &lt; 1:\n        return s\n    else:\n        print(s)\n        return azalt(s[1:])\n\nprint(azalt('istihza'))\n</code></pre>"},{"location":"programming/python/#ic-ice-fonksiyonlar","title":"\u0130\u00e7 \u0130\u00e7e Fonksiyonlar","text":"<pre><code>def yaz\u0131c\u0131():\n    def yaz(mesaj):\n        print(mesaj)\n    return yaz\n\ndef fonksiyon_say\u0131c\u0131():\n    say\u0131 = 0\n    def say():\n        nonlocal say\u0131   #localde bulunan de\u011fi\u015fkene eri\u015fmeyi sa\u011flar\n        say\u0131 += 1\n        return say\u0131\n    return say\n</code></pre>"},{"location":"programming/python/#fonksiyon-imzas-ve-anotasyonlar","title":"Fonksiyon \u0130mzas\u0131 ve Anotasyonlar","text":"<ul> <li>Parametre ve d\u00f6n\u00fc\u015f t\u00fcr\u00fc a\u00e7\u0131klamalar\u0131 i\u00e7in type hints</li> </ul> <pre><code>from typing import List, Dict\n\ndef ortalama(sayilar: List[int]) -&gt; float:\n    return sum(sayilar) / len(sayilar)\n\nprint(ortalama([10, 20, 30]))  # 20.0\n</code></pre> <ul> <li>Bu anotasyonlar \u00e7al\u0131\u015fma zaman\u0131 de\u011fil, statik ara\u00e7lar (mypy, IDE) i\u00e7indir.</li> </ul>"},{"location":"programming/python/#uretecler-generators","title":"\u00dcrete\u00e7ler (Generators)","text":"<ul> <li>Python \u00fcrete\u00e7leri, <code>yield</code> anahtar kelimesiyle tan\u0131mlanan, duraklat\u0131labilir ve devam ettirilebilir fonksiyonlard\u0131r. B\u00fcy\u00fck veri setlerini ad\u0131m ad\u0131m \u00fcretmek ve bellek tasarrufu sa\u011flamak i\u00e7in idealdir.</li> </ul> <pre><code>def uretec():\n    sayi = 0\n    while True:\n        sayi += 1\n        yield sayi\n</code></pre> <ul> <li>yield: Fonksiyonu duraklat\u0131r ve bir de\u011fer d\u00f6nd\u00fcr\u00fcr.</li> <li>Bir sonraki de\u011feri almak i\u00e7in next() kullan\u0131l\u0131r:</li> </ul> <pre><code>g = uretec()\nprint(next(g))  # 1\nprint(next(g))  # 2\nprint(next(g))  # 3\n</code></pre> <ul> <li>\u00dcrete\u00e7 sonsuz d\u00f6ng\u00fcde \u00e7al\u0131\u015fabilir; ihtiya\u00e7 duyulana kadar bellek kullanmaz.</li> </ul> S\u0131n\u0131rl\u0131 \u00dcrete\u00e7 \u00d6rne\u011fi<pre><code>def iki_yazi():\n    yield \"Merhaba\"\n    yield \"D\u00fcnya\"\n\ng = iki_yazi()\nprint(next(g))  # \"Merhaba\"\nprint(next(g))  # \"D\u00fcnya\"\n# print(next(g))  # StopIteration hatas\u0131 (art\u0131k de\u011fer kalmad\u0131)\n</code></pre> yield from ile \u0130\u00e7 \u00dcrete\u00e7<pre><code># Ba\u015fka bir \u00fcreteci do\u011frudan \u00e7a\u011f\u0131rmak ve alt de\u011ferleri yeniden \u00fcretmek i\u00e7in\ndef uretec1():\n    yield \"A ba\u015flad\u0131\"\n    yield \"A bitti\"\n\ndef uretec2():\n    yield \"B ba\u015flad\u0131\"\n    yield from uretec1()\n    yield \"B bitti\"\n\nfor v in uretec2():\n    print(v)\n\n# \u00c7\u0131kt\u0131:\n# B ba\u015flad\u0131\n# A ba\u015flad\u0131\n# A bitti\n# B bitti\n</code></pre> \u00dcrete\u00e7 \u0130fadeleri (Generator Expressions)<pre><code># K\u0131sa s\u00f6z dizimiyle \u00fcrete\u00e7 olu\u015fturma\n# Liste \u00fcretmek yerine \u00fcrete\u00e7:\nliste = [i*i for i in range(5)]         # normal liste\nuretec = (i*i for i in range(5))         # \u00fcrete\u00e7 ifadesi\n\nprint(type(uretec))  # &lt;class 'generator'&gt;\nprint(next(uretec))  # 0\nprint(list(uretec))  # [1, 4, 9, 16]\n</code></pre> <ul> <li><code>()</code> i\u00e7inde, <code>[]</code> listesinden tek fark\u0131 bellek yerine de\u011ferleri teker teker \u00fcretir.</li> <li><code>Send / Throw / Close</code> \u00dcrete\u00e7 ile \u00e7ift y\u00f6nl\u00fc ileti\u015fim sa\u011flar.</li> <li><code>StopIteration</code> \u00dcrete\u00e7 t\u00fckendi\u011finde (ek <code>yield</code> yoksa), <code>next()</code> StopIteration f\u0131rlat\u0131r.</li> </ul> <pre><code>def echo():\n    while True:\n        value = (yield)\n        print(\"Gelen:\", value)\n\ng = echo()\nnext(g)            # ba\u015flat (ilk yield\u2019e kadar)\ng.send(\"Merhaba\")  # \"Gelen: Merhaba\"\ng.close()          # \u00fcreteci kapat\n</code></pre>"},{"location":"programming/python/#ureteclerin-avantajlar","title":"\u00dcrete\u00e7lerin Avantajlar\u0131","text":"<ul> <li>Bellek Verimlili\u011fi: T\u00fcm veriyi ayn\u0131 anda saklamaz, ihtiya\u00e7 duyulana kadar hesaplar.</li> <li>Ak\u0131\u015f Tabanl\u0131 \u0130\u015flemler: Dosya sat\u0131r sat\u0131r okuma, sonsuz veri ak\u0131\u015flar\u0131, b\u00fcy\u00fck diziler vb.</li> </ul>"},{"location":"programming/python/#moduller-ve-paketler","title":"Mod\u00fcller ve Paketler","text":"<ul> <li><code>os.name, os.listdir()</code> gibi tam yolu kullan\u0131rs\u0131n\u0131z.</li> <li><code>subprocess</code> yerine <code>sp</code> yazarak eri\u015febilirsiniz.</li> </ul> T\u00fcm mod\u00fcl\u00fc i\u00e7e aktarma<pre><code>import os\nimport subprocess as sp   # alias ile k\u0131saltma\n</code></pre> <ul> <li>Yaln\u0131zca gerekli nitelikleri (fonksiyon, de\u011fi\u015fken, s\u0131n\u0131f) getirir.</li> <li><code>p.join(), p.exists()</code> gibi path i\u00e7indekileri k\u0131saca \u00e7a\u011f\u0131rabilirsiniz.</li> </ul> Mod\u00fclden belirli \u00fcyeleri i\u00e7e aktarma<pre><code>from os import name, listdir, getcwd\nfrom os import path as p   # alias ile k\u0131saltma\n</code></pre> Alt mod\u00fclleri veya alt paketleri i\u00e7e aktarma<pre><code>import urllib.request        # mod\u00fcl i\u00e7indeki alt mod\u00fcl\u00fc tam yoluyla kullan\nfrom urllib import request   # do\u011frudan `request` ad\u0131yla eri\u015fim\nfrom urllib.request import urlopen, Request\n</code></pre> T\u00fcm nitelikleri i\u00e7e aktarma (genellikle \u00f6nerilmez)<pre><code>from urllib.request import *\nfrom sys import *\n</code></pre> <p>Not</p> <p>\u0130sim \u00e7at\u0131\u015fmalar\u0131na ve okunabilirlik sorunlar\u0131na yol a\u00e7abilir.</p>"},{"location":"programming/python/#paket-yaps","title":"Paket Yap\u0131s\u0131","text":"<ul> <li>Bir klas\u00f6r\u00fcn paket olarak tan\u0131nmas\u0131 i\u00e7in i\u00e7inde bir init.py dosyas\u0131 bulunmal\u0131d\u0131r (Python\u00a03.3+\u2019ta bu zorunlu de\u011fil, ama iyi pratiktir).</li> <li>Paket i\u00e7indeki mod\u00fcller \u015f\u00f6yle i\u00e7e aktar\u0131l\u0131r:</li> </ul> <pre><code>import mypkg.module1\nfrom mypkg.module2 import func\n</code></pre> G\u00f6receli i\u00e7e aktarma (paket i\u00e7i mod\u00fclleri import ederken):<pre><code># same package alt\u0131nda\nfrom . import helper       # mypkg/helper.py\nfrom .sub import utils     # mypkg/sub/utils.py\n# bir \u00fcst pakete \u00e7\u0131kmak\nfrom ..core import config\n</code></pre> <ul> <li><code>sys.path</code> ile \u00d6zel Yol Ekleme: Python, mod\u00fclleri sys.path listesindeki klas\u00f6rlerde arar. Dinamik olarak ekleme yapabilirsiniz:</li> </ul> <pre><code>import os, sys\n\nhome = os.environ.get('HOME') or os.environ.get('HOMEPATH')\ndesktop = os.path.join(home, 'Desktop')\nsys.path.append(desktop)  # art\u0131k Desktop\u2019taki mod\u00fclleri import edebilirsiniz\n</code></pre> <ul> <li><code>sys.path</code> de\u011fi\u015fkeni, <code>import</code> s\u0131ras\u0131nda bak\u0131lan dizin listesini tutar.</li> <li>Yolu ekledikten sonra, o klas\u00f6rdeki <code>.py</code> dosyalar\u0131n\u0131 do\u011frudan <code>import</code> edebilirsiniz.</li> </ul>"},{"location":"programming/python/#nesne-yonelimli-programlama-oop","title":"Nesne Y\u00f6nelimli Programlama (OOP)","text":"<p>Python\u2019da her \u015fey bir nesne oldu\u011fundan, s\u0131n\u0131flar (class) veri yap\u0131lar\u0131n\u0131z\u0131 ve davran\u0131\u015flar\u0131n\u0131z\u0131 (metotlar) bir arada tan\u0131mlamak i\u00e7in temel yap\u0131d\u0131r.</p> <ul> <li><code>class</code> anahtar kelimesiyle ba\u015flar, s\u0131n\u0131f ad\u0131 PascalCase (b\u00fcy\u00fck harfle ba\u015flayan her kelime) olur.</li> <li><code>pass</code> bo\u015f bir g\u00f6vde i\u00e7in kullan\u0131l\u0131r.</li> </ul> S\u0131n\u0131f Tan\u0131m\u0131 ve Nesne Olu\u015fturma<pre><code>class Kisi:\n    pass\n\n# S\u0131n\u0131ftan nesne olu\u015fturma (\u00f6rnek/instance)\nk = Kisi()\n</code></pre> <ul> <li><code>__init__</code> metodu, nesne olu\u015fturulurken otomatik \u00e7a\u011fr\u0131l\u0131r.</li> <li><code>self</code>, o \u00f6rne\u011fe (nesneye) referans verir; her metot ilk parametresi <code>self</code> olmal\u0131d\u0131r.</li> </ul> __init__  Yap\u0131c\u0131 (Constructor)<pre><code>class Kisi:\n    def __init__(self, isim, yas):\n        self.isim = isim     # \u00d6rnek niteli\u011fi\n        self.yas   = yas\n\nk = Kisi(\"Ali\", 30)\nprint(k.isim, k.yas)       # Ali 30\n</code></pre> <ul> <li>S\u0131n\u0131f nitelikleri (toplam) t\u00fcm \u00f6rnekler aras\u0131nda payla\u015f\u0131l\u0131r.</li> <li>\u00d6rnek nitelikleri (self.id) yaln\u0131zca o nesneye \u00f6zeldir.</li> </ul> \u00d6rnek ve S\u0131n\u0131f Nitelikleri<pre><code>class Saya\u00e7:\n    toplam  = 0        # S\u0131n\u0131f niteli\u011fi\n\n    def __init__(self):\n        Saya\u00e7.toplam += 1\n        self.id = Saya\u00e7.toplam   # \u00d6rnek niteli\u011fi\n\na = Saya\u00e7()\nb = Saya\u00e7()\nprint(a.id, b.id)      # 1 2\nprint(Saya\u00e7.toplam)    # 2\n</code></pre> <ul> <li>S\u0131n\u0131f i\u00e7indeki her i\u015flev, metot olarak adland\u0131r\u0131l\u0131r.</li> <li>\u0130lk parametresi <code>self</code> oldu\u011fu i\u00e7in \u00f6rne\u011fe eri\u015febilir.</li> </ul> Metotlar<pre><code>class Matematik:\n    def kare(self, x):\n        return x*x\n\nm = Matematik()\nprint(m.kare(5))       # 25\n</code></pre> <ul> <li><code>@classmethod</code> ile i\u015faretlenen metotlara ilk parametre olarak s\u0131n\u0131f <code>(cls)</code> gelir.</li> <li>S\u0131n\u0131f niteli\u011fi \u00fczerinde i\u015flem yapmak i\u00e7in kullan\u0131l\u0131r.</li> </ul> S\u0131n\u0131f Metotlar\u0131 ve @classmethod<pre><code>class Saya\u00e7:\n    toplam = 0\n\n    def __init__(self):\n        Saya\u00e7.toplam += 1\n\n    @classmethod\n    def toplam_sayac(cls):\n        return cls.toplam\n\nprint(Saya\u00e7.toplam_sayac())  # 0\na, b = Saya\u00e7(), Saya\u00e7()\nprint(Saya\u00e7.toplam_sayac())  # 2\n</code></pre> <ul> <li><code>@staticmethod</code> ile tan\u0131mlanan metotlar ne self ne de cls al\u0131r; s\u0131n\u0131fa ba\u011fl\u0131 de\u011fil, ba\u011f\u0131ms\u0131z i\u015flev gibidir.</li> </ul> Statik Metotlar ve @staticmethod<pre><code>class Yardimci:\n    @staticmethod\n    def topla(a, b):\n        return a + b\n\nprint(Yardimci.topla(3, 4))  # 7\n</code></pre> <ul> <li><code>@property</code> ile metodu \u00f6znitelik gibi (d.alan) kullanabilirsiniz.</li> <li>Okuma (<code>@&lt;isim&gt;.setter</code>) ve silme (<code>@&lt;isim&gt;.deleter</code>) i\u015flemleri de eklenebilir.</li> </ul> \u00d6zellikler ve @property<pre><code>class Daire:\n    def __init__(self, yaricap):\n        self._r = yaricap\n\n    @property\n    def alan(self):\n        return 3.1416 * self._r ** 2\n\nd = Daire(5)\nprint(d.alan)  # 78.54\n</code></pre> <ul> <li>Public (her yerden eri\u015filebilir): isim</li> <li>Protected (alt s\u0131n\u0131flarda kullan\u0131labilir): _isim</li> <li>Private (s\u0131n\u0131f i\u00e7inde sakl\u0131): __isim \u2192 arkas\u0131nda isim e\u015fleme (<code>name mangling</code>)</li> </ul> Bilgi Gizleme (Encapsulation)<pre><code>class A:\n    def __init__(self):\n        self.__gizli = 42\n\na = A()\n# print(a.__gizli)       # AttributeError\nprint(a._A__gizli)        # 42 (name mangling)\n</code></pre> <ul> <li>Bir s\u0131n\u0131f class AltSinif(UstSinif): ile miras al\u0131r.</li> <li><code>super()</code> ile \u00fcst s\u0131n\u0131f\u0131n metotlar\u0131n\u0131 \u00e7a\u011f\u0131rabilirsiniz.</li> <li>\u00c7oklu kal\u0131t\u0131m: <code>class C(A, B)</code></li> </ul> Kal\u0131t\u0131m (Inheritance)<pre><code>    def __init__(self, isim):\n        self.isim = isim\n\n    def calis(self):\n        print(f\"{self.isim} \u00e7al\u0131\u015f\u0131yor\")\n\nclass Yonetici(Calisan):\n    def calis(self):\n        super().calis()\n        print(f\"{self.isim} y\u00f6netiyor\")\n\ny = Yonetici(\"Ay\u015fe\")\ny.calis()\n# Ay\u015fe \u00e7al\u0131\u015f\u0131yor\n# Ay\u015fe y\u00f6netiyor\n</code></pre> <ul> <li>Dunder (double underscore) metotlar\u0131, nesnelere \u00f6zel davran\u0131\u015flarla Python\u2019un yerle\u015fik i\u015flemlerini yeniden tan\u0131mlar:</li> <li>B\u00f6ylece +, -, len(), str(), == gibi i\u015flemleri nesnenize \u00f6zg\u00fc hale getirebilirsiniz.</li> </ul> Polimorfizm ve Dunder Metotlar<pre><code>class Nokta:\n    def __init__(self, x, y):\n        self.x, self.y = x, y\n\n    def __add__(self, other):\n        return Nokta(self.x + other.x, self.y + other.y)\n\n    def __repr__(self):\n        return f\"Nokta({self.x}, {self.y})\"\n\np1, p2 = Nokta(1,2), Nokta(3,4)\nprint(p1 + p2)  # Nokta(4, 6)\n</code></pre>"},{"location":"programming/python/#pip","title":"Pip","text":"<pre><code>pip show numpy\npip3 show numpy\n\npip install numpy\npip3 install numpy\n\npip3 install [package_name]==[verion] # Belirli bir version indirilir.\npip install numpy==1.25.0\npip3 install numpy==1.25.0\n\npip install --upgrade scikit-learn\npip3 install --upgrade scikit-learn\n\npip list\npip3 list # Y\u00fckl\u00fc olan python paketlerini listeler\n</code></pre>"},{"location":"programming/python/#standart-kutuphanaler","title":"Standart K\u00fct\u00fcphanaler","text":""},{"location":"programming/python/#duzenli-ifadeler-re-modulu","title":"D\u00fczenli \u0130fadeler (re Mod\u00fcl\u00fc)","text":"<p>Python\u2019un <code>re</code> mod\u00fcl\u00fc, metin i\u00e7inde karma\u015f\u0131k desen aramalar\u0131 ve d\u00f6n\u00fc\u015f\u00fcmleri i\u00e7in kullan\u0131l\u0131r. Gereksiz yere de\u011fil, ger\u00e7ekten ihtiya\u00e7 duydu\u011funuzda tercih edin.</p> <ul> <li>Temel Fonksiyonlar</li> </ul> Fonksiyon A\u00e7\u0131klama <code>re.match(pattern, text)</code> Metnin ba\u015f\u0131nda pattern ile e\u015fle\u015fme arar. <code>re.search(pattern, text)</code> Metnin her yerinde ilk e\u015fle\u015fmeyi bulur. <code>re.findall(pattern, text)</code> T\u00fcm e\u015fle\u015fmeleri liste olarak d\u00f6ner. <code>re.finditer(pattern, text)</code> T\u00fcm e\u015fle\u015fmeleri iterator olarak d\u00f6ner (match objeleri). <code>re.sub(pattern, repl, text)</code> Deseni repl ile de\u011fi\u015ftirir (t\u00fcm e\u015fle\u015fmelerde). <code>re.split(pattern, text)</code> Desene g\u00f6re b\u00f6lerek liste d\u00f6ner. <pre><code>text = \"Foo123 Bar456 Baz789\"\n\n# Ba\u015fta \u201cFoo\u201d olup olmad\u0131\u011f\u0131n\u0131 kontrol\nprint(bool(re.match(r\"Foo\", text)))          # True\n\n# Metinde ilk say\u0131sal bloku bul\nm = re.search(r\"\\d+\", text)\nprint(m.group(), m.start())                  # '123', 3\n\n# T\u00fcm say\u0131 bloklar\u0131n\u0131 listele\nprint(re.findall(r\"\\d+\", text))              # ['123', '456', '789']\n\n# Harf ve rakam aras\u0131na tire ekle\nprint(re.sub(r\"([A-Za-z]+)(\\d+)\", r\"\\1-\\2\", text))\n# 'Foo-123 Bar-456 Baz-789'\n</code></pre> <ul> <li>Karakter S\u0131n\u0131flar\u0131 ve \u00d6zel Diziler</li> </ul> Desen Anlam\u0131 <code>[abc]</code> a veya b veya c <code>[0-9]</code> 0\u20139 aras\u0131 <code>[^abc]</code> a, b, c d\u0131\u015f\u0131ndaki karakterler <code>.</code> Yeni sat\u0131r (\\n) hari\u00e7 her karakter <code>\\d</code> Ondal\u0131k rakam ([0-9]) <code>\\D</code> Ondal\u0131k olmayan ([^0-9]) <code>\\w</code> Alfan\u00fcmerik ve alt \u00e7izgi ([A-Za-z0-9_]) <code>\\W</code> Alfan\u00fcmerik olmayan ([^A-Za-z0-9_]) <code>\\s</code> Bo\u015fluk karakterleri ([ \\t\\n\\r\\f\\v]) <code>\\S</code> Bo\u015fluk olmayan karakterler <ul> <li>Tekrarlama Miktarlar\u0131</li> </ul> Metakarakter Anlam\u0131 <code>*</code> 0 veya daha fazla kez <code>+</code> 1 veya daha fazla kez <code>?</code> 0 veya 1 kez <code>{m}</code> Tam olarak m kez <code>{m,}</code> En az m kez <code>{m,n}</code> m ile n kez aras\u0131 <ul> <li>Ba\u011flam Belirleyiciler<ul> <li><code>^</code>\u00a0\u2192 Metnin ba\u015flang\u0131c\u0131</li> <li><code>$</code>\u00a0\u2192 Metnin sonu</li> <li><code>\\b</code>\u00a0\u2192 Kelime s\u0131n\u0131r\u0131</li> <li><code>\\B</code>\u00a0\u2192 Kelime s\u0131n\u0131r\u0131 de\u011fil</li> </ul> </li> </ul> <pre><code># B\u00fcy\u00fck harfle ba\u015flay\u0131p rakamla biten sat\u0131r\npattern = r\"^[A-Z].*\\d$\"\nprint(bool(re.match(pattern, \"Hello123\")))  # True\nprint(bool(re.match(pattern, \"hello123\")))  # False\n</code></pre> <ul> <li>Gruplama ve Yakalama: Parantez i\u00e7inde olu\u015fturulur:<ul> <li><code>(...)</code> \u2192 Yakalama grubu (daha sonra <code>.group(n)</code> ile eri\u015filir).</li> <li><code>(?:...)</code> \u2192 Yakalamadan sadece grup olu\u015fturur.</li> </ul> </li> </ul> <pre><code>m = re.search(r\"(\\d+)-(\\d+)-(\\d+)\", \"Tarih: 2021-12-31\")\nprint(m.groups())    # ('2021', '12', '31')\n</code></pre> <ul> <li>Alternation ve Se\u00e7imler: <code>|</code> ile \u201cveya\u201d ili\u015fkisi kurulur:</li> </ul> <pre><code># 'cat' veya 'dog'\nre.findall(r\"cat|dog\", \"cat dog mouse\")  # ['cat', 'dog']\n</code></pre> <ul> <li>Bayraklar (Flags): Regex\u2019i sat\u0131r sat\u0131r (<code>re.MULTILINE</code>), b\u00fcy\u00fck/k\u00fc\u00e7\u00fck harf duyars\u0131z (<code>re.IGNORECASE</code>) veya noktan\u0131n yeni sat\u0131r\u0131 da yakalamas\u0131 i\u00e7in (<code>re.DOTALL</code>) yap\u0131land\u0131r\u0131n:</li> </ul> <pre><code>pattern = r\"^foo\"\ntext = \"foo\\nbar\\nfoo\"\n\nprint(re.findall(pattern, text))  # ['foo']\nprint(re.findall(pattern, text, flags=re.MULTILINE))  # ['foo', 'foo']\n</code></pre> <ul> <li>\u0130pu\u00e7lar\u0131 ve \u0130yi Uygulamalar: <ul> <li>Ham string (raw): <code>r\"...\"</code> kullan\u0131n, b\u00f6ylece \\ ka\u00e7\u0131\u015f sorunlar\u0131yla u\u011fra\u015fmazs\u0131n\u0131z.</li> <li>Derlenmi\u015f desen: \u00c7ok s\u0131k kullan\u0131lan deseni re.compile() ile derleyip tekrar kullan\u0131n.</li> <li>Yorumlay\u0131n: Karma\u015f\u0131k desenler i\u00e7in (?x) flag\u2019i ile bo\u015fluk ve yorum yazabilirsiniz</li> </ul> </li> </ul> <pre><code>pattern = re.compile(r\"\"\"\n    ^               # sat\u0131r ba\u015f\u0131\n    [A-Za-z]+       # harflerden olu\u015fan bir veya daha fazla karakter\n    \\d{2,4}         # 2 ila 4 rakam\n    $               # sat\u0131r sonu\n\"\"\", re.VERBOSE)\n</code></pre>"},{"location":"programming/qml/","title":"QML Programlama","text":"<ul> <li><code>import</code> QML mod\u00fcl\u00fcn\u00fc projeye dahil eder. Versiyon parametresi (\u00f6rn. 2.0), mod\u00fcl\u00fcn s\u00fcr\u00fcm\u00fcn\u00fc belirtir.</li> <li><code>Item</code> Genel kapsay\u0131c\u0131d\u0131r. Di\u011fer t\u00fcm g\u00f6rselleri i\u00e7ine ekleyebilirsiniz.</li> <li><code>Text</code> Sabit metin g\u00f6sterimi.</li> <li><code>TextInput</code> Kullan\u0131c\u0131dan metin giri\u015fi almak i\u00e7in.</li> <li><code>Image</code> resim eklenmesini sa\u011flar.</li> <li><code>Rectangle</code> D\u00f6rtgen alan olu\u015fturur. <code>clip</code> \u0130\u00e7erik s\u0131n\u0131rlar\u0131 d\u0131\u015f\u0131nda kalan b\u00f6lgeleri keser.</li> <li><code>id</code> \u00d6geye \u00f6zg\u00fcn bir ad atar; ba\u015fka yerden bu adla eri\u015fim sa\u011flar.</li> <li><code>width/height</code> Geni\u015flik ve y\u00fckseklik de\u011ferlerini belirler.</li> <li><code>x/y</code> \u00d6genin konumunu belirler; i\u00e7 i\u00e7e yap\u0131da \u00fcst kapsay\u0131c\u0131 k\u00f6\u015fesini referans al\u0131r.</li> <li><code>color</code> Renk ayarlamas\u0131 yapar; isim, hex (#aarrggbb) veya Qt.rgba() ile belirtilebilir.</li> <li><code>opacity</code> \u00d6genin saydaml\u0131\u011f\u0131n\u0131 (0\u20131) ayarlar; i\u00e7 i\u00e7e ge\u00e7iyorsa \u00fcst elemanla birle\u015fir.</li> <li><code>scale</code> \u00d6genin ekrandaki \u00f6l\u00e7e\u011fini de\u011fi\u015ftirir; ger\u00e7ek width/height sabit kal\u0131r.</li> <li><code>rotation</code> \u00d6geyi derece cinsinden d\u00f6nd\u00fcr\u00fcr; transformOrigin ile d\u00f6n\u00fc\u015f merkezini belirleyebilirsiniz.</li> <li><code>anchors</code> \u00d6gelerin konum ve boyutunu ba\u015fka \u00f6gelere sabitlemek i\u00e7in kullan\u0131l\u0131r (\u00f6rn. anchors.left, anchors.verticalCenter).</li> <li><code>MouseArea</code> Fare veya dokunmatik etkile\u015fimleri alg\u0131lar (onClicked, onPressed, onPositionChanged vb.).</li> <li><code>preventStealing</code> MouseArea i\u00e7indeyken di\u011fer MouseArea\u2019lar\u0131n olay\u0131 \u201c\u00e7almas\u0131n\u0131\u201d engeller.</li> <li>Keys Klavye tu\u015fu olaylar\u0131n\u0131 dinler (Keys.onPressed, Qt.Key_Up vb.).</li> <li><code>property</code> \u00d6geye dinamik \u00f6zellik eklemek i\u00e7in kullan\u0131l\u0131r; tip ve iste\u011fe ba\u011fl\u0131 ba\u015flang\u0131\u00e7 de\u011feriyle tan\u0131mlan\u0131r (\u00f6rn. property int count: 0).</li> <li><code>NumberAnimation</code> Belirli bir \u00f6zellik \u00fczerinde animasyon sa\u011flar; from, to, duration ve <code>on &lt;property&gt;</code> ile ayarlan\u0131r.</li> </ul>"},{"location":"programming/xml/","title":"XML Programlama","text":"<p>XML (Extensible Markup Language), veri depolama ve ta\u015f\u0131nmas\u0131n\u0131 kolayla\u015ft\u0131ran, hem insan hem de makine taraf\u0131ndan okunabilir bir i\u015faretleme dilidir. A\u015fa\u011f\u0131da XML\u2019in temel kavramlar\u0131n\u0131 ve ek bilgileri bulabilirsiniz:</p>"},{"location":"programming/xml/#prolog-ve-temel-kurallar","title":"Prolog ve Temel Kurallar","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;root&gt;\n    \u2026 i\u00e7erik \u2026\n&lt;/root&gt;\n</code></pre> <ul> <li>Prolog (<code>&lt;?xml \u2026?&gt;</code>):<ul> <li>version: XML s\u00fcr\u00fcm\u00fc (\u00e7o\u011funlukla <code>\"1.0\"</code>).</li> <li>encoding: Karakter kodlamas\u0131 (\u00f6rn. <code>\"UTF-8\"</code>, <code>\"ISO-8859-1\"</code>).</li> </ul> </li> <li>Tek bir root (k\u00f6k) eleman zorunludur; t\u00fcm di\u011fer etiketler bu k\u00f6k\u00fcn i\u00e7inde tan\u0131mlan\u0131r.</li> <li>Etiket adlar\u0131 rakamla veya <code>xml</code> ile ba\u015flayamaz; b\u00fcy\u00fck/k\u00fc\u00e7\u00fck harf duyarl\u0131d\u0131r.</li> </ul>"},{"location":"programming/xml/#etiketler-ve-icerik","title":"Etiketler ve \u0130\u00e7erik","text":"<pre><code>&lt;parent&gt;\n    &lt;child&gt;Metin i\u00e7eri\u011fi&lt;/child&gt;\n    &lt;emptyTag/&gt;           &lt;!-- Kendini kapatan bo\u015f etiket --&gt;\n&lt;/parent&gt;\n</code></pre> <ul> <li>A\u00e7\u0131l\u0131\u015f/kapama: <code>&lt;tag&gt; \u2026 &lt;/tag&gt;</code></li> <li>Bo\u015f eleman: <code>&lt;tag/&gt;</code></li> <li>\u0130\u00e7erik: Metin, ba\u015fka etiketler veya her ikisi birden olabilir.</li> <li>S\u0131r: XML\u2019de i\u00e7 i\u00e7e etiketler, do\u011fru a\u00e7\u0131l\u0131\u015f/kapama s\u0131ras\u0131yla tan\u0131mlanmal\u0131d\u0131r.</li> </ul>"},{"location":"programming/xml/#ogelerin-elements-adlandrma-stilleri","title":"\u00d6\u011felerin (Elements) Adland\u0131rma Stilleri","text":"Stil \u00d6rnek Lower case firstname Upper case FIRSTNAME Underscore first_name PascalCase FirstName camelCase firstName"},{"location":"programming/xml/#oznitelikler-attributes","title":"\u00d6znitelikler (Attributes)","text":"<pre><code>&lt;person id=\"123\" role=\"admin\"&gt;Ali&lt;/person&gt;\n</code></pre> <ul> <li>Etiket i\u00e7inde ad=\"de\u011fer\" bi\u00e7iminde tan\u0131mlan\u0131r.</li> <li>Ayn\u0131 \u00f6\u011fe i\u00e7inde birden fazla \u00f6znitelik kullan\u0131labilir.</li> <li>\u00d6znitelik de\u011ferleri her zaman t\u0131rnak (\"\u2026\" veya '\u2026') i\u00e7inde olmal\u0131d\u0131r.</li> </ul>"},{"location":"programming/xml/#ozel-karakterler-ve-escaping","title":"\u00d6zel Karakterler ve Escaping","text":"<p>Baz\u0131 karakterler do\u011frudan yaz\u0131lamaz, yerlerine entity referanslar\u0131 kullan\u0131l\u0131r:</p> Entity Karakter A\u00e7\u0131klama <code>&amp;lt;</code> <code>&lt;</code> k\u00fc\u00e7\u00fckt\u00fcr <code>&amp;gt;</code> <code>&gt;</code> b\u00fcy\u00fckt\u00fcr <code>&amp;amp;</code> <code>&amp;</code> ampersand <code>&amp;quot;</code> <code>\"</code> \u00e7ift t\u0131rnak <code>&amp;apos;</code> <code>'</code> tek t\u0131rnak <pre><code>&lt;note&gt;Use &amp;lt;tag&amp;gt; to define elements &amp;amp; entities.&lt;/note&gt;\n</code></pre>"},{"location":"programming/xml/#yorumlar-ve-cdata","title":"Yorumlar ve CDATA","text":"<ul> <li>Yorum Sat\u0131r\u0131 <code>&lt;!-- Bu bir yorum sat\u0131r\u0131d\u0131r --&gt;</code></li> <li>CDATA b\u00f6lgesi: \u00d6zel karakterlerin ka\u00e7\u0131\u015f gerektirmeden yer ald\u0131\u011f\u0131 ham metin.  <pre><code>&lt;script&gt;&lt;![CDATA[\n    if (a &lt; b &amp;&amp; b &gt; c) { /* kod */ }\n]]&gt;&lt;/script&gt;\n</code></pre></li> </ul>"},{"location":"programming/xml/#beyaz-alan-whitespace-ve-bicimlendirme","title":"Beyaz Alan (Whitespace) ve Bi\u00e7imlendirme","text":"<ul> <li>XML bo\u015fluklar\u0131 korur; <code>&lt;a&gt; &lt;/a&gt;</code> i\u00e7inde iki bo\u015fluk ger\u00e7ek i\u00e7erik olur.</li> <li>Dosyay\u0131 k\u00fc\u00e7\u00fcltmek i\u00e7in t\u00fcm sat\u0131r sonu ve gereksiz bo\u015fluklar\u0131 kald\u0131rabilirsiniz (\u201cminify\u201d).</li> </ul>"},{"location":"programming/xml/#namespace-ad-alan","title":"Namespace (Ad Alan\u0131)","text":"<ul> <li>\u0130sim \u00e7ak\u0131\u015fmalar\u0131n\u0131 engellemek i\u00e7in kullan\u0131l\u0131r. K\u00f6k \u00f6\u011fede tan\u0131mlan\u0131r: <pre><code>&lt;root xmlns:h=\"http://www.w3.org/TR/html4\"\n      xmlns:f=\"https://www.w3schools.com/furniture\"&gt;\n  &lt;h:table&gt;\n    &lt;h:tr&gt;&lt;h:td&gt;Apples&lt;/h:td&gt;&lt;/h:tr&gt;\n  &lt;/h:table&gt;\n  &lt;f:table&gt;\n    &lt;f:name&gt;African Coffee Table&lt;/f:name&gt;\n  &lt;/f:table&gt;\n&lt;/root&gt;\n</code></pre></li> <li><code>xmlns:prefix=\"URI\": prefix:</code> ile ba\u015flayan \u00f6\u011feler bu URI kapsam\u0131nda tan\u0131mlan\u0131r.</li> <li>URI ger\u00e7ek bir web adresi olmak zorunda de\u011fil; tan\u0131mlama amac\u0131d\u0131r.</li> </ul>"},{"location":"programming/xml/#sema-ve-dtd-doctype","title":"\u015eema ve DTD (Doctype)","text":"<ul> <li>XML belgelerinin yap\u0131s\u0131n\u0131 tan\u0131mlayan mekanizmalard\u0131r:<ul> <li>DTD (Document Type Definition): <pre><code>&lt;!DOCTYPE note [\n  &lt;!ELEMENT note (to,from,heading,body)&gt;\n  &lt;!ELEMENT to (#PCDATA)&gt;\n  \u2026\n]&gt;\n</code></pre></li> <li>XSD (XML Schema Definition): <pre><code>&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n  &lt;xs:element name=\"note\"&gt;\n    &lt;xs:complexType&gt;\n      &lt;xs:sequence&gt;\n        &lt;xs:element name=\"to\" type=\"xs:string\"/&gt;\n        \u2026\n      &lt;/xs:sequence&gt;\n    &lt;/xs:complexType&gt;\n  &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre></li> </ul> </li> </ul>"},{"location":"programming/xml/#ipuclar-ve-en-iyi-uygulamalar","title":"\u0130pu\u00e7lar\u0131 ve En \u0130yi Uygulamalar","text":"<ul> <li>Tek bir root \u00f6\u011fe kullan\u0131n.</li> <li>Gereksiz derin i\u00e7 i\u00e7e ge\u00e7i\u015flerden ka\u00e7\u0131n\u0131n; okunabilirli\u011fi bozar.</li> <li>Boyutsal verileri (tarih, saat) par\u00e7alara ay\u0131rmak yerine k\u0131sa string format\u0131 tercih edin.</li> <li>Belgeleri minify ederek k\u00fc\u00e7\u00fclt\u00fcn, aktar\u0131m\u0131 h\u0131zland\u0131r\u0131n.</li> <li>Karma\u015f\u0131k veri yap\u0131lar\u0131 i\u00e7in <code>JSON</code> veya <code>YAML</code> de\u011ferlendirilebilir.</li> </ul>"},{"location":"robotics/gazebo/","title":"Gazebo","text":"<ul> <li><code>ign gazebo</code> \u2192 <code>gz sim</code></li> <li><code>ign topic</code> \u2192 <code>gz topic</code></li> <li><code>ign model</code> \u2192 <code>gz model</code></li> <li>Y\u00fckleme Dizini: GZ_SIM_SYSTEM_PLUGIN_PATH ortam de\u011fi\u015fkenine kendi plugin klas\u00f6r\u00fcn\u00fcz\u00fc ekleyin.</li> <li>GUI Plugin\u2019leri: GZ_GUI_PLUGIN_PATH i\u00e7inde aran\u0131r.</li> <li>Resource Path: GZ_SIM_RESOURCE_PATH t\u00fcm model, texture, plugin vb. yollar\u0131n\u0131 i\u00e7erir.</li> <li>World: Sahnedeki t\u00fcm \u00f6\u011feleri, GUI ayarlar\u0131n\u0131, plugin\u2019leri ve fiziksel ortam\u0131 tan\u0131mlar.</li> <li>Entity: Her nesneye (model, link, joint, \u0131\u015f\u0131k, kamera vb.) atanan benzersiz say\u0131 (ID).</li> <li>Component: Entity\u2019ye i\u015flevsellik ekler. \u00d6rne\u011fin:<ul> <li>Pose (konum/orientasyon)</li> <li>Name (g\u00f6r\u00fcn\u00fcrl\u00fck, se\u00e7me)</li> <li>Material (g\u00f6rselle\u015ftirme)</li> </ul> </li> </ul> <p>Not</p> <p>Config dosyalar\u0131: <code>~/.gz/sim/&lt;VERSION&gt;/</code> alt\u0131nda. Varsay\u0131lan world ayar\u0131 i\u00e7in GZ_SIM_SERVER_CONFIG_PATH kullan\u0131n.</p> <pre><code>gz sim     # GUI\u2019li/GUI\u2019siz sim\u00fclasyonu ba\u015flat\u0131r\ngz topic   # Topic y\u00f6netimi\ngz model   # Model sorgu ve kontrol\ngz service # Servis \u00e7a\u011fr\u0131lar\u0131\n</code></pre> <pre><code># GUI\u2019siz, sadece fizik sunucusu\ngz sim -s\n\n# GUI\u2019li \u00e7al\u0131\u015ft\u0131rma\ngz sim\n\n# S\u00fcr\u00fcm ve log ayarlar\u0131\ngz sim -v 4           # log seviyesi (0\u20134 aras\u0131)\ngz sim --iterations 50 model_photo_shoot.sdf\n</code></pre> <ul> <li><code>-s / --server-only</code> \u2192 sadece server mod</li> <li><code>-r / --run</code> \u2192 sahneyi \u00e7al\u0131\u015f\u0131r halde ba\u015flat\u0131r</li> <li><code>-v / --verbose</code> \u2192 log seviyesini belirler</li> <li><code>--iterations</code> N \u2192 SDF modelinden N farkl\u0131 a\u00e7\u0131da ekran g\u00f6r\u00fcnt\u00fcs\u00fc al\u0131r</li> </ul> Model Y\u00f6netimi<pre><code>gz model --list                          # Y\u00fckl\u00fc ve aktif modelleri listeler\ngz model -m &lt;model&gt; --pose               # Modelin d\u00fcnya i\u00e7indeki pozunu g\u00f6sterir\ngz model -m &lt;model&gt; --link               # Modelin t\u00fcm link\u2019lerini listeler\ngz model -m &lt;model&gt; --joint              # Modelin t\u00fcm joint\u2019lerini listeler\ngz model -m &lt;model&gt; --link &lt;link_name&gt;   # Belirli link\u2019in bile\u015fen bilgisi\ngz model -m &lt;model&gt; --joint &lt;joint_name&gt; # Belirli joint\u2019in bile\u015fen bilgisi\n</code></pre> Topic Y\u00f6netimi<pre><code>gz topic -l                         # T\u00fcm topic\u2019leri listeler\ngz topic -h                         # Yard\u0131m (kullan\u0131m detaylar\u0131)  \ngz topic -i -t /stats              # /stats topic meta verisini g\u00f6sterir\ngz topic -e -t /stats              # /stats topic mesajlar\u0131n\u0131 ekrana basar\ngz topic --echo --topic /stats -n 1  # Sadece ilk mesaj\u0131 g\u00f6sterir\n\ngz topic -t \"/cmd_vel\" -m gz.msgs.Twist -p \"linear: {x: 0.5}, angular: {z: 0.05}\"\n</code></pre> <ul> <li><code>-t / --topic</code> \u2192 topic ad\u0131</li> <li><code>-m / --msg-type</code> \u2192 mesaj tipi</li> <li><code>-p / --payload</code> \u2192 mesaj i\u00e7eri\u011fi (YAML format\u0131)</li> </ul> Topic Y\u00f6netimi<pre><code>gz service -l                          # T\u00fcm servisleri listeler\n# Sim\u00fclasyonu durdurma/ba\u015flatma\ngz service -s /world/&lt;world&gt;/control \\\n           --reqtype  gz.msgs.WorldControl \\\n           --reptype gz.msgs.Boolean \\\n           --timeout 3000 \\\n           --req 'pause: false'\n\n# Sim\u00fclasyonu s\u0131f\u0131rlama (reset)\ngz service -s /world/&lt;world&gt;/control \\\n           --reqtype  gz.msgs.WorldControl \\\n           --reptype gz.msgs.Boolean \\\n           --timeout 3000 \\\n           --req 'reset: {all: true}'\n\n# Kamera g\u00f6r\u00fcn\u00fcm\u00fc kontrol\u00fc\ngz service -s /gui/move_to/pose \\\n           --reqtype  gz.msgs.GUICamera \\\n           --reptype gz.msgs.Boolean \\\n           --timeout 5000 \\\n           --req 'name: \"box\", pose: {position: {x:1, y:23, z:5}, orientation: {x:0, y:0, z:0, w:1}}, projection_type: \"orbit\"'\n</code></pre> Format A\u00e7\u0131klama STL Sadece geometri (triang\u00fcl mesh) tan\u0131mlar; renk, doku i\u00e7ermez. OBJ Geometri + y\u00fczey normalleri + doku koordinatlar\u0131 destekler. DAE COLLADA; sahne, geometri, \u0131\u015f\u0131k, animasyon ve malzeme bilgisi i\u00e7erir."},{"location":"robotics/gazebo/#ros_gz_bridge-gazebo-ros-2","title":"ros_gz_bridge (Gazebo\u202f\u2194\u202fROS\u202f2)","text":"<p>ROS\u202f2 ile Gazebo aras\u0131nda mesaj, servis ve action k\u00f6pr\u00fcs\u00fc kurar.</p> <pre><code>ros2 run ros_gz_bridge parameter_bridge /chatter@std_msgs/msg/String@ignition.msgs.StringMsg\n</code></pre> <ul> <li><code>/topic@ROS_MSG_TYPE@GZ_MSG_TYPE</code> format\u0131<ul> <li><code>@</code> \u00e7ift y\u00f6nl\u00fc (publish ve subscribe)</li> <li><code>]</code> Gazebo \u2192 ROS\u202f2</li> <li><code>[</code> ROS\u202f2 \u2192 Gazebo</li> </ul> </li> </ul>"},{"location":"robotics/gazebo/#video-kayd-ve-scene-broadcaster","title":"Video Kayd\u0131 ve Scene Broadcaster","text":"Scene Broadcaster<pre><code>&lt;plugin filename=\"gz-sim-scene-broadcaster-system\" name=\"gz::sim::systems::SceneBroadcaster\"&gt;\n  &lt;state_hertz&gt;25&lt;/state_hertz&gt;\n&lt;/plugin&gt;\n</code></pre> <ul> <li><code>state_hertz</code> \u2192 1 saniyede ka\u00e7 kez sahneyi g\u00fcncelleyece\u011fi (Hz)</li> </ul> Video Recorder GUI Plugin<pre><code>&lt;plugin filename=\"VideoRecorder\" name=\"VideoRecorder\"&gt;\n  &lt;gz-gui&gt;\n    &lt;property key=\"resizable\" type=\"bool\"&gt;false&lt;/property&gt;\n    &lt;property key=\"width\"     type=\"double\"&gt;800&lt;/property&gt;\n    &lt;property key=\"height\"    type=\"double\"&gt;600&lt;/property&gt;\n  &lt;/gz-gui&gt;\n  &lt;record_video&gt;\n    &lt;use_sim_time&gt;true&lt;/use_sim_time&gt;\n    &lt;lockstep&gt;true&lt;/lockstep&gt;\n    &lt;bitrate&gt;4000000&lt;/bitrate&gt;\n  &lt;/record_video&gt;\n&lt;/plugin&gt;\n</code></pre> Triggered Publisher System<pre><code>&lt;plugin filename=\"gz-sim-triggered-publisher-system\"\n        name=\"gz::sim::systems::TriggeredPublisher\"&gt;\n  &lt;input type=\"gz.msgs.Int32\" topic=\"/keyboard/keypress\"&gt;\n    &lt;match field=\"data\"&gt;16777235&lt;/match&gt;\n  &lt;/input&gt;\n  &lt;output type=\"gz.msgs.Twist\" topic=\"/cmd_vel\"&gt;\n    linear: {x: 0.5}, angular: {z: 0.0}\n  &lt;/output&gt;\n&lt;/plugin&gt;\n</code></pre> <ul> <li>input \u2192 dinlenecek topic ve mesaj alan\u0131</li> <li>match \u2192 e\u015fle\u015fme de\u011feri</li> <li>output \u2192 \u00e7\u0131k\u0131\u015f topic\u2019i ve mesaj i\u00e7eri\u011fi</li> </ul>"},{"location":"robotics/gazebo/#sdf","title":"SDF","text":"<ul> <li>K\u00f6pr\u00fcleme (Tag) Bi\u00e7imleri<ul> <li>Uzun bi\u00e7im: <code>&lt;tag&gt;\u2026&lt;/tag&gt;</code></li> <li>K\u0131sa bi\u00e7im (self\u2011closing): <code>&lt;tag/&gt;</code> veya <code>&lt;tag /&gt;</code></li> </ul> </li> </ul> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;sdf version=\"1.8\"&gt;\n  \u2026 i\u00e7erik \u2026\n&lt;/sdf&gt;\n</code></pre> World ve Include<pre><code>&lt;sdf version=\"1.8\"&gt;\n  &lt;world name=\"first_world\"&gt;\n    &lt;!-- Ba\u015fka bir modeli bu d\u00fcnyaya eklemek i\u00e7in --&gt;\n    &lt;include&gt;\n      &lt;uri&gt;model://sum&lt;/uri&gt;  &lt;!-- model://&lt;model_ad\u0131&gt; bi\u00e7iminde URI --&gt;\n    &lt;/include&gt;\n  &lt;/world&gt;\n&lt;/sdf&gt;\n</code></pre> <ul> <li><code>&lt;world&gt;</code>: Sahnenin tamam\u0131n\u0131 tan\u0131mlar (zemin, \u0131\u015f\u0131klar, plugin\u2019ler vb.).</li> <li><code>&lt;include&gt;</code>: \u00d6nceden tan\u0131ml\u0131 bir modeli veya ba\u015fka bir world dosyas\u0131n\u0131 i\u00e7e aktar\u0131r.</li> <li><code>&lt;uri&gt;</code>: Y\u00fcklenecek modelin yolu (\u00f6rn. model://sum, model://pioneer2dx).</li> </ul>"},{"location":"robotics/gazebo/#model-link-ve-joint","title":"Model, Link ve Joint","text":"<ul> <li><code>&lt;model&gt;</code> name \u00f6zelli\u011fi ile tan\u0131mlan\u0131r.<ul> <li>\u0130\u00e7inde bir veya birden \u00e7ok <code>&lt;link&gt;, &lt;joint&gt;, &lt;pose&gt;</code> vb. bar\u0131nd\u0131r\u0131r.</li> </ul> </li> </ul> <pre><code>&lt;model name=\"robot_model\"&gt;\n  &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;      &lt;!-- Modelin d\u00fcnya koordinatlar\u0131ndaki pose\u2019u --&gt;\n  &lt;link name=\"link1\"&gt;\n    &lt;pose relative_to=\"robot_model\"&gt;0 0 0 0 0 0&lt;/pose&gt;\n  &lt;/link&gt;\n  &lt;link name=\"link2\"/&gt;          &lt;!-- pose verilmezse varsay\u0131lan konumda --&gt;\n&lt;/model&gt;\n</code></pre> <ul> <li> <p><code>&lt;link&gt;</code> Modelin fiziksel par\u00e7as\u0131d\u0131r (k\u00fctle, inertia, collision, visual).</p> <ul> <li>Her link\u2019in kendi <code>&lt;pose&gt;</code>\u2019u olabilir.</li> </ul> </li> <li> <p><code>&lt;joint&gt;</code> \u0130ki link aras\u0131nda hareketi sa\u011flar.</p> <ul> <li>type \u00f6zelli\u011fi ile farkl\u0131 eklem mekanizmalar\u0131 se\u00e7ilir:</li> </ul> </li> </ul> T\u00fcr A\u00e7\u0131klama <code>fixed</code> Hi\u00e7 hareket etmez. <code>revolute</code> Tek eksende s\u0131n\u0131rl\u0131 d\u00f6nme. <code>continuous</code> Tek eksende s\u0131n\u0131rs\u0131z d\u00f6nme. <code>prismatic</code> Tek eksende s\u0131n\u0131rs\u0131z \u00f6teleme. <code>ball</code> \u00dc\u00e7 eksende serbest d\u00f6nme (k\u00fcresel). <code>universal</code> \u0130ki eksende serbest d\u00f6nme. <code>screw</code> E\u015fzamanl\u0131 \u00f6teleme ve d\u00f6nme (vida hareketi). <pre><code>&lt;joint name=\"joint1\" type=\"revolute\"&gt;\n  &lt;parent&gt;link1&lt;/parent&gt;       &lt;!-- Sabit par\u00e7a --&gt;\n  &lt;child&gt;link2&lt;/child&gt;         &lt;!-- Hareket eden par\u00e7a --&gt;\n  &lt;axis&gt;\n    &lt;xyz&gt;0 0 1&lt;/xyz&gt;           &lt;!-- D\u00f6n\u00fc\u015f ekseni (x,y,z) &lt;axis xyz=\"0 0 1\"/&gt; --&gt;\n  &lt;/axis&gt;\n&lt;/joint&gt;\n</code></pre>"},{"location":"robotics/gazebo/#pozisyon-ve-yon-pose-origin","title":"Pozisyon ve Y\u00f6n (Pose &amp; Origin)","text":"<ul> <li><code>&lt;pose&gt;</code>: Alt\u0131 elemanl\u0131 liste\u2014x y z roll pitch yaw (birim metre ve radyan).</li> <li>relative_to ile ba\u015fka bir frame\u2019e g\u00f6re tan\u0131mlanabilir:</li> </ul> <pre><code>&lt;pose&gt;0 0 1 0 0 0&lt;/pose&gt;  \n&lt;pose relative_to=\"world\"&gt;1 2 0.5 0 0 1.57&lt;/pose&gt;\n\n&lt;!--&lt;origin&gt; (URDF benzeri k\u0131sa form, SDF\u2019de de \u00e7al\u0131\u015f\u0131r) --&gt;\n&lt;origin xyz=\"0 0 0.5\" rpy=\"0 0 0.785\"/&gt;\n</code></pre> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;sdf version=\"1.8\"&gt;\n  &lt;world name=\"example_world\"&gt;\n    &lt;include&gt;\n      &lt;uri&gt;model://house&lt;/uri&gt;\n    &lt;/include&gt;\n\n    &lt;model name=\"robot\"&gt;\n      &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;\n\n      &lt;link name=\"base_link\"&gt;\n        &lt;pose relative_to=\"robot\"&gt;0 0 0 0 0 0&lt;/pose&gt;\n      &lt;/link&gt;\n\n      &lt;link name=\"wheel_link\"/&gt;  &lt;!-- default pose --&gt;\n\n      &lt;joint name=\"wheel_joint\" type=\"continuous\"&gt;\n        &lt;parent&gt;base_link&lt;/parent&gt;\n        &lt;child&gt;wheel_link&lt;/child&gt;\n        &lt;axis&gt;\n          &lt;xyz&gt;0 1 0&lt;/xyz&gt;\n        &lt;/axis&gt;\n      &lt;/joint&gt;\n    &lt;/model&gt;\n  &lt;/world&gt;\n&lt;/sdf&gt;\n</code></pre>"},{"location":"robotics/px4/","title":"PX4","text":"Kurulum ve \u00d6n Ayarlar<pre><code># --recursive alt mod\u00fcllerinin (submodules) de otomatik olarak klonlanmas\u0131n\u0131 sa\u011flar.\ngit clone https://github.com/PX4/PX4-Autopilot.git --recursive\n\n# `--no-nuttx` nuttx y\u00fcklemesi kapat\u0131lm\u0131\u015f olur\n# `--no-sim-tools` sim\u00fclasyon ortam\u0131 kapat\u0131lm\u0131\u015f olur.\nbash ./PX4-Autopilot/Tools/setup/ubuntu.sh\nbash ./PX4-Autopilot/Tools/setup/ubuntu.sh --no-sim-tools --no-nuttx\n\n# Ek ba\u011f\u0131ml\u0131l\u0131klar\nsudo apt-get install protobuf-compiler libeigen3-dev libopencv-dev -y\n\n# Olu\u015fabilicek hata durumunda \ngit submodule update --recursive\nmake distclean\n\n# region 'flash' overflowed by XXXX bytes y\u00fcklenen dosyan\u0131n \n# boyutu b\u00fcy\u00fck olmas\u0131 durumunda kar\u015f\u0131lan\u0131r.\n</code></pre> <pre><code>make [VENDOR_][MODEL][_VARIANT] [VIEWER_MODEL_DEBUGGER_WORLD]\n</code></pre> <ul> <li>VENDOR: Kart\u0131n donan\u0131m \u00fcreticisini belirtir.</li> <li>HARDWARE_MODEL: Ger\u00e7ek donan\u0131m kart\u0131 modelini se\u00e7er.</li> <li>VARIANT: Kart\u0131n belirli yap\u0131land\u0131rmas\u0131n\u0131 (bootloader, firmware \u00e7e\u015fidi vb.) belirtir.</li> <li>VIEWER: Sim\u00fclasyonu g\u00f6rsel olarak hangi sim\u00fclat\u00f6rde izleyece\u011finizi se\u00e7er.</li> <li>VEHICLE_MODEL: Sim\u00fclat\u00f6r i\u00e7inde kullan\u0131lacak ara\u00e7 tipini belirler.</li> <li>DEBUGGER: Hata ay\u0131klama arac\u0131 tercihini yapar.</li> <li>WORLD: Sim\u00fclasyonun ge\u00e7irilece\u011fi \u00e7evre (d\u00fcnya) dosyas\u0131n\u0131 se\u00e7er.</li> </ul> Sim\u00fclasyon<pre><code>make px4_sitl gz_x500\n\n# Sim\u00fclasyon ortam\u0131 GUI a\u00e7\u0131lmaz\nHEADLESS=1 make px4_sitl gz_x500 \n\n# ROS2 ile harbele\u015fmesini sa\u011flar\nMicroXRCEAgent udp4 -p 8888\n\n# Kart \u00fczerinden gelen verileri ROS2 olarak yay\u0131nlanmas\u0131 sa\u011flan\u0131r.\nsudo MicroXRCEAgent serial --dev /dev/AMA0 -b 921600\nsudo MicroXRCEAgent serial --dev /dev/ttyUSB0 -b 921600\n\nmake px4_sitl list_vmd_make_targets  # T\u00fcm se\u00e7enekleri listeler.\n\n# Varsay\u0131lan de\u011ferler oldu\u011fu i\u00e7in baz\u0131 k\u0131s\u0131mlar _ ile bo\u015f b\u0131rak\u0131labilir.\ngazebo-classic___gdb = gazebo-classic_iris_gdb\n\nmake px4_fmu-v5_default               # Kodu derlenmesini sa\u011flar.\nmake px4_fmu-v5_default upload        # Kodun karta y\u00fcklenmesini sa\u011flar.\n\nmake list_config_targets             # Kartlar\u0131n listelenmesini sa\u011flar.\nmake px4_fmu-v5_default boardconfig  # Paketlerde ayarlama yap\u0131lmas\u0131n\u0131 sa\u011flar.\ngit submodule update --init --recursive\n\nCONFIG_EXAMPLES_PX4_SIMPLE_APP=y     # Manuel ayarlamalar\u0131n yap\u0131lmas\u0131\n</code></pre> <ul> <li><code>_default</code> kavram\u0131 iste\u011fe ba\u011fl\u0131d\u0131r. Bu kavram belirli \u00f6zelliklerin desteklenmesi veya atlanmas\u0131 gibi bir \u00fcr\u00fcn yaz\u0131l\u0131m\u0131\u00a0yap\u0131land\u0131rmas\u0131n\u0131 belirtir.</li> </ul>"},{"location":"robotics/px4/#komut-satr-kullanm","title":"Komut Sat\u0131r\u0131 Kullan\u0131m\u0131","text":"<pre><code># T\u00fcm parametreleri listeler\nparam show \n\n# Varsay\u0131lan de\u011ferlerini g\u00f6sterir.\nparam show -c\n\n# Belirli parametreyin de\u011ferini g\u00f6sterir\nparam show RC_MAP_A*\n\n# Parametrelerini kaydeder\nparam save\n\n# Belirli bir konuma kaydeder\nparam save /fs/microsd/vtol_param_backup\n\nparam load\nparam import\n\n# Parametreleri dosyan\u0131n kaydedildi\u011fi zamana s\u0131f\u0131rla\nparam load /fs/microsd/vtol_param_backup\n# \u0130ste\u011fe ba\u011fl\u0131 olarak parametreleri kaydedin (y\u00fckle birlikte otomatik olarak yap\u0131lmaz)\nparam save\n</code></pre>"},{"location":"robotics/ros2/","title":"ROS2","text":"<ul> <li>ROS (Robot Operating System): Robot uygulamalar\u0131 geli\u015ftirmek i\u00e7in sundu\u011fu mesajla\u015fma altyap\u0131s\u0131 ve ara\u00e7 setiyle, farkl\u0131 yaz\u0131l\u0131m bile\u015fenlerinin (d\u00fc\u011f\u00fcm, node) birbirleriyle kolayca ileti\u015fim kurmas\u0131n\u0131 sa\u011flar.</li> </ul> \u00d6zellik ROS 1 ROS\u202f2 Mimari Merkezi (master node) Merkeziyetsiz (no master) Ger\u00e7ek Zaman Deste\u011fi S\u0131n\u0131rl\u0131 DDS tabanl\u0131, ger\u00e7ek zaman yetenekli \u00c7oklu Dil Deste\u011fi C++, Python C++, Python, Java, Rust, \u2026 A\u011f Deste\u011fi Ayn\u0131 a\u011fda (multicast) Farkl\u0131 a\u011flarda firewall dostu G\u00fcvenlik Ek eklentiler gerekir DDS Security eklentisi <ul> <li>Yeni bir paket olu\u015fturdu\u011funuzda, <code>src/</code> alt\u0131nda dil fark etmeksizin (C++, Python vb.) <code>ros2 pkg create</code> ile paket iskeletleri olu\u015fturulur.</li> <li>Bir ROS/ROS\u202f2 \u00e7al\u0131\u015fma alan\u0131 (workspace), genellikle \u015fu dizinleri i\u00e7erir:</li> </ul> <pre><code>&lt;workspace&gt;/\n\u251c\u2500 src/        # Paket kaynak kodlar\u0131\n\u251c\u2500 build/      # Derleme dosyalar\u0131\n\u251c\u2500 install/    # Kurulum (derlenmi\u015f paketler)\n\u2514\u2500 log/        # Derleyici ve runtime loglar\u0131\n</code></pre> <ul> <li>RCL: \u201cROS Client Library\u201d</li> <li>RCLCPP / RCLPY: C++ ve Python i\u00e7in \u00fcst katman k\u00fct\u00fcphaneleri.</li> <li> <p>Mesajla\u015fma, parametre, zamanlay\u0131c\u0131, servis ve aksiyon gibi temel API\u2019leri sunar.</p> </li> <li> <p>RQT: Qt tabanl\u0131 GUI panelleri; topic\u2019ler, parametreler, servislere eri\u015fim ve grafik \u00e7izimler yapar.</p> </li> <li>ros2 doctor --report: Sistem yap\u0131land\u0131rman\u0131z\u0131 analiz eder, eksik ba\u011f\u0131ml\u0131l\u0131klar\u0131 ve uyumsuzluklar\u0131 raporlar.</li> </ul> <pre><code>NETWORK CONFIGURATION\n\nPLATFORM INFORMATION\n\nRMW MIDDLEWARE\n\nROS 2 INFORMATION\n\nTOPIC LIST\n</code></pre>"},{"location":"robotics/ros2/#logging-gunlukleme","title":"Logging (G\u00fcnl\u00fckleme)","text":"<ul> <li>Log seviyeleri: <code>DEBUG, INFO, WARN, ERROR, FATAL</code>. <pre><code>RCLCPP_INFO(node-&gt;get_logger(), \"Bilgi mesaj\u0131\");\nRCLCPP_WARN(node-&gt;get_logger(), \"Uyar\u0131 mesaj\u0131\");\nRCLCPP_ERROR(node-&gt;get_logger(), \"Hata mesaj\u0131\");\nRCLCPP_DEBUG_STREAM(node-&gt;get_logger(), \"Detay: \" &lt;&lt; variable);\n</code></pre></li> </ul> Komut Sat\u0131rlar\u0131<pre><code>ros2 run &lt;pkg&gt; &lt;exe&gt; --ros-args --log-level debug\nros2 run &lt;pkg&gt; &lt;exe&gt; --ros-args --log-level &lt;node_name&gt;:=warn\n</code></pre> <ul> <li>Log dosyalar\u0131 <code>~/.ros/log/</code> alt\u0131nda saklan\u0131r <code>rqt_logging</code> ile de izleyebilirsiniz.</li> </ul>"},{"location":"robotics/ros2/#dds-ve-domain-id","title":"DDS ve DOMAIN\u202fID","text":"<ul> <li>ROS\u202f2, DDS (Data Distribution Service) protokol\u00fcn\u00fc kullan\u0131r.</li> <li> <p>Domain ID: Ayn\u0131 DDS domain\u2019inde olan d\u00fc\u011f\u00fcmler birbirini g\u00f6r\u00fcr.</p> <ul> <li>Varsay\u0131lan: <code>0</code></li> <li>G\u00fcvenli aral\u0131k: <code>0\u2013101</code> (Linux port \u00e7ak\u0131\u015fmalar\u0131ndan ka\u00e7\u0131nmak i\u00e7in).</li> <li>DD\u202fS UDP port aral\u0131\u011f\u0131: <code>0\u201365535</code> \u2192 Domain ID <code>0\u2013232</code> \u00f6nerilir. <pre><code>export ROS_DOMAIN_ID=42\n# Ge\u00e7erli aral\u0131\u011f\u0131 kontrol\ncat /proc/sys/net/ipv4/ip_local_port_range\n</code></pre></li> </ul> </li> <li> <p><code>export ROS_LOCALHOST_ONLY=1</code> D\u00fc\u011f\u00fcmler yaln\u0131zca localhost \u00fczerinden ileti\u015fim kurar; di\u011fer cihazlardan eri\u015fim engellenir.</p> </li> </ul>"},{"location":"robotics/ros2/#derleme-zamannda-hata-ayklama","title":"Derleme Zaman\u0131nda Hata Ay\u0131klama","text":"<ul> <li><code>colcon build --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo</code> <ul> <li>RelWithDebInfo: Optimize edilmi\u015f kodda hata ay\u0131klama sembollerini tutar.</li> </ul> </li> <li> <p><code>ros2 run --prefix \"gdbserver localhost:3000\" &lt;pkg_name&gt; &lt;node_executable&gt;</code></p> <ul> <li>gdbserver: Kodunuzu dinleyen bir sunucu gibi \u00e7al\u0131\u015f\u0131r.</li> <li>localhost:3000: VS\u202fCode veya ba\u015fka bir istemci bu port \u00fczerinden hata ay\u0131klamay\u0131 \u00fcstlenir.</li> </ul> </li> <li> <p>vs code launch.json  dosyas\u0131: launch.json<pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"ROS2 C++ Remote Debug\",\n      \"type\": \"cppdbg\",\n      \"request\": \"launch\",\n      \"miDebuggerServerAddress\": \"localhost:3000\",\n      \"miDebuggerPath\": \"/usr/bin/gdb\",\n      \"program\": \"${workspaceFolder}/install/&lt;pkg_name&gt;/lib/&lt;pkg_name&gt;/&lt;node_executable&gt;\",\n      \"cwd\": \"${workspaceFolder}\",\n      \"stopAtEntry\": false,\n      \"environment\": [],\n      \"externalConsole\": false\n    }\n  ]\n} \n</code></pre></p> </li> <li> <p>program: Hata ay\u0131klamak istedi\u011finiz executable\u2019\u0131n tam yolu (colcon install sonras\u0131).</p> </li> <li>miDebuggerServerAddress: gdbserver\u2019\u0131n dinledi\u011fi adres ve port.</li> <li> <p>Di\u011fer ayarlar (stopAtEntry, environment) tercihinize g\u00f6re d\u00fczenlenebilir.</p> </li> <li> <p>VS\u202fCode\u2019da <code>Run &amp; Debug</code> panelinden bu konfig\u00fcrasyonu se\u00e7ip ba\u015flat\u0131n. Kod, gdbserver \u00fczerinden ba\u011flanacak ve breakpoint\u2019lerinizde duracakt\u0131r.</p> </li> <li> <p>Men\u00fcden Terminal \u2192 Run Build Task ya da <code>Ctrl+Shift+P</code> tasks.json<pre><code>{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"Build Release\",\n      \"type\": \"shell\",\n      \"command\": \"source /opt/ros/${command:rosdistro}/setup.bash &amp;&amp; colcon build --symlink-install\"\n    },\n    {\n      \"label\": \"Build Debug\",\n      \"type\": \"shell\",\n      \"command\": \"source /opt/ros/${command:rosdistro}/setup.bash &amp;&amp; colcon build --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo --symlink-install\"\n    }\n  ]\n} \n</code></pre></p> </li> </ul>"},{"location":"robotics/ros2/#dds-katmann-secme","title":"DDS Katman\u0131n\u0131 Se\u00e7me","text":"<pre><code>export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\n# veya\nexport RMW_IMPLEMENTATION=rmw_fastrtps_cpp\n</code></pre>"},{"location":"robotics/ros2/#paket-olusturma-ve-calstrma","title":"Paket Olu\u015fturma ve \u00c7al\u0131\u015ft\u0131rma","text":"<ol> <li> <p>Ortam\u0131 Haz\u0131rlama (Setup): <code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc</code></p> .bashrc<pre><code># ROS 2 da\u011f\u0131t\u0131m\u0131n\u0131 y\u00fckle\nsource /opt/ros/humble/setup.bash\n\n# Colcon argcomplete ile otomatik tamamlama (tab ile paket/komut \u00f6nerisi)\nsource /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash\n</code></pre> <p>Not</p> <p><code>colcon build</code> komutunu sisteme \u201ceklemek\u201d zorunlu de\u011fil; ancak argcomplete sayesinde paket adlar\u0131 ve d\u00fc\u011f\u00fcm isimleri tab tu\u015fuyla tamamlan\u0131r.</p> </li> <li> <p>Ba\u011f\u0131ml\u0131l\u0131klar\u0131 Kurma (rosdep): \u00c7al\u0131\u015fma alan\u0131n\u0131zdaki paketlerin sistemdeki eksik k\u00fct\u00fcphane ve ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 otomatik kurmak i\u00e7in</p> <ul> <li><code>--from-paths src</code> \u2192 yaln\u0131zca sizin src/ i\u00e7indeki paketleri tarar.</li> <li><code>--ignore-src</code> \u2192 kaynak kodu de\u011fil, sistem paketlerini y\u00fckler.</li> </ul> <pre><code>rosdep update\nrosdep install --from-paths src --ignore-src --rosdistro humble -y\n</code></pre> </li> <li> <p>Paket Olu\u015fturma:</p> C++Python <pre><code>    ros2 pkg create --build-type ament_cmake --node-name my_node --dependencies rclcpp  my_cpp_pkg\n</code></pre> <pre><code>    ros2 pkg create --build-type ament_python --node-name my_node --dependencies rclpy  my_cpp_pkg\n</code></pre> <p>Not</p> <p>E\u011fer <code>--node-name</code> parametresi verilmezse, sadece paket klas\u00f6r\u00fc ve temel dosyalar (package.xml, CMakeLists.txt veya setup.py) olu\u015fturulur.</p> Lisans ve Di\u011fer Optiyonlar<pre><code>ros2 pkg create --build-type ament_cmake --node-name dstar_node --license Apache-2.0 --dependencies rclcpp std_msgs dstar_package\n</code></pre> <ul> <li><code>--license</code> \u2192 otomatik olarak package.xml i\u00e7ine lisans etiketi ekler.</li> <li><code>--dependencies</code> \u2192 package.xml ve (C++) CMakeLists.txt dosyas\u0131na gerekli k\u00fct\u00fcphane tan\u0131mlamalar\u0131n\u0131 ekler.</li> </ul> </li> <li> <p>Derleme ve Paket Se\u00e7imi:</p> <pre><code>colcon build\ncolcon build --packages-select my_cpp_pkg my_py_pkg\ncolcon build --symlink-install --packages-select my_py_pkg\n\ncolcon graph  # Hangi paketin hangi pakete ba\u011fl\u0131 oldu\u011funu \u00e7izimle g\u00f6sterir.\n</code></pre> </li> <li> <p>\u00c7al\u0131\u015fma Alan\u0131n\u0131 Aktif Etme:</p> <pre><code># K\u00f6k dizinde:\nsource install/setup.bash\n\n# Alternatif olarak, yaln\u0131zca bu dizin i\u00e7in:\nsource install/local_setup.bash\n</code></pre> </li> <li> <p>D\u00fc\u011f\u00fcmleri \u00c7al\u0131\u015ft\u0131rma ve Remap:</p> <pre><code># Basit \u00c7al\u0131\u015ft\u0131rma\nros2 run my_cpp_pkg my_node_executable\nros2 run my_py_pkg my_python_node\n\n# Launch Dosyalar\u0131\nros2 launch my_cpp_pkg my_launch_file.launch.py\n\n# Remapping (Yeniden Adland\u0131rma) Node ad\u0131n\u0131 de\u011fi\u015ftirme:\nros2 run demo_nodes_cpp talker --ros-args -r __node:=new_talker\n\n# Topic/Service ad\u0131n\u0131 de\u011fi\u015ftirme:\nros2 run my_pkg talker --ros-args -r /old_topic:=/new_topic -r /old_service:=/my_service\n</code></pre> <p>Not</p> <pre><code>-r k\u0131sa ad\u0131yla da kullan\u0131labilir. Remap, ayn\u0131 paketi birden \u00e7ok kez farkl\u0131 isimlerle \u00e7al\u0131\u015ft\u0131rman\u0131z\u0131 sa\u011flar.\n</code></pre> </li> <li> <p>G\u00f6rselle\u015ftirme: RQT <pre><code>rqt\nrqt_graph\n</code></pre></p> </li> </ol>"},{"location":"robotics/ros2/#node","title":"Node","text":"<p>Her biri tek bir g\u00f6revi (sens\u00f6r okuma, kontrol komutu \u00fcretme, g\u00f6r\u00fcnt\u00fc i\u015fleme vb.) yerine getiren ba\u011f\u0131ms\u0131z y\u00fcr\u00fct\u00fclebilir bile\u015fenlerdir. Diledi\u011finiz programlama dilinde (C++, Python, Rust\u2026) yazabilirsiniz; ROS\u202f2, bu d\u00fc\u011f\u00fcmlerin haberle\u015fmesini sa\u011flar.</p> <pre><code>ros2 node list                # Aktif t\u00fcm node'lar\u0131 listeler\nros2 node info /[node_name]   # Tek bir node hakk\u0131nda ayr\u0131nt\u0131l\u0131 bilgi verir\n</code></pre>"},{"location":"robotics/ros2/#topic","title":"Topic","text":"<p>Publish/Subscribe modeline dayal\u0131, asenkron veri ak\u0131\u015f kanal\u0131d\u0131r. Birden fazla publisher ve subscriber olabilir; g\u00f6nderici beklemeksizin mesaj\u0131n\u0131 yay\u0131nlar.</p> Temel Komutlar<pre><code>ros2 topic list                    # T\u00fcm aktif topic\u2019leri listeler\nros2 topic list -t                 # Tip bilgisiyle beraber listeler\nros2 topic echo /[topic]           # Yay\u0131nlanan mesajlar\u0131 ger\u00e7ek zamanl\u0131 g\u00f6sterir\nros2 topic info /[topic]           # Ka\u00e7 publisher/subscriber oldu\u011funu s\u00f6yler\nros2 topic hz /[topic]             # Ortalama yay\u0131n h\u0131z\u0131n\u0131 (Hz) \u00f6l\u00e7er\nros2 topic bw /[topic]             # Bant geni\u015fli\u011fi kullan\u0131m\u0131n\u0131 g\u00f6sterir\n</code></pre> Mesaj Yay\u0131nlama (Publisher)<pre><code># Tek seferlik\nros2 topic pub /chatter std_msgs/msg/String \"data: 'Merhaba ROS2'\" --once\n\n# S\u00fcrekli yay\u0131n, \u00f6rn. 10\u202fHz\nros2 topic pub /cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 1.0}, angular: {z: 0.5}}\" -r 10\n</code></pre> Mesaj T\u00fcr\u00fc \u0130nceleme<pre><code>ros2 interface show std_msgs/msg/String\n</code></pre>"},{"location":"robotics/ros2/#service-hizmet","title":"Service (Hizmet)","text":"<p>Request\u2013Response modeliyle \u00e7al\u0131\u015f\u0131r: client, service\u2019e istek (request) g\u00f6nderir; server i\u015flem yap\u0131p cevap (response) d\u00f6ner. Senkron ileti\u015fim gerektiren durumlar i\u00e7in idealdir.</p> Listeleme ve T\u00fcr<pre><code>ros2 service list              # T\u00fcm servisleri listeler\nros2 service list -t           # Tip bilgisiyle beraber listeler\nros2 service type /[service]   # Bir servisin veri tipini g\u00f6sterir\n</code></pre> Servis \u00c7a\u011fr\u0131s\u0131 (Client)<pre><code>ros2 service call /clear std_srvs/srv/Empty \"{}\"\nros2 service call /spawn turtlesim/srv/Spawn \"{x: 2.0, y: 3.0, theta: 1.57, name: 'turtle2'}\"\n</code></pre> Servis Mesaj \u015eemas\u0131<pre><code>ros2 interface show turtlesim/srv/Spawn\n</code></pre> <p>Not</p> <p>\u00c7\u0131kt\u0131da <code>---</code> ile ayr\u0131lm\u0131\u015f b\u00f6l\u00fcm, request ve response alanlar\u0131n\u0131 g\u00f6sterir.</p>"},{"location":"robotics/ros2/#action","title":"Action","text":"<p>Goal\u2013Feedback\u2013Result modeline sahip, uzun s\u00fcreli i\u015flemleri kontrol etmek i\u00e7in tasarlanm\u0131\u015ft\u0131r. \u0130ptal edilebilir ve ara a\u015fama bilgilerini (<code>feedback</code>) alabilirsiniz.</p> Listeleme ve Bilgi<pre><code>ros2 action list               # T\u00fcm action\u2019lar\u0131 listeler\nros2 action list -t            # Tip bilgisiyle beraber listeler\nros2 action info /[action]     # Detayl\u0131 tip ve aray\u00fcz bilgisi\n</code></pre> Action Kullan\u0131m\u0131<pre><code>ros2 action send_goal /fibonacci example_interfaces/action/Fibonacci \"{order: 10}\"\n</code></pre> <ul> <li><code>send_goal</code> ile istek g\u00f6nderdikten sonra:<ul> <li>feedback ve result \u00e7\u0131kt\u0131lar\u0131 otomatik g\u00f6sterilir.</li> <li>\u0130sterseniz <code>--feedback</code> ve <code>--result</code> bayraklar\u0131yla ekstra kontroller yapabilirsiniz.</li> </ul> </li> </ul>"},{"location":"robotics/ros2/#launch","title":"Launch","text":"<p>Birden fazla d\u00fc\u011f\u00fcm\u00fc tek komutla ba\u015flatman\u0131z\u0131 sa\u011flayan Python tabanl\u0131 betiklerdir (<code>.launch.py</code>). Parametre aktar\u0131m\u0131, remap, ns (namespace) olu\u015fturma, ko\u015fullu ba\u015flatma gibi ileri d\u00fczey senaryolar\u0131 destekler.</p> <pre><code>ros2 launch my_pkg bringup.launch.py\n</code></pre> <pre><code>from launch import LaunchDescription\nfrom launch_ros.actions import Node\n\ndef generate_launch_description():\n    return LaunchDescription([\n        Node(\n            package='demo_nodes_cpp',\n            executable='talker',\n            name='my_talker',\n            remappings=[('/chatter', '/my_chatter')],\n            parameters=[{'use_sim_time': True}],\n            output='screen'\n        ),\n        Node(\n            package='demo_nodes_cpp',\n            executable='listener',\n            name='my_listener',\n            output='screen'\n        )\n    ])\n</code></pre> <ul> <li><code>remappings</code> ile topic veya node isimlerini \u00e7al\u0131\u015fma zaman\u0131nda de\u011fi\u015ftirebilirsiniz.</li> <li><code>parameters</code> listesiyle YAML yerine do\u011frudan Python dict kullanabilirsiniz.</li> <li><code>output='screen'</code> veya <code>output='log'</code> ile \u00e7\u0131kt\u0131n\u0131n y\u00f6n\u00fcn\u00fc belirleyin.</li> <li><code>respawn=True</code> parametresi ile node\u2019un \u00e7\u00f6kt\u00fc\u011f\u00fcnde otomatik yeniden ba\u015flat\u0131lmas\u0131n\u0131 sa\u011flayabilirsiniz.</li> </ul>"},{"location":"robotics/ros2/#mesaj-msg-ve-servis-srv-dosyalar","title":"Mesaj (.msg) ve Servis (.srv) Dosyalar\u0131","text":"<ul> <li>\u0130simlendirme Kurallar\u0131: Dosya ad\u0131 bo\u015fluk i\u00e7ermez; kelime ayr\u0131m\u0131 i\u00e7in PascalCase (her kelime b\u00fcy\u00fck harfle ba\u015flar) tercih edilir <code>Position2D.msg, ComputePath.srv</code></li> <li>Paket i\u00e7indeki referanslarda alt \u00e7izgi (_) kullan\u0131l\u0131r <code>my_robot_interfaces/msg/Position2D.msg, my_robot_interfaces/srv/ComputePath.srv</code></li> </ul> .msg<pre><code># Position2D.msg\nfloat64 x\nfloat64 y\nfloat64 theta\n</code></pre> .srv<pre><code># ComputePath.srv\nPosition2D start\nPosition2D goal\n---\nPosition2D[] path\n</code></pre> <p>Not</p> <p><code>---</code> sat\u0131r\u0131, request ile response b\u00f6l\u00fcmlerini ay\u0131r\u0131r. Action dosyalar\u0131nda <code>---</code> ayrac\u0131 iki kez kullan\u0131l\u0131r: Goal ile Result aras\u0131, Result ile Feedback aras\u0131</p> <ul> <li>Yeni Dosya Ekledikten Sonra </li> </ul> <pre><code>colcon build --packages-select my_pkg --allow-overriding\n</code></pre> <pre><code>ros2 interface list                       # T\u00fcm msg/srv/\u2014action aray\u00fczlerini listeler\nros2 interface packages                   # Aray\u00fcz tan\u0131ml\u0131 paketleri listeler\nros2 interface package my_pkg             # Paketin i\u00e7erdi\u011fi msg/srv/action dosyalar\u0131n\u0131 g\u00f6sterir\nros2 interface show my_robot_interfaces/Position2D  # Belirli bir mesaj\u0131n i\u00e7eri\u011fini g\u00f6sterir\n</code></pre>"},{"location":"robotics/ros2/#parametreler","title":"Parametreler","text":"<ul> <li>Parametreler, bir node\u2019un \u00e7al\u0131\u015fma zaman\u0131ndaki yap\u0131land\u0131rma de\u011ferleridir (\u00f6r. h\u0131z s\u0131n\u0131rlar\u0131, PID katsay\u0131lar\u0131, yol planlama se\u00e7enekleri).</li> <li>T\u00fcr\u00fc: int, float, bool, string, list vb.</li> <li>Kod yeniden derlenmeden de runtime\u2019da g\u00fcncellenebilir.</li> </ul> Temel Komutlar<pre><code># Node\u2019daki t\u00fcm parametreleri listeler\nros2 param list /my_node\n\n# Belirli bir parametrenin tan\u0131m\u0131n\u0131 g\u00f6sterir\nros2 param describe /my_node max_speed\n\n# Parametre de\u011ferini g\u00f6r\u00fcnt\u00fcler\nros2 param get /my_node max_speed\n\n# Parametre de\u011ferini atar\nros2 param set /my_node max_speed 2.5\n</code></pre> config/my_params.yaml<pre><code>my_node:\n  ros__parameters:\n    max_speed: 3.0\n    enabled: true\n    waypoints: [ [0,0], [1,1], [2,2] ]\n</code></pre> Y\u00fckleme<pre><code>ros2 run my_pkg my_node --ros-args --params-file config/my_params.yaml\n</code></pre> Dump / Load<pre><code># Aktif parametreleri dosyaya kaydet\nros2 param dump /my_node &gt; params.yaml\n\n# Dosyadan parametreleri y\u00fckle\nros2 param load /my_node params.yaml\n</code></pre>"},{"location":"robotics/ros2/#kayt-yeniden-oynatma-ros2-bag","title":"Kay\u0131t &amp; Yeniden Oynatma (ros2 bag)","text":"record<pre><code># Belirli bir topic\u2019i kaydet\nros2 bag record /cmd_vel\n\n# T\u00fcm aktif topic\u2019leri kaydet\nros2 bag record -a\n\n# Belirli topic\u2019lerin alt k\u00fcmesini kaydet, dosya ad\u0131 \u201csubset\u201d olsun\nros2 bag record -o subset /turtle1/cmd_vel /turtle1/pose\n</code></pre> <ul> <li>Kay\u0131t dosyalar\u0131: <code>YYYY_MM_DD_HH_MM_SS</code> format\u0131nda klas\u00f6r olarak olu\u015fturulur.</li> <li><code>-o &lt;isim&gt;</code> ile klas\u00f6r ad\u0131n\u0131 belirleyebilirsiniz.</li> </ul> info<pre><code>ros2 bag info subset\n</code></pre> play<pre><code>ros2 bag play subset\nros2 bag play --loop subset\n</code></pre>"},{"location":"robotics/ros2/#ek-ipuclar","title":"Ek \u0130pu\u00e7lar\u0131","text":"<p>Gazebo ile Entegrasyon<pre><code>export GZ_VERSION=garden\nexport GZ_SIM_RESOURCE_PATH=~/models:~/other_models\nexport GZ_SIM_SYSTEM_PLUGIN_PATH=~/build/plugins\n</code></pre> RMW Middleware Se\u00e7imi<pre><code>export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\n# veya\nexport RMW_IMPLEMENTATION=rmw_fastrtps_cpp\n</code></pre> PlotJuggler ile G\u00f6rselle\u015ftirme<pre><code>sudo snap install plotjuggler\nros2 run plotjuggler plotjuggler\n</code></pre></p>"}]}